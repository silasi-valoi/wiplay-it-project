{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nexports.__esModule = true;\n\nvar React = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar autosize = require(\"autosize\");\n\nvar _getLineHeight = require(\"line-height\");\n\nvar getLineHeight = _getLineHeight;\nvar RESIZED = \"autosize:resized\";\n/**\n * A light replacement for built-in textarea component\n * which automaticaly adjusts its height to match the content\n */\n\nvar TextareaAutosizeClass =\n/** @class */\nfunction (_super) {\n  __extends(TextareaAutosizeClass, _super);\n\n  function TextareaAutosizeClass() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      lineHeight: null\n    };\n    _this.textarea = _this.props.innerRef || React.createRef();\n\n    _this.onResize = function (e) {\n      if (_this.props.onResize) {\n        _this.props.onResize(e);\n      }\n    };\n\n    _this.updateLineHeight = function () {\n      if (_this.textarea.current) {\n        _this.setState({\n          lineHeight: getLineHeight(_this.textarea.current)\n        });\n      }\n    };\n\n    _this.onChange = function (e) {\n      var onChange = _this.props.onChange;\n      _this.currentValue = e.currentTarget.value;\n      onChange && onChange(e);\n    };\n\n    return _this;\n  }\n\n  TextareaAutosizeClass.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var _a = this.props,\n        maxRows = _a.maxRows,\n        async = _a.async;\n\n    if (typeof maxRows === \"number\") {\n      this.updateLineHeight();\n    }\n\n    if (typeof maxRows === \"number\" || async) {\n      /*\n        the defer is needed to:\n          - force \"autosize\" to activate the scrollbar when this.props.maxRows is passed\n          - support StyledComponents (see #71)\n      */\n      setTimeout(function () {\n        return _this.textarea.current && autosize(_this.textarea.current);\n      });\n    } else {\n      this.textarea.current && autosize(this.textarea.current);\n    }\n\n    if (this.textarea.current) {\n      this.textarea.current.addEventListener(RESIZED, this.onResize);\n    }\n  };\n\n  TextareaAutosizeClass.prototype.componentWillUnmount = function () {\n    if (this.textarea.current) {\n      this.textarea.current.removeEventListener(RESIZED, this.onResize);\n      autosize.destroy(this.textarea.current);\n    }\n  };\n\n  TextareaAutosizeClass.prototype.render = function () {\n    var _a = this,\n        _b = _a.props,\n        onResize = _b.onResize,\n        maxRows = _b.maxRows,\n        onChange = _b.onChange,\n        style = _b.style,\n        innerRef = _b.innerRef,\n        children = _b.children,\n        props = __rest(_b, [\"onResize\", \"maxRows\", \"onChange\", \"style\", \"innerRef\", \"children\"]),\n        lineHeight = _a.state.lineHeight;\n\n    var maxHeight = maxRows && lineHeight ? lineHeight * maxRows : null;\n    return React.createElement(\"textarea\", __assign({}, props, {\n      onChange: this.onChange,\n      style: maxHeight ? __assign({}, style, {\n        maxHeight: maxHeight\n      }) : style,\n      ref: this.textarea\n    }), children);\n  };\n\n  TextareaAutosizeClass.prototype.componentDidUpdate = function () {\n    this.textarea.current && autosize.update(this.textarea.current);\n  };\n\n  TextareaAutosizeClass.defaultProps = {\n    rows: 1,\n    async: false\n  };\n  TextareaAutosizeClass.propTypes = {\n    rows: PropTypes.number,\n    maxRows: PropTypes.number,\n    onResize: PropTypes.func,\n    innerRef: PropTypes.object,\n    async: PropTypes.bool\n  };\n  return TextareaAutosizeClass;\n}(React.Component);\n\nexports.TextareaAutosize = React.forwardRef(function (props, ref) {\n  return React.createElement(TextareaAutosizeClass, __assign({}, props, {\n    innerRef: ref\n  }));\n});","map":null,"metadata":{},"sourceType":"script"}