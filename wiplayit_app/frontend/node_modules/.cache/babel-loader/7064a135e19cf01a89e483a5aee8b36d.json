{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_great_grand_child_page.js\";\nimport React, { Component } from 'react';\nimport AjaxLoader from \"components/ajax-loader\";\nimport * as action from 'actions/actionCreators';\nimport * as types from 'actions/types';\nimport { getReplyChildrenList } from \"dispatch/index\";\nimport { store } from \"index\";\nimport { Reply } from \"components/reply_components\";\nimport Api from 'api';\nconst api = new Api();\n\nclass ReplyGreatGrandChildBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReplyGreatGrandChildBox: true,\n      byId: ''\n    };\n  }\n\n  componentDidMount() {\n    var reply = this.props.reply;\n    console.log(reply);\n\n    if (reply) {\n      var _this$props$props = this.props.props,\n          post = _this$props$props.post,\n          answer = _this$props$props.answer;\n      var byId = '';\n\n      if (post) {\n        byId = \"postReplyGreatGrandChild\".concat(reply.id);\n      } else {\n        byId = \"answerReplyGreatGrandChild\".concat(reply.id);\n      }\n\n      this.setState({\n        byId\n      });\n      var props = {\n        actionType: 'GET_REPLY_CHILD_LINK_DATA',\n        reply,\n        byId\n      };\n      store.dispatch(action.getReplyChildLindData(props));\n    }\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidUpdate(nextProps, prevState) {}\n\n  getProps() {\n    let props = {\n      isReplyGreatGrandChildBox: this.state.isReplyGreatGrandChildBox\n    };\n    return Object.assign(props, this.props.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    var replyParent = this.props.reply;\n    let byId = this.state.byId;\n    var replies = props.entyties.replies;\n    replies = replies.byId[byId];\n    var apiUrl = '';\n\n    if (props.isAnswerBox && replies) {\n      apiUrl = api.getAnswerReplyChildrenListApi(replyParent.id);\n    } else {\n      apiUrl = api.getPostReplyChildrenListApi(replyParent.id);\n    }\n\n    var linkProps = {\n      actionType: types.GET_REPLY_CHILD_LIST,\n      apiUrl: apiUrl,\n      byId,\n      children: replyParent.children\n    };\n    let replyStyles = {\n      border: 'px solid green',\n      margin: '15px 22px 10px 75px'\n    };\n    console.log(byId, replies, replyParent);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, replies ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, replies.showLink ? React.createElement(\"div\", {\n      onClick: () => props.getReplyChildrenList(linkProps),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Click to view More\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, replies.linkData.totalReplies))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, replies.isLoading ? React.createElement(\"div\", {\n      className: \"spin-loader-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, replies.replyList.map((reply, index) => {\n      let replyProps = {\n        replyParent,\n        reply,\n        replyStyles,\n        index,\n        byId,\n        props\n      };\n      return React.createElement(\"div\", {\n        key: props.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(GraetGrandChildComponent, Object.assign({}, replyProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })));\n    }))))) : \"\");\n  }\n\n}\n\n;\nexport default ReplyGreatGrandChildBox;\n\nconst GraetGrandChildComponent = props => {\n  let replyParent = props.replyParent,\n      reply = props.reply;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, props.replyParent.id === props.reply.parent ? React.createElement(\"div\", {\n    className: \"reply-great-grand-child-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reply-great-grand-child-contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Reply, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }))), reply.has_children ? React.createElement(ReplyGreatGrandChildBox, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })) : '') : \"\");\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_great_grand_child_page.js"],"names":["React","Component","AjaxLoader","action","types","getReplyChildrenList","store","Reply","Api","api","ReplyGreatGrandChildBox","constructor","props","state","isReplyGreatGrandChildBox","byId","componentDidMount","reply","console","log","post","answer","id","setState","actionType","dispatch","getReplyChildLindData","componentDidCatch","error","info","componentDidUpdate","nextProps","prevState","getProps","Object","assign","render","replyParent","replies","entyties","apiUrl","isAnswerBox","getAnswerReplyChildrenListApi","getPostReplyChildrenListApi","linkProps","GET_REPLY_CHILD_LIST","children","replyStyles","border","margin","showLink","linkData","totalReplies","isLoading","replyList","map","index","replyProps","GraetGrandChildComponent","parent","has_children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  AjaxLoader from \"components/ajax-loader\";\nimport  * as action  from 'actions/actionCreators';\nimport  * as types  from 'actions/types';\nimport { getReplyChildrenList } from  \"dispatch/index\";\nimport {store} from \"index\";\nimport {Reply } from \"components/reply_components\";\nimport Api from 'api';\n\n\n \nconst api      = new Api();\n\n\n\n\nclass ReplyGreatGrandChildBox extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isReplyGreatGrandChildBox : true,\n            byId                     : '',\n        };\n    };\n\n\n    componentDidMount() {\n        var reply  = this.props.reply;\n        console.log(reply)\n\n        if (reply) {\n            var { post, answer} = this.props.props;\n            \n            var byId = '';\n\n            if (post) {\n                byId = `postReplyGreatGrandChild${reply.id}`;\n            }else{\n                byId = `answerReplyGreatGrandChild${reply.id}`;\n            }\n\n            \n            this.setState({byId});\n\n            var props = {\n                actionType : 'GET_REPLY_CHILD_LINK_DATA',\n                reply,\n                byId,\n            }\n\n            store.dispatch(action.getReplyChildLindData(props)); \n        }\n    };\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.log(error, info);\n    } \n\n   componentDidUpdate(nextProps, prevState) {\n      \n   }; \n  \n   getProps() {\n        let props = {\n           isReplyGreatGrandChildBox  : this.state.isReplyGreatGrandChildBox,\n        }\n\n        return Object.assign(props, this.props.props);\n   };\n\n\n    render() {\n\n        let props       =  this.getProps();\n        var replyParent =  this.props.reply;\n        let byId        =  this.state.byId;\n        var replies     =  props.entyties.replies;\n        replies         =  replies.byId[byId]; \n\n        var apiUrl = '';\n\n        if (props.isAnswerBox && replies) { \n           apiUrl = api.getAnswerReplyChildrenListApi(replyParent.id);\n\n        }\n\n        else{\n            apiUrl = api.getPostReplyChildrenListApi(replyParent.id);\n        }\n\n        var linkProps = {\n            actionType: types.GET_REPLY_CHILD_LIST,\n            apiUrl    : apiUrl,\n            byId,\n            children  : replyParent.children,\n        };   \n\n        let replyStyles = {\n            border     : 'px solid green',\n            margin     : '15px 22px 10px 75px'\n        };\n\n        console.log(byId,replies, replyParent)\n\n      \n        return (\n            <div>\n                {replies?\n                    <div>\n                        { replies.showLink?\n                           <div onClick={ () => props.getReplyChildrenList( linkProps ) }> \n                               <ul>\n                                   <li>Click to view More</li>\n                                   <li>{ replies.linkData.totalReplies }</li>\n                                </ul>\n                            </div>                   \n   \n                            :\n  \n                            <div>\n                                { replies.isLoading?\n                                    <div className=\"spin-loader-box\">\n                                        <AjaxLoader/>\n                                    </div>\n\n                                    :\n\n                                    <div>\n\n                                        <div>\n                                            { replies.replyList.map( (reply, index) => {\n\n                                                let replyProps = {\n                                                       replyParent,\n                                                       reply, \n                                                       replyStyles,\n                                                       index,\n                                                       byId,\n                                                       props}\n                                                \n                                                return(\n\n                                                    <div  key={props.index}>\n                                                        <GraetGrandChildComponent {...replyProps}/>\n                                                    </div>\n                                                )\n                                            })}\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        }\n                    </div>\n\n                    :\n                   \"\"\n                }\n           \n            </div>   \n        ); \n    };\n  \n};\n\n\nexport default ReplyGreatGrandChildBox;\n\n\n\n\n\n\nconst GraetGrandChildComponent = props => {\n    let { replyParent, reply } = props\n\n    return(\n            <div>\n                { props.replyParent.id === props.reply.parent?\n\n                    <div className=\"reply-great-grand-child-container\">\n\n                        <div className=\"reply-great-grand-child-contents\">\n                            <Reply {...props}/>\n                        </div>\n\n                        { reply.has_children?\n\n                            <ReplyGreatGrandChildBox {...props}/>\n\n                            :\n                            ''\n                        }\n                    </div>\n\n                    :\n                    \"\"\n                }\n            </div>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}