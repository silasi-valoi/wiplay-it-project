{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/main/replies.js\";\nimport React from 'react';\nimport Helper from 'containers/utils/helpers';\nimport Api from 'api';\nconst api = new Api();\nconst helper = new Helper();\nexport function withReplies(Component) {\n  return class ReplyComponent extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        replyState: {\n          replyList: [],\n          newReply: [],\n          replyLinkData: {},\n          haveRepliesLink: false,\n          haveReplies: false,\n          haveNewReply: false,\n          showAjaxLoader: false\n        },\n        replyChildState: {\n          replyList: [],\n          newReply: [],\n          replyLinkData: {},\n          haveRepliesLink: false,\n          haveReplies: false,\n          haveNewReply: false,\n          showAjaxLoader: false\n        },\n        replyGrandChildState: {\n          replyList: [],\n          newReply: [],\n          replyLinkData: {},\n          haveRepliesLink: false,\n          haveReplies: false,\n          haveNewReply: false,\n          showAjaxLoader: false\n        },\n        replyGreatGrandChildState: {\n          replyList: [],\n          newReply: [],\n          replyLinkData: {},\n          haveRepliesLink: false,\n          haveReplies: false,\n          haveNewReply: false,\n          showAjaxLoader: false\n        }\n      };\n      this.createReply = this.createReply.bind(this);\n      this.editReply = this.editReply.bind(this);\n      this.upVoteReply = this.upVoteReply.bind(this);\n      this.downVoteReply = this.downVoteReply.bind(this);\n      this.getReplyList = this.getReplyList.bind(this);\n      this.getReplyChildrenList = this.getReplyChildrenList.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n      console.log(this.props);\n      let replyList = [];\n      let state = {};\n\n      if (this.props.isCommentBox) {\n        if (this.props.comment) {\n          state = this.state.replyState;\n          replyList = this.props.comment.replies;\n\n          if (replyList.length > 0) {\n            state.replyLinkData['getChildren'] = this.getReplyList;\n            this.updateReplyLink(state, replyList);\n          }\n        }\n      } else if (this.props.reply) {\n        if (this.props.reply.has_children) {\n          replyList = this.props.reply.children;\n\n          if (this.props.isReplyBox) {\n            state = this.state.replyChildState;\n          } else if (this.props.isReplyChildBox) {\n            state = this.state.replyGrandChildState;\n          } else if (this.props.isReplyGrandChildBox) {\n            state = this.state.replyGreatGrandChildState;\n          } else if (this.props.isReplyGreatGrandChildBox) {\n            state = this.state.replyGreatGrandChildState;\n            console.log(this.props);\n          }\n\n          state.replyLinkData['getChildren'] = this.getReplyChildrenList;\n          this.updateReplyLink(state, replyList);\n        }\n      }\n    }\n\n    componentDidUpdate(nextProps, prevState) {\n      console.log(nextProps !== this.props);\n\n      if (nextProps !== this.props) {\n        if (this.props.comment) {\n          let newReply = this.props.newReply;\n\n          if (newReply !== \"\") {\n            let state = this.state.replyState;\n            console.log(state);\n            state.replyList.unshift(newReply);\n            state['haveReplies'] = true;\n            this.setState({\n              state\n            });\n          }\n        } else if (this.props.reply) {\n          //let newReply = this.props.newReply;\n          console.log(this.props);\n        }\n      }\n    }\n\n    updateReplyLink(state, replyList, isReplyChildBox = false) {\n      console.log(state);\n\n      if (isReplyChildBox) {}\n\n      state.replyLinkData['reply'] = replyList[0];\n      state.replyLinkData['replyCount'] = replyList.length;\n      state['haveRepliesLink'] = true;\n      this.setState({\n        state\n      });\n    }\n\n    openEditor(props) {//Open the modal with the  editor editablecontent component \n    }\n\n    getReplyData(params) {\n      let data = this.getProps();\n\n      if (params.isReplyBox) {\n        data['isReplyBox'] = true;\n        data['state'] = this.state.replyState;\n      } else if (params.isReplyChildBox) {\n        data['isReplyChildBox'] = true;\n        data['state'] = this.state.replyChildState;\n      } else if (params.isReplyGrandChildBox) {\n        data['isReplyGrandChildBox'] = true;\n        data['state'] = this.state.replyGrandChildState;\n      } else if (params.isReplyGreatGrandChildBox) {\n        data['isReplyGreatGrandChildBox'] = true;\n        data['state'] = this.state.replyGreatGrandChildState;\n      }\n\n      if (params.reply) {\n        data['obj'] = params.reply;\n        data['objIndex'] = params.index;\n        data['objId'] = params.reply.id;\n      }\n\n      if (params.isAnswerBox) {\n        data['apiUrl'] = api.updateReplyApi(this, params.reply.id);\n      } else if (params.isPostBox || params.isPostListBox) {\n        data['apiUrl'] = api.updatePostReplyApi(this, params.reply.id);\n      }\n\n      data['objName'] = 'reply';\n      data['editorPlaceHolder'] = \"Your Reply...\";\n      return data;\n    }\n\n    upVoteReply(params) {\n      console.log(params);\n      let context = this.getReplyData(params);\n      context['isUpvote'] = true;\n      context['isPut'] = true;\n      helper.upVote(this, context);\n    }\n\n    downVoteReply(params) {\n      console.log(params);\n      let context = this.getReplyData(params);\n      context['isPut'] = true;\n      context['isUpvote'] = true;\n      context['isUpvote'] = true;\n      helper.downVote(this, context);\n    }\n\n    getNewReply(comment) {}\n\n    editReply(params) {}\n\n    createReply(params) {\n      console.log(params);\n    }\n\n    handleSubmit(params) {\n      let props = this.getReplyData(params); //Add some important data props before be we do some conditional \n      //Checks.\n\n      console.log(props);\n      props['objIndex'] = params.objIndex;\n      props['objName'] = params.objName;\n      props['objId'] = params.objId;\n      props['formData'] = helper.creatFormeData({\n        reply: params.editorContents\n      });\n\n      if (params.isEdit) {\n        //The submission is for editing existing data on the server\n        props['isPut'] = true;\n\n        if (params.isAnswerBox) {\n          props['apiUrl'] = api.updateReplyApi(this, params.objId);\n        } else if (params.isPostBox || params.isPostListBox) {\n          props['apiUrl'] = api.updatePostReplyApi(this, params.objId);\n        }\n      } else if (params.isPost) {\n        //The submission is for creating new data on the server\n        props['isPost'] = true;\n        props['isNewReply'] = true;\n\n        if (params.isAnswerBox) {\n          props['apiUrl'] = api.createReplyChildApi(this, params.objId);\n        } else if (params.isPostBox || params.isPostListBox) {\n          props['apiUrl'] = api.createPostReplyChildApi(this, params.objId);\n        }\n      }\n\n      helper.sendRequest(this, props);\n    }\n\n    getReplyList(params) {\n      let self = this; //let apiUrl = \"\"\n\n      console.log(params);\n      console.log(this.props);\n      let props = this.getReplyData(params);\n\n      if (this.props.isPostBox || this.props.isPostListBox) {\n        let id = this.props.comment.id;\n        props['apiUrl'] = api.getPostReplyListApi(this, id);\n      } else if (this.props.isAnswerBox) {\n        let id = this.props.comment.id;\n        props['apiUrl'] = api.getReplyListApi(this, id);\n      } else {\n        let id = params.reply.id; //\n\n        props['apiUrl'] = api.getReplyListApi(this, id);\n      }\n\n      this.setState({\n        showAjaxLoader: true,\n        haveRepliesLink: true\n      });\n      props['objName'] = \"reply\";\n      props['isGet'] = true;\n      helper.sendRequest(self, props);\n    }\n\n    getReplyChildrenList(params) {\n      let props = this.getReplyData(params);\n      let id = params.reply.parent;\n\n      if (this.props.isPostBox || this.props.isPostListBox) {\n        props['apiUrl'] = api.getPostReplyChildrenListApi(this, id);\n      } else if (this.props.isAnswerBox) {\n        props['apiUrl'] = api.getReplyChildrenListApi(this, id);\n      }\n\n      props['objName'] = \"reply\";\n      props['isGet'] = true;\n      this.setState({\n        showAjaxLoader: true,\n        haveRepliesLink: true\n      });\n      helper.sendRequest(this, props);\n    }\n\n    getProps() {\n      let props = {\n        createReply: this.createReply,\n        editReply: this.editReply,\n        upVoteReply: this.upVoteReply,\n        downVoteReply: this.downVoteReply,\n        handleSubmit: this.handleSubmit,\n        replyState: this.state.replyState,\n        replyChildState: this.state.replyChildState,\n        replyGrandChildState: this.state.replyGrandChildState,\n        replyGreatGrandChildState: this.state.replyGreatGrandChildState\n      };\n      let _this$props = this.props,\n          currentUser = _this$props.currentUser,\n          openOptionsModal = _this$props.openOptionsModal;\n      Object.assign(props, {\n        currentUser,\n        openOptionsModal\n      });\n\n      if (this.props.isAnswerBox) {\n        let isAnswerBox = this.props.isAnswerBox;\n        Object.assign(props, {\n          isAnswerBox\n        });\n      } else if (this.props.isPostBox || this.props.isPostListBox) {\n        let _this$props2 = this.props,\n            isPostBox = _this$props2.isPostBox,\n            isPostListBox = _this$props2.isPostListBox;\n        Object.assign(props, {\n          isPostBox,\n          isPostListBox\n        });\n      }\n\n      if (this.props.isCommentBox) {\n        let comment = this.props.comment;\n        Object.assign(props, {\n          comment\n        });\n      } else if (this.props.reply) {\n        let reply = this.props.reply;\n        Object.assign(props, {\n          reply\n        });\n      }\n\n      return props;\n    }\n\n    render() {\n      let props = this.getProps();\n      console.log(props);\n      return React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }));\n    }\n\n  };\n}\nexport default withReplies;","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/main/replies.js"],"names":["React","Helper","Api","api","helper","withReplies","Component","ReplyComponent","constructor","props","state","replyState","replyList","newReply","replyLinkData","haveRepliesLink","haveReplies","haveNewReply","showAjaxLoader","replyChildState","replyGrandChildState","replyGreatGrandChildState","createReply","bind","editReply","upVoteReply","downVoteReply","getReplyList","getReplyChildrenList","handleSubmit","componentDidMount","console","log","isCommentBox","comment","replies","length","updateReplyLink","reply","has_children","children","isReplyBox","isReplyChildBox","isReplyGrandChildBox","isReplyGreatGrandChildBox","componentDidUpdate","nextProps","prevState","unshift","setState","openEditor","getReplyData","params","data","getProps","index","id","isAnswerBox","updateReplyApi","isPostBox","isPostListBox","updatePostReplyApi","context","upVote","downVote","getNewReply","objIndex","objName","objId","creatFormeData","editorContents","isEdit","isPost","createReplyChildApi","createPostReplyChildApi","sendRequest","self","getPostReplyListApi","getReplyListApi","parent","getPostReplyChildrenListApi","getReplyChildrenListApi","currentUser","openOptionsModal","Object","assign","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport  Helper from 'containers/utils/helpers';\n\n\nimport Api from 'api';\n\n\n\n\n\nconst api = new Api();\nconst helper = new Helper();\n\n\n\n\n\nexport function withReplies(Component) {\n   return class ReplyComponent extends Component {\n\n   constructor(props) {\n      super(props);\n\n      this.state = {\n\n         replyState    : {\n            replyList               : [],\n            newReply                : [],\n            replyLinkData           : {},\n            haveRepliesLink         : false,\n            haveReplies             : false,\n            haveNewReply            : false,\n            showAjaxLoader          : false,\n            \n         },\n\n         replyChildState  : {\n            replyList               : [],\n            newReply                : [],\n            replyLinkData           : {},\n            haveRepliesLink         : false,\n            haveReplies             : false,\n            haveNewReply            : false,\n            showAjaxLoader          : false,\n         },\n\n         replyGrandChildState   : {\n            replyList              : [],\n            newReply               : [],\n            replyLinkData          : {},\n            haveRepliesLink        : false,\n            haveReplies            : false,\n            haveNewReply           : false,\n            showAjaxLoader          : false,\n\n         },\n\n         replyGreatGrandChildState : {\n            replyList               : [],\n            newReply                : [],\n            replyLinkData           : {},\n            haveRepliesLink         : false,\n            haveReplies             : false,\n            haveNewReply            : false,\n            showAjaxLoader          : false,\n         },\n      };\n\n         this.createReply          = this.createReply.bind(this);\n         this.editReply            = this.editReply.bind(this);\n         this.upVoteReply          = this.upVoteReply.bind(this);\n         this.downVoteReply        = this.downVoteReply.bind(this);\n         this.getReplyList         = this.getReplyList.bind(this);\n         this.getReplyChildrenList = this.getReplyChildrenList.bind(this);\n         this.handleSubmit         = this.handleSubmit.bind(this);\n      };\n\n\n      componentDidMount() {\n         console.log(this.props)\n         let replyList  =  [];\n         let state      =  {};\n         \n         if (this.props.isCommentBox) {\n            \n            if (this.props.comment) {\n               state = this.state.replyState \n               replyList = this.props.comment.replies;\n\n               if (replyList.length > 0 ) {\n                  state.replyLinkData['getChildren']  = this.getReplyList;\n                  this.updateReplyLink(state, replyList)\n               }\n            }\n         }\n\n         else if (this.props.reply) {\n            if (this.props.reply.has_children) {\n                  replyList    =  this.props.reply.children;\n\n               \n               if (this.props.isReplyBox){\n                  state = this.state.replyChildState \n               }\n\n               else if(this.props.isReplyChildBox) {\n                  state = this.state.replyGrandChildState; \n               }\n\n               else if(this.props.isReplyGrandChildBox) {\n                  state = this.state.replyGreatGrandChildState; \n               }\n\n               else if(this.props.isReplyGreatGrandChildBox) {\n                  state = this.state.replyGreatGrandChildState; \n                  console.log(this.props)\n\n               }\n\n               state.replyLinkData['getChildren'] = this.getReplyChildrenList;\n               this.updateReplyLink(state, replyList);\n            }  \n         }\n              \n      };\n\n\n      componentDidUpdate(nextProps, prevState) {\n         console.log(nextProps !== this.props)\n         \n         if (nextProps !== this.props ) {\n                        \n            if (this.props.comment) {\n               \n               let newReply = this.props.newReply;\n               if (newReply !== \"\" ) {\n                  let state = this.state.replyState;\n                  console.log(state) \n                  state.replyList.unshift(newReply)\n                  state['haveReplies']     = true;\n                  \n                  this.setState({ state })\n               }\n            }\n\n            else if(this.props.reply){\n               //let newReply = this.props.newReply;\n               console.log(this.props)\n            }\n         }\n      } \n   \n\n      updateReplyLink(state, replyList, isReplyChildBox=false) {\n         console.log(state)\n          \n         if (isReplyChildBox) {\n            \n         }\n\n         state.replyLinkData['reply']           = replyList[0];\n         state.replyLinkData['replyCount']      = replyList.length;\n         state['haveRepliesLink']  = true; \n         this.setState({ state });\n\n      }\n\n      openEditor(props) {\n         //Open the modal with the  editor editablecontent component \n      }\n\n      getReplyData(params) {\n         let data    = this.getProps();\n\n         if (params.isReplyBox) {\n            data['isReplyBox'] = true;\n            data['state']      = this.state.replyState\n\n         }\n\n         else if(params.isReplyChildBox) {\n           data['isReplyChildBox'] = true;\n           data['state']          = this.state.replyChildState\n         }\n\n         else if(params.isReplyGrandChildBox){\n            data['isReplyGrandChildBox'] = true;\n            data['state'] = this.state.replyGrandChildState;\n         }\n\n         else if(params.isReplyGreatGrandChildBox){\n            data['isReplyGreatGrandChildBox'] = true;\n            data['state'] = this.state.replyGreatGrandChildState;\n         }\n\n         if (params.reply) {\n            data['obj']       =   params.reply;\n            data['objIndex']  =   params.index;\n            data['objId']     =   params.reply.id;\n         }\n\n         if (params.isAnswerBox) {\n               data['apiUrl']   = api.updateReplyApi(this, params.reply.id);\n            \n         }\n\n         else if(params.isPostBox || params.isPostListBox ){\n            data['apiUrl']   = api.updatePostReplyApi(this, params.reply.id);\n         }\n\n         data['objName']   =  'reply';\n         data['editorPlaceHolder'] = \"Your Reply...\";\n\n\n         return data;\n      }\n   \n\n      upVoteReply(params) {\n        console.log(params)\n         let context = this.getReplyData(params)\n         context['isUpvote']   = true\n         context['isPut']      = true;\n         helper.upVote(this, context);\n\n      };\n\n      downVoteReply(params) {\n         console.log(params)\n         \n         let context = this.getReplyData(params)\n         \n         context['isPut']     =  true;\n         context['isUpvote']  =  true\n         context['isUpvote']  =  true\n         helper.downVote(this, context);\n\n      };\n  \n      getNewReply(comment) {\n\n      }\n\n      editReply(params) {\n      }\n\n      createReply(params) {\n         console.log(params)\n            };\n\n\n      handleSubmit(params) {\n         \n         let props  = this.getReplyData(params);\n         //Add some important data props before be we do some conditional \n         //Checks.\n         console.log(props)\n         props['objIndex'] = params.objIndex;\n         props['objName']  = params.objName;\n         props['objId']    = params.objId;\n         props['formData'] = helper.creatFormeData({reply: params.editorContents});\n         if (params.isEdit) {\n            //The submission is for editing existing data on the server\n            props['isPut']        = true;\n            if (params.isAnswerBox) {\n               props['apiUrl']   = api.updateReplyApi(this, params.objId);\n            }\n            else if(params.isPostBox || params.isPostListBox ){\n               props['apiUrl']   = api.updatePostReplyApi(this, params.objId);\n            }\n         }\n\n         else if (params.isPost) {\n            //The submission is for creating new data on the server\n            props['isPost']        = true;\n            props['isNewReply']    = true;\n            if (params.isAnswerBox ){\n               props['apiUrl']   = api.createReplyChildApi(this, params.objId);\n            } \n            else if(params.isPostBox || params.isPostListBox ){\n               props['apiUrl']   =  api.createPostReplyChildApi(this, params.objId);\n            }\n     \n         }\n\n         helper.sendRequest(this, props); \n         \n      }; \n  \n      getReplyList(params) {\n         let self = this;\n         //let apiUrl = \"\"\n         console.log(params)\n         console.log(this.props)\n           \n         let props  = this.getReplyData(params);\n\n         if (this.props.isPostBox || this.props.isPostListBox ) {\n            let id = this.props.comment.id\n            props['apiUrl'] = api.getPostReplyListApi(this, id)\n         }\n\n         else if (this.props.isAnswerBox) {\n            let id = this.props.comment.id\n            props['apiUrl'] = api.getReplyListApi(this, id)\n         }\n         else{\n            let id = params.reply.id //\n            props['apiUrl'] = api.getReplyListApi(this, id)\n         }\n         \n         this.setState({showAjaxLoader : true, haveRepliesLink : true});\n         props['objName']     = \"reply\"\n         props['isGet']       =  true;\n         helper.sendRequest(self, props);   \n        \n      };\n\n\n\n      getReplyChildrenList(params) {\n         let props  = this.getReplyData(params);\n         let id = params.reply.parent;\n\n         if (this.props.isPostBox || this.props.isPostListBox ) {\n            props['apiUrl']  = api.getPostReplyChildrenListApi(this, id);\n         }\n         else if (this.props.isAnswerBox) {\n            props['apiUrl']  = api.getReplyChildrenListApi(this, id);\n         }\n\n         props['objName'] = \"reply\"\n         props['isGet']   =  true;\n         this.setState({showAjaxLoader : true, haveRepliesLink : true});\n                           \n         helper.sendRequest(this, props); \n     \n      };\n\n\n      getProps() {\n        \n         let props = {\n            createReply               : this.createReply,\n            editReply                 : this.editReply,\n            upVoteReply               : this.upVoteReply,\n            downVoteReply             : this.downVoteReply,\n            handleSubmit              : this.handleSubmit,\n            replyState                : this.state.replyState,\n            replyChildState           : this.state.replyChildState,\n            replyGrandChildState      : this.state.replyGrandChildState,\n            replyGreatGrandChildState : this.state.replyGreatGrandChildState,\n\n         } \n        \n         let  { currentUser, openOptionsModal} = this.props;\n         Object.assign(props, {currentUser, openOptionsModal});\n\n         if (this.props.isAnswerBox) {\n            let  {isAnswerBox} = this.props;\n            Object.assign(props, {isAnswerBox})\n         }\n\n         else if (this.props.isPostBox || this.props.isPostListBox ) {\n            let  {isPostBox, isPostListBox } = this.props;\n            Object.assign(props, {isPostBox, isPostListBox})\n         }\n\n         if (this.props.isCommentBox) {\n            let  {comment} = this.props;\n            Object.assign(props, {comment})\n         }\n\n         else if (this.props.reply) {\n            let  { reply } = this.props;\n            Object.assign(props, { reply })\n\n         }\n\n         return props;\n      }\n\n\n      render() { \n      let props  = this.getProps();\n      console.log(props)\n     \n      return (\n          <Component {...props}/>\n         )\n      }\n   }\n}\n\n\nexport default withReplies;\n\n\n"]},"metadata":{},"sourceType":"module"}