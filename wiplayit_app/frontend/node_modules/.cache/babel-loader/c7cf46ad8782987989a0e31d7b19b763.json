{"ast":null,"code":"import _defineProperty from \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Helper from 'containers/utils/helpers';\nimport * as types from 'actions/types';\nconst helper = new Helper();\n\nconst populateInitialState = params => {\n  var questions = {\n    isLoading: false,\n    question: \"\",\n    newObject: \"\",\n    answerList: [],\n    answer: \"\",\n    questionHasAnswer: false,\n    userHasAnswer: false,\n    visited: false,\n    error: ''\n  };\n};\n\nconst InitialState = () => {\n  return {\n    userAuth: {\n      isOnSignUpForm: false,\n      isOnPasswordResetForm: false,\n      isLoading: false,\n      auth: {\n        tokenKey: \"\",\n        isLoggedIn: false\n      }\n    },\n    currentUser: {\n      user: \"\"\n    },\n    userProfile: {\n      byId: {},\n      allIds: []\n    },\n    users: {\n      byId: {},\n      allIds: []\n    },\n    index: {\n      isLoading: false,\n      error: ''\n    },\n    questions: {\n      byId: {},\n      allIds: []\n    },\n    posts: {\n      byId: {},\n      allIds: []\n    },\n    question: {\n      byId: {},\n      allIds: []\n    },\n    post: {\n      byId: {},\n      allIds: []\n    },\n    answers: {\n      byId: {},\n      allIds: []\n    },\n    comments: {\n      byId: {},\n      allIds: []\n    },\n    replies: {\n      byId: {},\n      allIds: []\n    }\n  };\n};\n\nexport function entyties(state = InitialState(), action) {\n  switch (action.type) {\n    case types.USER_AUTHENTICATION.PENDING:\n      Object.assign(state, action.payload);\n      return state;\n\n    case types.USER_AUTHENTICATION.SUCCESS:\n      Object.assign(state.userAuth, action.payload);\n      return state;\n\n    case types.USER_AUTHENTICATION.ERROR:\n      Object.assign(state.userAuth, action.payload);\n      return state;\n\n    case types.TOGGLE.SIGNUP_FORM:\n      Object.assign(state.userAuth, action.payload);\n      return state;\n\n    case types.TOGGLE.PASSWORD_RESET_FORM:\n      Object.assign(state.userAuth, action.payload);\n      return state;\n\n    case types.GET_CURRENT_USER.SUCCESS:\n      Object.assign(state.currentUser, action.payload);\n      return state;\n\n    case types.GET_CURRENT_USER.ERROR:\n      Object.assign(state.currentUser, action.payload);\n      return state;\n\n    case types.GET_CURRENT_USER.PENDING:\n      Object.assign(state.currentUser, action.payload);\n      return state;\n\n    case types.GET_USER_PROFILE.PENDING:\n      console.log(action.payload);\n\n      if (!state.userProfile.byId[action.profileById]) {\n        Object.defineProperty(state.userProfile.byId, action.profileById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_USER_PROFILE.SUCCESS:\n      console.log(action.payload);\n      Object.assign(state.userProfile.byId[action.profileById], action.payload);\n      return state;\n\n    case types.GET_USER_PROFILE.ERROR:\n      Object.assign(state.userProfile.byId[action.profileById], action.payload);\n      return state;\n\n    case types.GET_USER_LIST.PENDING:\n      console.log(state, action);\n\n      if (!state.users.byId[action.byId]) {\n        Object.defineProperty(state.users.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_USER_LIST.SUCCESS:\n      Object.assign(state.users.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_USER_LIST.ERROR:\n      Object.assign(state.users.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_INDEX.PENDING:\n      Object.assign(state.index, action.payload);\n      return state;\n\n    case types.GET_INDEX.SUCCESS:\n      console.log(state, action);\n      Object.assign(state.index, action.payload);\n      return state;\n\n    case types.GET_INDEX.ERROR:\n      Object.assign(state.index, action.payload);\n      return state;\n\n    case types.GET_QUESTION_LIST.PENDING:\n      console.log(state, action);\n\n      if (!state.questions.byId[action.byId]) {\n        Object.defineProperty(state.questions.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION_LIST.SUCCESS:\n      Object.assign(state.questions.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_QUESTION_LIST.ERROR:\n      Object.assign(state.questions.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_QUESTION.PENDING:\n      if (!state.question.byId[action.questionById]) {\n        Object.defineProperty(state.question.byId, action.questionById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION.SUCCESS:\n      var question = action.payload.question;\n      var answerById = \"answer\".concat(question.id);\n      var answerState = {\n        answerList: question.answers,\n        newObject: \"\",\n        isLoading: false,\n        visited: false,\n        error: ''\n      };\n      Object.assign(state.question.byId[action.questionById], action.payload);\n\n      if (question.answers.length) {\n        Object.defineProperty(state.answers.byId, answerById, {\n          value: answerState\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION.ERROR:\n      if (state.question.byId[action.questionById]) {\n        Object.assign(state.question.byId[action.questionById], action.payload);\n      }\n\n      return state;\n\n    case types.GET_POST_LIST.PENDING:\n      console.log(state, action);\n\n      if (!state.posts.byId[action.byId]) {\n        Object.defineProperty(state.posts.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_POST_LIST.SUCCESS:\n      console.log(state, action);\n      Object.assign(state.posts.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_POST_LIST.ERROR:\n      Object.assign(state.posts.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_POST.PENDING:\n      if (!state.post.byId[action.postById]) {\n        Object.defineProperty(state.post.byId, action.postById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_POST.SUCCESS:\n      var post = action.payload.post; //var commentById = `commentsPost${post.id}`;\n\n      console.log(state, post);\n      /*\n      var commentsState = {\n         commentList      : post.comments,\n         showLink         : post.comments.length?true:false,\n         isLoading        : false,\n         error            : '',\n         linkData : {\n            comment       : post.comments[0],\n            numOfComments : post.comments.length,\n         },\n      };*/\n\n      Object.assign(state.post.byId[action.postById], action.payload);\n\n      if (post.comments.length) {//Object.defineProperty(state.comments.byId, commentById, {value : commentsState});\n      }\n\n      return state;\n\n    case types.GET_POST.ERROR:\n      Object.assign(state.post.byId[action.postById], action.payload);\n      return state;\n\n    case types.GET_ANSWER_LIST.PENDING:\n      if (!state.answers.byId[action.byId]) {\n        Object.defineProperty(state.answers.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_ANSWER_LIST.SUCCESS:\n      console.log(state.answers, action);\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_ANSWER_LIST.ERROR:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case 'GET_COMMENT_LINK_DATA':\n      if (!state.comments.byId[action.byId]) {\n        Object.defineProperty(state.comments.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.comments.allIds, action.byId, {\n          value: state.comments.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case 'GET_REPLY_LINK_DATA':\n      console.log(action);\n\n      if (!state.replies.byId[action.byId]) {\n        Object.defineProperty(state.replies.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.replies.allIds, action.byId, {\n          value: state.replies.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case 'GET_REPLY_CHILD_LINK_DATA':\n      console.log(action, state.replies);\n\n      if (!state.replies.byId[action.byId]) {\n        Object.defineProperty(state.replies.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.replies.allIds, action.byId, {\n          value: state.replies.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case types.CREATE_QUESTION.PENDING:\n      console.log(action);\n      var questionById = action.ById ? action.ById : \"creatingNewQuestion\";\n\n      if (!state.question.byId[questionById]) {\n        Object.defineProperty(state.question.byId, action.ById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.CREATE_QUESTION.SUCCESS:\n      Object.assign(state.question.byId[action.ById], state, action.payload);\n      return state;\n\n    case types.CREATE_QUESTION.ERROR:\n      console.log(action); //Object.assign(state.question.byId[action.ById], action.payload);\n\n      return state;\n\n    case 'VIEW_NEW_QUESTION':\n      Object.assign(state.question.byId[action.questionById], action.payload);\n      return state;\n\n    case types.CREATE_ANSWER.PENDING:\n      if (!state.answers.byId[action.ById]) {\n        Object.defineProperty(state.answers.byId, action.ById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.CREATE_ANSWER.SUCCESS:\n      Object.assign(state.answers.byId[action.ById], action.payload);\n      return state;\n\n    case types.CREATE_ANSWER.ERROR:\n      Object.assign(state.answers.byId[action.ById], action.payload);\n      return state;\n\n    /* \n     case types.CREATE_COMMENT.PENDING:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;\n      case types.CREATE_COMMENT.SUCCESS:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;\n     \n     case types.CREATE_COMMENT.ERROR:\n       Object.assign(state.comments.byId[action.commentById], action.payload)\n       return state;  \n       */\n\n    case types.GET_COMMENT_LIST.PENDING:\n      console.log(action);\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_LIST.PENDING:\n      console.log(action);\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.PENDING:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.SUCCESS:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.ERROR:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    /*\n    case types.CREATE_REPLY.PENDING:\n    Object.assign(state.replies.byId[action.replyById], action.payload)\n    return state;\n    case types.CREATE_REPLY.SUCCESS:\n    Object.assign(state.replies.byId[action.replyById], state, action.payload)\n    return state;\n        case types.CREATE_REPLY.ERROR:\n    Object.assign(state.replies.byId[action.replyById], action.payload)\n    return state;  \n    */\n\n    case types.UPDATE_USER_PROFILE.PENDING:\n      if (state.userProfile.byId[action.byId]) {\n        var userProfile = state.userProfile.byId[action.byId];\n\n        if (userProfile.user && userProfile.user.user_is_following) {\n          userProfile.user.user_is_following = false;\n        } else {\n          userProfile.user.user_is_following = true;\n        }\n\n        Object.assign(state.userProfile.byId[action.byId], userProfile);\n      }\n\n      return state;\n\n    case types.UPDATE_USER_PROFILE.SUCCESS:\n      Object.assign(state.userProfile.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_USER_PROFILE.ERROR:\n      var profileToUpdate = state.userProfile.byId[action.byId];\n\n      if (profileToUpdate && profileToUpdate.user && profileToUpdate.user.user_is_following) {\n        profileToUpdate.user.is_following = true;\n      } else {\n        profileToUpdate.user.is_following = false;\n      }\n\n      Object.assign(state.userProfile.byId[action.byId], _objectSpread({}, profileToUpdate, {\n        error: action.payload\n      }));\n      return state;\n\n    case types.UPDATE_USER_LIST.PENDING:\n      if (state.users.byId[action.byId]) {\n        Object.assign(state.users.byId[action.byId], action.payload);\n      }\n\n      return state;\n\n    case types.UPDATE_USER_LIST.SUCCESS:\n      var userUpdate = action.payload.user;\n      var usersToUpdate = state.users.byId[action.byId];\n      helper.updateReducerListEntynties(usersToUpdate.userList, userUpdate);\n      return state;\n\n    case types.UPDATE_USER_LIST.ERROR:\n      Object.assign(state.users.byId[action.byId], {\n        error: action.payload\n      });\n      return state;\n\n    case types.UPDATE_QUESTION.PENDING:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_QUESTION.SUCCESS:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_QUESTION.ERROR:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_ANSWER.PENDING:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_ANSWER.SUCCESS:\n      let updatedAnswer = action.payload.answer;\n      var answers = state.answers.byId[action.byId];\n      helper.updateReducerListEntynties(answers.answerList, updatedAnswer);\n      return state;\n\n    case types.UPDATE_ANSWER.ERROR:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_COMMENT.PENDING:\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_COMMENT.SUCCESS:\n      let updatedComment = action.payload.comment;\n      var comments = state.comments.byId[action.byId];\n      helper.updateReducerListEntynties(comments.commentList, updatedComment);\n      return state;\n\n    case types.UPDATE_COMMENT.ERROR:\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_REPLY.PENDING:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_REPLY.SUCCESS:\n      var repliesToUpdate = state.replies.byId[action.byId];\n      let updatedReply = action.payload.reply;\n      helper.updateReducerListEntynties(repliesToUpdate.replyList, updatedReply);\n      return state;\n\n    case types.UPDATE_REPLY.ERROR:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    default:\n      return state;\n  }\n}\nconst modalState = {\n  isOpen: false,\n  modalType: null,\n  modalProps: {}\n};\nexport function modal(state = modalState, action) {\n  switch (action.type) {\n    case 'SHOW_MODAL':\n      console.log(state, action);\n      let newModal = Object.assign({}, state, action.payload);\n      console.log(newModal, state);\n      return newModal;\n\n    case 'HIDE_MODAL':\n      let hideModal = Object.assign({}, state, action.payload);\n      return hideModal;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/reducers/lib/appReducers.js"],"names":["Helper","types","helper","populateInitialState","params","questions","isLoading","question","newObject","answerList","answer","questionHasAnswer","userHasAnswer","visited","error","InitialState","userAuth","isOnSignUpForm","isOnPasswordResetForm","auth","tokenKey","isLoggedIn","currentUser","user","userProfile","byId","allIds","users","index","posts","post","answers","comments","replies","entyties","state","action","type","USER_AUTHENTICATION","PENDING","Object","assign","payload","SUCCESS","ERROR","TOGGLE","SIGNUP_FORM","PASSWORD_RESET_FORM","GET_CURRENT_USER","GET_USER_PROFILE","console","log","profileById","defineProperty","value","GET_USER_LIST","GET_INDEX","GET_QUESTION_LIST","GET_QUESTION","questionById","answerById","id","answerState","length","GET_POST_LIST","GET_POST","postById","GET_ANSWER_LIST","CREATE_QUESTION","ById","CREATE_ANSWER","GET_COMMENT_LIST","GET_REPLY_LIST","GET_REPLY_CHILD_LIST","UPDATE_USER_PROFILE","user_is_following","profileToUpdate","is_following","UPDATE_USER_LIST","userUpdate","usersToUpdate","updateReducerListEntynties","userList","UPDATE_QUESTION","UPDATE_ANSWER","updatedAnswer","UPDATE_COMMENT","updatedComment","comment","commentList","UPDATE_REPLY","repliesToUpdate","updatedReply","reply","replyList","modalState","isOpen","modalType","modalProps","modal","newModal","hideModal"],"mappings":"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","sourcesContent":["import Helper from 'containers/utils/helpers';\nimport  * as types  from 'actions/types';\n\n\nconst helper   = new Helper();\n\nconst populateInitialState = (params)=> {\n    \n\n   var questions = {\n         isLoading          : false,\n         question           : \"\",\n         newObject          : \"\",\n         answerList         : [],\n         answer             : \"\",  \n         questionHasAnswer  : false,\n         userHasAnswer      : false,\n         visited            : false,\n         error              : '',\n      }\n}\n\nconst InitialState = () => {\n  \n    return {\n    \n        userAuth : {\n            isOnSignUpForm         : false,\n            isOnPasswordResetForm  : false,\n            isLoading              : false,\n\n            auth : {\n                tokenKey    : \"\",\n                isLoggedIn  : false,\n            },\n        },\n\n        currentUser : {\n            user: \"\",\n        },\n\n        userProfile : {\n            byId   : {},\n            allIds : []\n        },\n\n        users : {\n            byId   : {},\n            allIds : [] \n        },\n\n        index : {\n            isLoading : false,\n            error     : '',\n        },\n\n        questions : {\n            byId   : {},\n            allIds : []\n        },\n\n        posts     : {\n            byId   : {},\n            allIds : []\n        },\n\n        question  : {\n            byId   : {},\n            allIds : [],\n        },\n\n        post      : {\n            byId   : {},\n            allIds : []\n        },\n\n        answers  : {\n            byId   : {},\n            allIds : []\n        },\n\n        comments : {\n            byId   : {},\n            allIds : []\n        },\n\n        replies : {\n            byId   : {},\n            allIds : []\n        },\n    };\n};\n\n\nexport function entyties(state=InitialState(), action) {\n   switch (action.type){\n\n       case types.USER_AUTHENTICATION.PENDING :\n         Object.assign(state, action.payload)\n         return state; \n      case types.USER_AUTHENTICATION.SUCCESS:\n         Object.assign(state.userAuth, action.payload);\n         return state;              \n\n      case types.USER_AUTHENTICATION.ERROR:\n         Object.assign(state.userAuth, action.payload)\n         return state;\n          \n\n      case types.TOGGLE.SIGNUP_FORM:\n         Object.assign(state.userAuth, action.payload)\n         return state;   \n\n      case types.TOGGLE.PASSWORD_RESET_FORM:\n         Object.assign(state.userAuth, action.payload)\n         return state;\n\n\n\n\n\n      case types.GET_CURRENT_USER.SUCCESS:\n         Object.assign(state.currentUser, action.payload)\n         \n         return state;   \n                  \n\n      case types.GET_CURRENT_USER.ERROR:\n         Object.assign(state.currentUser, action.payload)\n         return state;    \n\n      case types.GET_CURRENT_USER.PENDING:\n        Object.assign(state.currentUser, action.payload)\n        return state;    \n\n\n      case types.GET_USER_PROFILE.PENDING:\n         console.log(action.payload) \n         if (!state.userProfile.byId[action.profileById]) {\n            Object.defineProperty(state.userProfile.byId, action.profileById, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_USER_PROFILE.SUCCESS:\n         console.log(action.payload) \n         Object.assign(state.userProfile.byId[action.profileById], action.payload);\n         return state;\n\n      case types.GET_USER_PROFILE.ERROR:\n         Object.assign(state.userProfile.byId[action.profileById], action.payload);\n         return state;\n              \n\n      case types.GET_USER_LIST.PENDING:\n         console.log(state, action)\n         if (!state.users.byId[action.byId]) {\n            Object.defineProperty(state.users.byId, action.byId, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_USER_LIST.SUCCESS:\n         Object.assign(state.users.byId[action.byId], action.payload);\n         return state;\n\n      case types.GET_USER_LIST.ERROR:\n         Object.assign(state.users.byId[action.byId], action.payload);\n         return state;\n\n\n      case types.GET_INDEX.PENDING:\n         Object.assign(state.index, action.payload);\n         return state;       \n\n      case types.GET_INDEX.SUCCESS:\n         console.log(state, action)\n         Object.assign(state.index, action.payload);   \n         return state;    \n\n      case types.GET_INDEX.ERROR:\n         Object.assign(state.index, action.payload);\n         return state;           \n\n\n      case types.GET_QUESTION_LIST.PENDING:\n         console.log(state, action)\n         if (!state.questions.byId[action.byId]) {\n            Object.defineProperty(state.questions.byId, action.byId, {value : action.payload});\n         }\n         return state;       \n\n      case types.GET_QUESTION_LIST.SUCCESS:\n         Object.assign(state.questions.byId[action.byId], action.payload);   \n         return state;    \n\n      case types.GET_QUESTION_LIST.ERROR:\n         Object.assign(state.questions.byId[action.byId], action.payload);\n         return state;            \n       \n\n\n\n      case types.GET_QUESTION.PENDING:\n\n         if (!state.question.byId[action.questionById]) {\n            Object.defineProperty(state.question.byId, action.questionById, {value : action.payload});\n         }\n         return state;      \n      \n      case types.GET_QUESTION.SUCCESS:\n         var question = action.payload.question;\n         var answerById = `answer${question.id}`;\n         var answerState = {\n            answerList    : question.answers,\n            newObject     : \"\",\n            isLoading     : false,\n            visited       : false,\n            error         : '',\n         }\n\n         Object.assign(state.question.byId[action.questionById], action.payload);\n         if (question.answers.length) {\n             Object.defineProperty(state.answers.byId, answerById, {value : answerState});\n         }\n         return state; \n\n      case types.GET_QUESTION.ERROR:\n         if (state.question.byId[action.questionById]) {\n            Object.assign(state.question.byId[action.questionById], action.payload);\n         }\n         return state;\n\n\n      case types.GET_POST_LIST.PENDING:\n         console.log(state, action)\n         if (!state.posts.byId[action.byId]) {\n            Object.defineProperty(state.posts.byId, action.byId, {value : action.payload});\n         }\n         return state;       \n\n      case types.GET_POST_LIST.SUCCESS:\n         console.log(state, action)\n         Object.assign(state.posts.byId[action.byId], action.payload);   \n         return state;    \n\n      case types.GET_POST_LIST.ERROR:\n         Object.assign(state.posts.byId[action.byId], action.payload);\n         return state;              \n\n\n      case types.GET_POST.PENDING:\n         if (!state.post.byId[action.postById]) {\n            Object.defineProperty(state.post.byId, action.postById, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_POST.SUCCESS:\n         var post = action.payload.post;\n         //var commentById = `commentsPost${post.id}`;\n         console.log(state, post)\n         /*\n         var commentsState = {\n            commentList      : post.comments,\n            showLink         : post.comments.length?true:false,\n            isLoading        : false,\n            error            : '',\n            linkData : {\n               comment       : post.comments[0],\n               numOfComments : post.comments.length,\n            },\n         };*/\n\n         Object.assign(state.post.byId[action.postById], action.payload);\n         if (post.comments.length) {\n            //Object.defineProperty(state.comments.byId, commentById, {value : commentsState});\n         }\n         return state;\n\n      case types.GET_POST.ERROR:\n         Object.assign(state.post.byId[action.postById], action.payload);\n         return state; \n\n\n      case types.GET_ANSWER_LIST.PENDING:\n         if (!state.answers.byId[action.byId]) {\n            Object.defineProperty(state.answers.byId, action.byId, {value : action.payload});\n         }\n         return state;\n\n\n      case types.GET_ANSWER_LIST.SUCCESS:\n         console.log(state.answers, action)\n         Object.assign(state.answers.byId[action.byId],action.payload);\n         return state; \n\n      case types.GET_ANSWER_LIST.ERROR:\n         Object.assign(state.answers.byId[action.byId],action.payload);\n         return state;     \n\n      case 'GET_COMMENT_LINK_DATA':\n         if (!state.comments.byId[action.byId]) {\n            Object.defineProperty(state.comments.byId, action.byId,\n                                                           { value :action.payload});\n             Object.defineProperty(state.comments.allIds, action.byId ,\n                       { value : state.comments.byId[action.byId] });   \n         } \n         return state; \n\n      case 'GET_REPLY_LINK_DATA':\n         console.log(action)\n         if (!state.replies.byId[action.byId]) {\n            Object.defineProperty(state.replies.byId, action.byId, { value :action.payload});  \n            Object.defineProperty(state.replies.allIds, action.byId,\n                         { value : state.replies.byId[action.byId] });\n         }\n\n         return state; \n\n      case 'GET_REPLY_CHILD_LINK_DATA':\n         console.log(action, state.replies)\n         if (!state.replies.byId[action.byId]) {\n           Object.defineProperty(state.replies.byId, action.byId, {value : action.payload});\n           Object.defineProperty(state.replies.allIds, action.byId,\n                                   { value : state.replies.byId[action.byId] });\n         }\n         return state;\n\n      case types.CREATE_QUESTION.PENDING:\n         console.log(action)\n         var questionById = action.ById? action.ById:\n                                                   \"creatingNewQuestion\";\n         if (!state.question.byId[questionById]) {\n            Object.defineProperty(state.question.byId, action.ById, {value:action.payload} );\n         }\n\n         return state;\n\n      case types.CREATE_QUESTION.SUCCESS:\n         Object.assign(state.question.byId[action.ById], state, action.payload);\n         return state;\n      \n      case types.CREATE_QUESTION.ERROR:\n        console.log(action)\n        //Object.assign(state.question.byId[action.ById], action.payload);\n        return state;  \n\n      case 'VIEW_NEW_QUESTION':\n         Object.assign(state.question.byId[action.questionById], action.payload);\n         return state;  \n\n      case types.CREATE_ANSWER.PENDING:\n         if (!state.answers.byId[action.ById]) {\n            Object.defineProperty(state.answers.byId, action.ById, {value:action.payload} );\n         }\n         return state;\n\n      case types.CREATE_ANSWER.SUCCESS:\n         Object.assign(state.answers.byId[action.ById], action.payload)\n         return state;\n      \n      case types.CREATE_ANSWER.ERROR:\n        Object.assign(state.answers.byId[action.ById], action.payload)\n        return state;     \n     /* \n      case types.CREATE_COMMENT.PENDING:\n         Object.assign(state.comments.byId[action.commentById], action.payload)\n         return state;\n\n      case types.CREATE_COMMENT.SUCCESS:\n         Object.assign(state.comments.byId[action.commentById], action.payload)\n         return state;\n      \n      case types.CREATE_COMMENT.ERROR:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;  \n        */\n\n      case types.GET_COMMENT_LIST.PENDING:\n         console.log(action)\n         Object.assign(state.comments.byId[action.byId], action.payload)\n         return state;    \n\n      case types.GET_REPLY_LIST.PENDING:\n         console.log(action)\n         Object.assign(state.replies.byId[action.byId], action.payload)\n         return state;    \n\n      case  types.GET_REPLY_CHILD_LIST.PENDING:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state; \n\n      case  types.GET_REPLY_CHILD_LIST.SUCCESS:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state;\n      \n      case  types.GET_REPLY_CHILD_LIST.ERROR:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state;     \n         /*\n      case types.CREATE_REPLY.PENDING:\n         Object.assign(state.replies.byId[action.replyById], action.payload)\n         return state;\n\n      case types.CREATE_REPLY.SUCCESS:\n         Object.assign(state.replies.byId[action.replyById], state, action.payload)\n         return state;\n      \n      case types.CREATE_REPLY.ERROR:\n         Object.assign(state.replies.byId[action.replyById], action.payload)\n         return state;  \n      */\n      case types.UPDATE_USER_PROFILE.PENDING:\n         if (state.userProfile.byId[action.byId]) {\n            var userProfile =state.userProfile.byId[action.byId];\n           \n            if (userProfile.user && userProfile.user.user_is_following) {\n               userProfile.user.user_is_following = false\n            }else{\n               userProfile.user.user_is_following = true\n            }\n           \n            Object.assign(state.userProfile.byId[action.byId], userProfile);\n         }\n        return state;\n\n      case types.UPDATE_USER_PROFILE.SUCCESS:\n         Object.assign(state.userProfile.byId[action.byId], action.payload);\n        return state;  \n\n      case types.UPDATE_USER_PROFILE.ERROR:\n         var profileToUpdate =state.userProfile.byId[action.byId];\n         \n         if (profileToUpdate && profileToUpdate.user && profileToUpdate.user.user_is_following) {\n            profileToUpdate.user.is_following = true\n\n         }else{\n            profileToUpdate.user.is_following = false\n         }\n\n        Object.assign(state.userProfile.byId[action.byId], { ...profileToUpdate, error: action.payload});\n        return state;  \n\n\n      case types.UPDATE_USER_LIST.PENDING:\n         if (state.users.byId[action.byId]) {\n            Object.assign(state.users.byId[action.byId], action.payload);\n         }\n        return state;\n\n      case types.UPDATE_USER_LIST.SUCCESS:\n         var userUpdate    = action.payload.user;\n         var usersToUpdate =state.users.byId[action.byId];\n         helper.updateReducerListEntynties(usersToUpdate.userList, userUpdate);\n                  \n         return state;  \n\n      case types.UPDATE_USER_LIST.ERROR:\n         Object.assign(state.users.byId[action.byId], {error: action.payload});\n        return state;  \n\n\n      case types.UPDATE_QUESTION.PENDING:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;\n\n      case types.UPDATE_QUESTION.SUCCESS:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;                  \n      \n\n      case types.UPDATE_QUESTION.ERROR:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;   \n\n\n      case types.UPDATE_ANSWER.PENDING:\n         Object.assign(state.answers.byId[action.byId], action.payload);\n         return state;\n\n      case types.UPDATE_ANSWER.SUCCESS:\n         let updatedAnswer = action.payload.answer;\n         var answers = state.answers.byId[action.byId];\n         helper.updateReducerListEntynties(answers.answerList, updatedAnswer);\n         \n         return state;                  \n      \n\n      case types.UPDATE_ANSWER.ERROR:\n         Object.assign(state.answers.byId[action.byId], action.payload);\n         return state;     \n                      \n      \n      case types.UPDATE_COMMENT.PENDING:\n         Object.assign(state.comments.byId[action.byId], action.payload );\n         return state\n\n      case types.UPDATE_COMMENT.SUCCESS:\n         let updatedComment = action.payload.comment;\n         var comments = state.comments.byId[action.byId];\n\n         helper.updateReducerListEntynties(comments.commentList, updatedComment);\n         return state\n      \n      case types.UPDATE_COMMENT.ERROR:\n         Object.assign(state.comments.byId[action.byId], action.payload );\n         return state       \n      \n\n\n      case types.UPDATE_REPLY.PENDING:\n         Object.assign(state.replies.byId[action.byId], action.payload );\n         return state\n\n      case types.UPDATE_REPLY.SUCCESS:\n         var repliesToUpdate = state.replies.byId[action.byId]; \n         let updatedReply = action.payload.reply;\n        \n         helper.updateReducerListEntynties(repliesToUpdate.replyList, updatedReply);\n         return state\n    \n      case types.UPDATE_REPLY.ERROR:\n         Object.assign(state.replies.byId[action.byId], action.payload );\n         return state\n       \n\n      default:\n         return state; \n   }\n}\n\n   \n\nconst modalState = {\n   isOpen     : false,\n   modalType  : null,\n   modalProps : {},  \n};\n\n\n\nexport  function modal(state=modalState, action) {\n   switch (action.type){\n      case 'SHOW_MODAL':\n      console.log(state, action)\n          let newModal  = Object.assign({}, state, action.payload)\n         console.log(newModal, state);   \n         return newModal;  \n\n       case 'HIDE_MODAL':\n          let hideModal  = Object.assign({}, state, action.payload)\n          return hideModal;    \n         \n      default:\n         return state;\n   }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}