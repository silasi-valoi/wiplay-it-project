{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/components/question_components.js\";\nimport React from 'react';\nimport Api from 'api';\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { MatchMediaHOC } from 'react-match-media';\nimport { EditAnswerBtn, AnswerBtn, FollowQuestionBtn, UnfollowQuestionBtn, QuestionOptDropDownBtn, OpenModalButton, ModalCloseBtn, QuestionOptDropDownBtns, QuestionOptModalBtns } from \"components/buttons\";\nimport { ButtonsBox, Styles } from \"components/partial_components\";\nimport AnswersBox from \"containers/answer/answer_page\";\nimport * as types from 'actions/types';\nconst OptBtnSmallScreen = MatchMediaHOC(OpenModalButton, '(max-width: 500px)');\nconst OptBtnBigScreen = MatchMediaHOC(QuestionOptDropDownBtn, '(min-width: 800px)');\nconst api = new Api();\nexport const QuestionComponent = props => {\n  var questionById = props.questionById;\n  var question = props.entyties.question;\n  question = question.byId[questionById];\n  let questionObj = props.questionObj;\n  let optionsBtnStyles = {\n    fontSize: '8px',\n    background: 'white',\n    fontWeight: 'bold',\n    width: '40px',\n    color: '#4A4A4A',\n    margin: '0 0 2px'\n  };\n  let questionPath = \"/question/\".concat(questionObj.slug, \"/\");\n  let pathToFollowers = \"/\".concat(questionObj.slug, \"/followers/\");\n  let state = {\n    question: questionObj,\n    usersIsFor: 'questionFollowers'\n  };\n  let modalOptionsProps = {\n    modalProps: {\n      objName: 'question',\n      actionType: types.UPDATE_QUESTION,\n      isPut: true,\n      obj: questionObj\n    },\n    modalType: 'optionsMenu'\n  };\n  let followBtnProps = {\n    objName: 'question',\n    actionType: types.UPDATE_QUESTION,\n    isPut: true,\n    obj: questionObj,\n    objId: questionObj.id,\n    index: props.index,\n    apiUrl: api.updateQuestionApi(questionObj.id),\n    byId: questionById\n  };\n  let createAnswerProps = {\n    modalProps: {\n      objName: 'answer',\n      actionType: types.CREATE_ANSWER,\n      obj: questionObj,\n      objId: questionObj.id,\n      isPost: true,\n      editorPlaceHolder: 'Create Answer...',\n      apiUrl: api.createAnswerApi(questionObj.id)\n    },\n    modalType: 'editor'\n  };\n  let editAnswerProps = {};\n\n  if (props.isQuestionBox) {\n    if (question.userHasAnswer) {\n      var userAnswer = question.userAnswer;\n      editAnswerProps = {\n        modalProps: {\n          objName: 'answer',\n          objIndex: userAnswer.index,\n          objId: userAnswer.id,\n          obj: userAnswer,\n          isPut: true,\n          actionType: types.UPDATE_ANSWER,\n          editorPlaceHolder: 'Create Answer...',\n          apiUrl: api.updateAnswerApi(userAnswer.id)\n        },\n        modalType: 'editor'\n      };\n    }\n  }\n\n  let btnsProps = {\n    createAnswerProps,\n    editAnswerProps,\n    followBtnProps,\n    modalOptionsProps,\n    btnStyles: optionsBtnStyles,\n    btnText: React.createElement(\"i\", {\n      className: \"material-icons \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"more_horiz\")\n  };\n  Object.assign(btnsProps, props);\n  let questionFollowers = React.createElement(Link, {\n    to: {\n      pathname: pathToFollowers,\n      state\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, questionObj.followers, \" Followers\");\n  let editAnswerBtn = props.userHasAnswer ? React.createElement(EditAnswerBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })) : React.createElement(AnswerBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }));\n  let unfollowOrFollowQuestionBtn = questionObj.user_is_following ? React.createElement(UnfollowQuestionBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })) : React.createElement(FollowQuestionBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }));\n  let optionsBtn = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(OptBtnSmallScreen, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(OptBtnBigScreen, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })));\n  const btnsList = {\n    itemsCounter: questionFollowers,\n    btn1: editAnswerBtn,\n    btn2: unfollowOrFollowQuestionBtn,\n    btn3: optionsBtn,\n    Styles: Styles\n  };\n  let QuestionProps = {\n    questionPath,\n    state,\n    btnsList\n  };\n  Object.assign(QuestionProps, props);\n  let styles = {\n    questionBox: {\n      border: '1px solid  #D5D7D5',\n      margin: '12px  5px 7px',\n      paddingTop: '8px'\n    },\n    questionContents: {\n      borderTop: '3px solid  #D5D7D5'\n    }\n  };\n  return React.createElement(\"div\", {\n    key: questionObj.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question-page\",\n    id: \"question-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.questionContents,\n    className: \"question-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.questionBox,\n    className: \"question-bo \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, props.isQuestionBox ? React.createElement(\"b\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, questionObj.add_question) : React.createElement(\"b\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: questionPath,\n      state\n    },\n    className: \"question-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, questionObj.add_question))), React.createElement(ButtonsBox, Object.assign({}, btnsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }))), questionObj.answers ? React.createElement(AnswersBox, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })) : \"\")));\n};\nexport const UserQuestion = props => {\n  return React.createElement(\"div\", {\n    className: \"question-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user-question-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: props.questionPath,\n      state: props.state\n    },\n    className: \"question-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, props.questionObj.add_question))), React.createElement(ButtonsBox, Object.assign({}, props.btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }))));\n};\nexport const QuestionDropDownMenu = props => React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 223\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 224\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  className: \"btn-sm answer-option options-btn \",\n  id: \"questionMenuButton\",\n  \"data-toggle\": \"dropdown\",\n  \"aria-haspopup\": \"false\",\n  \"aria-expanded\": \"true\",\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 225\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"material-icons \",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 227\n  },\n  __self: this\n}, \"more_horiz\")), React.createElement(\"div\", {\n  className: \"dropdown-menu\",\n  \"aria-labelledby\": \"questionMenuButton\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 229\n  },\n  __self: this\n}, React.createElement(QuestionOptDropDownBtns, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 230\n  },\n  __self: this\n})))));\nexport const QuestionModalMenu = props => React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 238\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"modal-menu  modal-body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 239\n  },\n  __self: this\n}, React.createElement(ModalCloseBtn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 240\n  },\n  __self: this\n}), React.createElement(QuestionOptModalBtns, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 241\n  },\n  __self: this\n}))));","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/components/question_components.js"],"names":["React","Api","BrowserRouter","Link","MatchMediaHOC","EditAnswerBtn","AnswerBtn","FollowQuestionBtn","UnfollowQuestionBtn","QuestionOptDropDownBtn","OpenModalButton","ModalCloseBtn","QuestionOptDropDownBtns","QuestionOptModalBtns","ButtonsBox","Styles","AnswersBox","types","OptBtnSmallScreen","OptBtnBigScreen","api","QuestionComponent","props","questionById","question","entyties","byId","questionObj","optionsBtnStyles","fontSize","background","fontWeight","width","color","margin","questionPath","slug","pathToFollowers","state","usersIsFor","modalOptionsProps","modalProps","objName","actionType","UPDATE_QUESTION","isPut","obj","modalType","followBtnProps","objId","id","index","apiUrl","updateQuestionApi","createAnswerProps","CREATE_ANSWER","isPost","editorPlaceHolder","createAnswerApi","editAnswerProps","isQuestionBox","userHasAnswer","userAnswer","objIndex","UPDATE_ANSWER","updateAnswerApi","btnsProps","btnStyles","btnText","Object","assign","questionFollowers","pathname","followers","editAnswerBtn","unfollowOrFollowQuestionBtn","user_is_following","optionsBtn","btnsList","itemsCounter","btn1","btn2","btn3","QuestionProps","styles","questionBox","border","paddingTop","questionContents","borderTop","add_question","answers","UserQuestion","QuestionDropDownMenu","QuestionModalMenu"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Api from 'api';\n\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { MatchMediaHOC } from 'react-match-media';\nimport { EditAnswerBtn, AnswerBtn, FollowQuestionBtn,UnfollowQuestionBtn, \n          QuestionOptDropDownBtn, OpenModalButton,\n          ModalCloseBtn,QuestionOptDropDownBtns,QuestionOptModalBtns  } from \"components/buttons\";\nimport {ButtonsBox, Styles } from \"components/partial_components\";\nimport AnswersBox from \"containers/answer/answer_page\";\nimport  * as types  from 'actions/types';\n\nconst OptBtnSmallScreen = MatchMediaHOC(OpenModalButton, '(max-width: 500px)');\nconst OptBtnBigScreen = MatchMediaHOC(QuestionOptDropDownBtn, '(min-width: 800px)');\n\n\nconst api      = new Api();\n\n\n\n\nexport const QuestionComponent = props => {\n   var questionById = props.questionById;\n   var question     = props.entyties.question;\n   question = question.byId[questionById];\n   \n   let questionObj  = props.questionObj;\n\n   \n   let optionsBtnStyles = {\n         fontSize   : '8px',\n         background : 'white',\n         fontWeight : 'bold',\n         width      : '40px',\n         color      : '#4A4A4A',\n         margin     : '0 0 2px'\n   }\n\n   let questionPath = `/question/${questionObj.slug}/`;\n   let pathToFollowers =  `/${questionObj.slug}/followers/`;\n  \n        let state = {\n            question : questionObj,\n            usersIsFor : 'questionFollowers', \n        }\n\n     \n   let  modalOptionsProps = {\n      modalProps : {\n        objName    : 'question',\n        actionType : types.UPDATE_QUESTION,\n        isPut      : true,\n        obj        : questionObj, \n        \n      },\n      modalType : 'optionsMenu', \n   };\n   \n   let followBtnProps = {\n      objName     : 'question',\n      actionType  : types.UPDATE_QUESTION,\n      isPut       : true,\n      obj         : questionObj, \n      objId       : questionObj.id,\n      index       : props.index,\n      apiUrl      : api.updateQuestionApi(questionObj.id),\n      byId        : questionById,\n   };\n   \n   let  createAnswerProps = {\n      modalProps :{\n        objName           : 'answer',\n        actionType        : types.CREATE_ANSWER,\n        obj               : questionObj,\n        objId             : questionObj.id,\n        isPost            : true,\n        editorPlaceHolder : 'Create Answer...',\n        apiUrl            : api.createAnswerApi(questionObj.id),\n         \n      },\n      modalType : 'editor', \n          \n   };\n\n   let  editAnswerProps = {};\n\n   if (props.isQuestionBox ) {\n      \n      if (question.userHasAnswer) {\n         var userAnswer = question.userAnswer;\n      \n         editAnswerProps = {\n            modalProps :{\n              objName           : 'answer',\n              objIndex          : userAnswer.index,\n              objId             : userAnswer.id,\n              obj               : userAnswer,\n              isPut             : true,\n              actionType        : types.UPDATE_ANSWER,\n              editorPlaceHolder : 'Create Answer...',\n              apiUrl            : api.updateAnswerApi(userAnswer.id),\n            },\n            modalType : 'editor', \n         };\n      }\n   }\n\n\n   let btnsProps = {\n                  createAnswerProps,\n                  editAnswerProps,\n                  followBtnProps,\n                  modalOptionsProps,\n                  btnStyles:optionsBtnStyles,\n                  btnText : <i className=\"material-icons \">more_horiz</i>, \n               } \n\n   Object.assign(btnsProps, props)\n\n   let questionFollowers = <Link to={{ pathname : pathToFollowers,state }}>\n                             { questionObj.followers} Followers\n                           </Link>;\n   let editAnswerBtn      =  props.userHasAnswer? <EditAnswerBtn {...btnsProps}/>\n                                                : <AnswerBtn {...btnsProps}/>\n\n   let unfollowOrFollowQuestionBtn =  questionObj.user_is_following? \n                                         <UnfollowQuestionBtn {...btnsProps} />\n                                       :\n                                         <FollowQuestionBtn {...btnsProps}/>;\n                         \n              \n   let optionsBtn = <div>\n                     <OptBtnSmallScreen {...btnsProps}/> \n                     <OptBtnBigScreen {...props}/>\n                   </div>;\n\n    const btnsList  = {\n                  itemsCounter : questionFollowers,\n                  btn1         : editAnswerBtn,\n                  btn2         : unfollowOrFollowQuestionBtn,\n                  btn3         : optionsBtn,\n                  Styles       : Styles,\n               }  \n\n    let QuestionProps = { questionPath, state, btnsList };\n    Object.assign(QuestionProps, props)   \n\n    let styles = {\n      questionBox:{\n         border     : '1px solid  #D5D7D5',\n         margin     : '12px  5px 7px',\n         paddingTop : '8px'\n\n      },\n\n      questionContents : {\n         borderTop     : '3px solid  #D5D7D5',\n         \n      }\n   }     \n   \n   return(\n      <div key={questionObj.id}>\n         <div  className=\"question-page\" id=\"question-page\">\n         <div style={styles.questionContents} className=\"question-content\">\n\n            <div style={styles.questionBox} className=\"question-bo \">\n               <div className=\"question\">\n               {props.isQuestionBox?\n                   <b className=\"\">\n                     { questionObj.add_question }\n                  </b>\n                  :\n                  <b className=\"\">\n                     <Link to={{pathname: questionPath, state}} className=\"question-link\">\n                        { questionObj.add_question }\n                     </Link>\n                  </b>\n               }\n\n               </div>\n\n               <ButtonsBox {...btnsList}/>\n\n            </div>\n\n            { questionObj.answers?\n               <AnswersBox {...props}/>\n               :\n               \"\"\n            }\n         </div>\n      </div>\n      </div>\n      \n   );\n\n};\n\n\n\nexport const UserQuestion = props => {\n   \n   return (\n      <div className=\"question-content\">\n         <div className=\"user-question-box\">\n\n            <div className=\"question\">  \n               <b className=\"\">\n                  <Link to={{pathname: props.questionPath, state: props.state }} className=\"question-link\">\n                     { props.questionObj.add_question }\n                  </Link>\n               </b>\n            </div>\n            <ButtonsBox {...props.btnsProps}/>\n         </div>\n      </div>\n\n   )\n} \n\nexport const QuestionDropDownMenu = props => (\n  <BrowserRouter>\n  <div>\n   <button className=\"btn-sm answer-option options-btn \" id=\"questionMenuButton\"\n      data-toggle=\"dropdown\" aria-haspopup=\"false\" aria-expanded=\"true\" type=\"button\" >\n      <i className=\"material-icons \">more_horiz</i>\n    </button>\n  <div className=\"dropdown-menu\" aria-labelledby=\"questionMenuButton\">\n    <QuestionOptDropDownBtns {...props} />\n  </div>\n  </div>\n  </BrowserRouter>\n \n)\n\nexport const QuestionModalMenu = props => (\n   <BrowserRouter>\n    <div className=\"modal-menu  modal-body\">\n      <ModalCloseBtn/>\n      <QuestionOptModalBtns {...props} />      \n   </div>\n   </BrowserRouter>\n) \n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}