{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/home/home_page.js\";\nimport React, { Component } from 'react';\nimport * as action from 'actions/actionCreators';\nimport { Link } from \"react-router-dom\";\nimport { NavigationBarSmallScreen, NavigationBarBigScreen } from \"components/navBar\";\nimport { store } from \"index\";\nimport AnswersBox from \"containers/answer/answer_page\";\nimport { QuestionComponent } from \"components/question_components\";\nimport AjaxLoader from \"components/ajax-loader\";\nimport withMain from 'containers/higher-order-components/main';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHomeBox: true,\n      questionListById: 'filteredQuestions'\n    };\n  }\n\n  componentWillMount() {} //console.log(this.props)\n  // static getDerivedStateFromError(error) {\n  // Update state so the next render will show the fallback UI.\n  //  return  dispatch => action.handleError(error);\n  // }\n\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentWillReceiveProps(nextProps, prevProps) {}\n\n  componentDidUpdate(nextProps, prevState) {//console.log(nextProps, this.props)\n  }\n\n  componentDidMount() {\n    let questionList = localStorage.getItem('questionList');\n    questionList = JSON.parse(questionList);\n    var questionListById = this.state.questionListById;\n\n    if (questionList) {\n      store.dispatch(action.getQuestionListPending(questionListById));\n      store.dispatch(action.getQuestionListSuccess(questionListById, questionList));\n    } else {\n      this.props.getIndex();\n    }\n  }\n\n  getProps() {\n    let props = {\n      isHomeBox: this.state.isHomeBox,\n      questionListById: this.state.questionListById\n    };\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    console.log(props);\n    var index = props.entyties.index;\n    let questions = index.questions;\n    console.log(questions, props);\n    return React.createElement(\"div\", {\n      className: \"home-page\",\n      id: \"home-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(NavigationBarBigScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(NavigationBarSmallScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), index ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, index.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loder-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Questions, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })))) : \"\");\n  }\n\n}\n\nexport default withMain(Home);\nexport const Questions = props => {\n  var questions = props.entyties.questions;\n  questions = questions.byId[props.questionListById];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, questions.questionList.length ? React.createElement(\"div\", {\n    className: \"home-page-contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, questions.questionList.map((questionObj, index) => {\n    let contentsProps = {\n      questionObj,\n      index\n    };\n\n    if (questionObj.answer) {} else {\n      contentsProps['isHomeBox'] = props.isHomeBox;\n    }\n\n    Object.assign(contentsProps, props);\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(QuestionComponent, Object.assign({}, contentsProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })));\n  })) : \"\");\n};\n\nconst HomePageContents = props => {\n  console.log(props);\n  let state = {\n    currentUser: props.currentUser,\n    questionObj: props.questionObj\n  };\n  let questionPath = \"/question/\".concat(props.questionObj.slug, \"/\");\n  return React.createElement(\"div\", {\n    className: \"question-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question-home-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question-home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: questionPath,\n      state: state\n    },\n    className: \"question-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, props.questionObj.add_question)))));\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/home/home_page.js"],"names":["React","Component","action","Link","NavigationBarSmallScreen","NavigationBarBigScreen","store","AnswersBox","QuestionComponent","AjaxLoader","withMain","Home","constructor","props","state","isHomeBox","questionListById","componentWillMount","componentDidCatch","error","info","console","log","componentWillReceiveProps","nextProps","prevProps","componentDidUpdate","prevState","componentDidMount","questionList","localStorage","getItem","JSON","parse","dispatch","getQuestionListPending","getQuestionListSuccess","getIndex","getProps","Object","assign","render","index","entyties","questions","isLoading","Questions","byId","length","map","questionObj","contentsProps","answer","HomePageContents","currentUser","questionPath","slug","pathname","add_question"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  * as action  from 'actions/actionCreators';\nimport { Link } from \"react-router-dom\";\n\nimport {NavigationBarSmallScreen,NavigationBarBigScreen } from \"components/navBar\";\nimport {store} from \"index\";\nimport AnswersBox from \"containers/answer/answer_page\";\nimport { QuestionComponent} from \"components/question_components\"\nimport  AjaxLoader from \"components/ajax-loader\";\nimport withMain  from 'containers/higher-order-components/main';\n\n\n\n\nclass Home extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n        isHomeBox        : true,\n        questionListById : 'filteredQuestions',\n     } \n      \n   }\n  \n   componentWillMount() {\n      //console.log(this.props)\n   }\n\n  // static getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n    //  return  dispatch => action.handleError(error);\n  // }\n\n   componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n   componentWillReceiveProps(nextProps, prevProps){ \n     \n   }\n\n   componentDidUpdate(nextProps, prevState) {\n      //console.log(nextProps, this.props)\n      \n      \n   };\n\n         \n   \n   componentDidMount() {\n      let questionList  = localStorage.getItem('questionList');\n      questionList = JSON.parse(questionList)\n      var questionListById = this.state.questionListById;\n      if (questionList) {\n         store.dispatch(action.getQuestionListPending(questionListById));\n         store.dispatch(action.getQuestionListSuccess(questionListById, questionList));\n      }else{\n         this.props.getIndex();                           \n      }\n          \n   }\n\n\n   getProps(){\n      let props = {\n         isHomeBox        : this.state.isHomeBox,\n         questionListById : this.state.questionListById,\n                 \n      };\n      \n      return Object.assign(props, this.props );  \n   };\n\n      \n   render() {\n      let props = this.getProps()\n      console.log(props)\n      var index  = props.entyties.index;\n      let questions      = index.questions;\n      console.log(questions, props)\n              \n      return (\n         <div className=\"home-page\" id=\"home-page\">\n            \n            <NavigationBarBigScreen {...props}/>\n            <NavigationBarSmallScreen {...props}/>\n            { index?\n               <div>\n                  { index.isLoading?\n                     <div  className=\"page-spin-loder-box\">\n                        <AjaxLoader/>\n                     </div>\n                     : \n                     <div>\n                        <Questions {...props}/>   \n                     </div>\n                  }\n\n               </div>\n               :\n               \"\"\n            }\n         </div>\n      );\n   };\n}\n\n\n\n\n\nexport default  withMain(Home);\n\n\n\n\n\nexport const Questions = props => {\n   var questions  = props.entyties.questions;\n   questions      = questions.byId[props.questionListById];\n  \n   return (\n      <div>\n         {questions.questionList.length?\n         <div className=\"home-page-contents\">\n\n            { questions.questionList.map((questionObj, index) => {\n               let contentsProps = {questionObj, index};\n                            \n               if (questionObj.answer) {\n                  \n               }else{\n                  contentsProps['isHomeBox'] = props.isHomeBox;\n                  \n               }\n\n               Object.assign(contentsProps, props)  \n\n               return (\n\n                  <div key={index} >\n                     <QuestionComponent {...contentsProps}  />\n                  </div>\n               )\n            }\n            )}\n         </div>\n         :\n         \"\"\n\n      }\n       \n      </div>\n   );\n};\n\n\n\n\nconst HomePageContents = props => {\n  console.log(props)\n   let state = {\n      currentUser  : props.currentUser, \n      questionObj  : props.questionObj,\n      };\n\n   let questionPath = `/question/${props.questionObj.slug}/`;\n\n   return (\n      <div className=\"question-content\">\n         <div className=\"question-home-box\">\n            <div className=\"question-home\">  \n               <b className=\"\">\n                  <Link to={{pathname: questionPath, state:state }} className=\"question-link\">\n                     { props.questionObj.add_question }\n                  </Link>\n               </b>\n            </div>\n\n            \n         </div>\n      </div>  \n   );\n\n}; \n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}