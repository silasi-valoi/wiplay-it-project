{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_great_grand_child_page.js\";\nimport React, { Component } from 'react';\nimport AjaxLoader from \"components/ajax-loader\";\nimport * as action from 'actions/actionCreators';\nimport * as types from 'actions/types';\nimport { getReplyChildrenList } from \"dispatch/index\";\nimport { store } from \"index\";\nimport { Reply } from \"components/reply_components\";\nimport Api from 'api';\nconst api = new Api();\n\nclass ReplyGreatGrandChildBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReplyGreatGrandChildBox: true,\n      byId: ''\n    };\n  }\n\n  componentDidMount() {\n    var reply = this.props.reply;\n    console.log(reply);\n\n    if (reply) {\n      var byId = \"replyGreateGrandChild\".concat(reply.id);\n      this.setState({\n        byId\n      });\n      var props = {\n        actionType: 'GET_REPLY_CHILD_LINK_DATA',\n        reply,\n        byId\n      };\n      store.dispatch(action.getReplyChildLindData(props));\n    }\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidUpdate(nextProps, prevState) {}\n\n  getProps() {\n    let props = {\n      isReplyGreatGrandChildBox: this.state.isReplyGreatGrandChildBox,\n      greatGrandChildParent: this.props.reply,\n      byId: this.state.byId\n    };\n    return Object.assign(props, this.props.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    var replyParent = this.props.reply;\n    let byId = this.state.byId;\n    var replies = props.entyties.replies;\n    replies = replies.byId[byId];\n    var apiUrl = '';\n\n    if (props.isAnswerBox && replies) {\n      apiUrl = api.getAnswerReplyChildrenListApi(replyParent.id);\n    } else {\n      apiUrl = api.getPostReplyChildrenListApi(replyParent.id);\n    }\n\n    var linkProps = {\n      actionType: types.GET_REPLY_CHILD_LIST,\n      apiUrl: apiUrl,\n      byId: props.byId,\n      children: replyParent.children\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, replies ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, replies.showLink ? React.createElement(\"div\", {\n      onClick: () => props.getReplyChildrenList(linkProps),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Click to view More\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, replies.linkData.totalReplies))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, replies.isLoading ? React.createElement(\"div\", {\n      className: \"spin-loader-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, replies.replyList.map((reply, index) => {\n      let replyProps = {\n        replyParent,\n        reply,\n        index,\n        props\n      };\n      return React.createElement(GraetGrandChildComponent, Object.assign({}, replyProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n    }))))) : \"\");\n  }\n\n}\n\n;\nexport default ReplyGreatGrandChildBox;\n\nconst GraetGrandChildComponent = props => {\n  let replyParent = props.replyParent,\n      reply = props.reply;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    key: props.index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, props.replyParent.id === props.reply.parent ? React.createElement(\"div\", {\n    className: \"reply-great-grand-child-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reply-great-grand-child-contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Reply, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }))), reply.has_children ? React.createElement(ReplyGreatGrandChildBox, Object.assign({}, replyProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })) : '') : \"\"));\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_great_grand_child_page.js"],"names":["React","Component","AjaxLoader","action","types","getReplyChildrenList","store","Reply","Api","api","ReplyGreatGrandChildBox","constructor","props","state","isReplyGreatGrandChildBox","byId","componentDidMount","reply","console","log","id","setState","actionType","dispatch","getReplyChildLindData","componentDidCatch","error","info","componentDidUpdate","nextProps","prevState","getProps","greatGrandChildParent","Object","assign","render","replyParent","replies","entyties","apiUrl","isAnswerBox","getAnswerReplyChildrenListApi","getPostReplyChildrenListApi","linkProps","GET_REPLY_CHILD_LIST","children","showLink","linkData","totalReplies","isLoading","replyList","map","index","replyProps","GraetGrandChildComponent","parent","has_children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  AjaxLoader from \"components/ajax-loader\";\nimport  * as action  from 'actions/actionCreators';\nimport  * as types  from 'actions/types';\nimport { getReplyChildrenList } from  \"dispatch/index\";\nimport {store} from \"index\";\nimport {Reply } from \"components/reply_components\";\nimport Api from 'api';\n\n\n \nconst api      = new Api();\n\n\n\n\nclass ReplyGreatGrandChildBox extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isReplyGreatGrandChildBox : true,\n            byId                     : '',\n        };\n    };\n\n\n    componentDidMount() {\n        var reply  = this.props.reply;\n        console.log(reply)\n        if (reply) {\n\n            var byId = `replyGreateGrandChild${reply.id}`;\n            this.setState({byId});\n\n            var props = {\n                actionType : 'GET_REPLY_CHILD_LINK_DATA',\n                reply,\n                byId,\n            }\n\n            store.dispatch(action.getReplyChildLindData(props)); \n        }\n    };\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.log(error, info);\n    } \n\n   componentDidUpdate(nextProps, prevState) {\n      \n   }; \n  \n   getProps() {\n      let props = {\n         isReplyGreatGrandChildBox  : this.state.isReplyGreatGrandChildBox,\n         greatGrandChildParent      : this.props.reply,\n         byId                       : this.state.byId,\n      } \n      return Object.assign(props, this.props.props);\n   };\n\n\n    render() {\n\n        let props       =  this.getProps();\n        var replyParent =  this.props.reply;\n        let byId        =  this.state.byId;\n        var replies     =  props.entyties.replies;\n        replies         =  replies.byId[byId]; \n\n        var apiUrl = '';\n\n        if (props.isAnswerBox && replies) { \n           apiUrl = api.getAnswerReplyChildrenListApi(replyParent.id);\n\n        }\n\n        else{\n            apiUrl = api.getPostReplyChildrenListApi(replyParent.id);\n        }\n\n        var linkProps = {\n            actionType: types.GET_REPLY_CHILD_LIST,\n            apiUrl    : apiUrl,\n            byId      : props.byId,\n            children  : replyParent.children,\n        };   \n      \n        return (\n            <div>\n                {replies?\n                    <div>\n                        { replies.showLink?\n                           <div onClick={ () => props.getReplyChildrenList( linkProps ) }> \n                               <ul>\n                                   <li>Click to view More</li>\n                                   <li>{ replies.linkData.totalReplies }</li>\n                                </ul>\n                            </div>                   \n   \n                            :\n  \n                            <div>\n                                { replies.isLoading?\n                                    <div className=\"spin-loader-box\">\n                                        <AjaxLoader/>\n                                    </div>\n\n                                    :\n\n                                    <div>\n\n                                        <div>\n                                            { replies.replyList.map( (reply, index) => {\n\n                                                let replyProps = {replyParent, reply, index, props}\n\n                                                return(\n                                                <GraetGrandChildComponent {...replyProps}/>\n                                                    \n                                                )\n                                            })}\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        }\n                    </div>\n\n                    :\n                   \"\"\n                }\n           \n            </div>   \n        ); \n    };\n  \n};\n\n\nexport default ReplyGreatGrandChildBox;\n\n\n\n\n\n\nconst GraetGrandChildComponent = props => {\n    let { replyParent, reply } = props\n\n    return(\n        <div>\n            <div  key={props.index}>\n                { props.replyParent.id === props.reply.parent?\n\n                    <div className=\"reply-great-grand-child-container\">\n\n                        <div className=\"reply-great-grand-child-contents\">\n                            <Reply {...props}/>\n                        </div>\n\n                        { reply.has_children?\n\n                            <ReplyGreatGrandChildBox {...replyProps}/>\n\n                            :\n                            ''\n                        }\n                    </div>\n\n                    :\n                    \"\"\n                }\n            </div>\n           \n        </div>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}