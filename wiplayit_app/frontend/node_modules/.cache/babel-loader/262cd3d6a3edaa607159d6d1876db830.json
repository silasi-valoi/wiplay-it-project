{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/components/comment_components.js\";\nimport React from 'react';\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { MatchMediaHOC } from 'react-match-media';\nimport { ReplyBtn, UpVoteCommentBtn, CommentOptModalBtns, DownVoteCommentBtn, OpenModalButton, QuestionOptDropDownBtn, ModalCloseBtn } from \"components/buttons\";\nimport { ButtonsBox } from \"components/partial_components\";\nimport Api from 'api';\nimport * as types from 'actions/types';\nimport RepliesBox from \"containers/replies/reply_page\";\nimport { UserComponentSmall } from \"components/profile_components\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport { pageMediaBlockRenderer } from 'components/editor_components';\nconst OptBtnSmallScreen = MatchMediaHOC(OpenModalButton, '(max-width: 500px)');\nconst OptBtnBigScreen = MatchMediaHOC(QuestionOptDropDownBtn, '(min-width: 800px)');\nconst api = new Api();\nexport const CommentsComponent = props => {\n  let optionsBtnStyles = {\n    fontSize: '11px',\n    background: ' #F5F5F5',\n    fontWeight: 'bold',\n    width: '40px',\n    color: '#4A4A4A',\n    margin: '0 0 2px'\n  };\n  let isAnswerBox = props.isAnswerBox,\n      isPostBox = props.isPostBox,\n      comment = props.comment,\n      index = props.index,\n      isPostListBox = props.isPostListBox;\n  let storedState = JSON.parse(comment.comment);\n  const contentState = convertFromRaw(storedState);\n  const editorState = EditorState.createWithContent(contentState);\n  let pathToUpvoters = \"/comment/\".concat(comment.id, \"/upvoters/\");\n  let state = {\n    comment,\n    isAnswerBox,\n    isPostBox,\n    isPostListBox\n  };\n  var createApiUrl = '';\n  var updateUrl = '';\n\n  if (isAnswerBox) {\n    updateUrl = api.updateAnswerCommentApi(comment.id);\n    createApiUrl = api.createAnswerCommentReplyApi(comment.id);\n  } else {\n    updateUrl = api.updatePostCommentApi(comment.id);\n    createApiUrl = api.createPostCommentReplyApi(comment.id);\n  }\n\n  let modalOptionsProps = {\n    modalProps: {\n      objName: 'comment',\n      actionType: types.UPDATE_COMMENT,\n      isPut: true,\n      obj: comment,\n      objId: comment.id,\n      objIndex: index,\n      apiUrl: updateUrl\n    },\n    modalType: 'optionsMenu'\n  };\n  let upvoteBtnProps = {\n    objName: 'comment',\n    actionType: types.UPDATE_COMMENT,\n    isPut: true,\n    obj: props.comment,\n    objId: props.comment.id,\n    objIndex: props.index,\n    apiUrl: updateUrl,\n    byId: props.commentById\n  };\n  let createReplyProps = {\n    modalProps: {\n      objName: 'reply',\n      actionType: types.CREATE_REPLY,\n      obj: props.comment,\n      objId: props.comment.id,\n      isPost: true,\n      objIndex: props.index,\n      editorPlaceHolder: 'Add Reply...',\n      apiUrl: createApiUrl\n    },\n    modalType: 'editor'\n  };\n  let btnsProps = {\n    createReplyProps,\n    upvoteBtnProps,\n    modalOptionsProps,\n    btnStyles: optionsBtnStyles,\n    btnText: 'More'\n  };\n  Object.assign(btnsProps, props);\n  let itemsCounter = React.createElement(Link, {\n    to: {\n      pathname: pathToUpvoters,\n      state\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, props.comment.upvotes, \"  Upvotes\");\n  let upvoteBtn = props.comment.upvoted ? React.createElement(DownVoteCommentBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })) : React.createElement(UpVoteCommentBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n  let replyBtn = React.createElement(ReplyBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }));\n  let optionsBtn = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(OptBtnSmallScreen, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(OptBtnBigScreen, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })));\n  const btnsList = {\n    itemsCounter: itemsCounter,\n    btn1: upvoteBtn,\n    btn2: replyBtn,\n    btn3: optionsBtn\n  };\n  const userProps = {\n    user: props.post.created_by,\n    currentUser: props.currentUser\n  };\n  return React.createElement(\"div\", {\n    className: \"comment-box\",\n    id: \"comment-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(UserComponentSmall, Object.assign({}, userProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Editor, {\n    blockRendererFn: pageMediaBlockRenderer,\n    editorState: editorState,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), React.createElement(ButtonsBox, Object.assign({}, btnsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), props.comment.replies.length ? React.createElement(RepliesBox, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })) : \"\");\n};\nexport const CommentDropDownMenu = props => React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 178\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  className: \"btn-sm answer-option options-btn \",\n  id: \"questionMenuButton\",\n  \"data-toggle\": \"dropdown\",\n  \"aria-haspopup\": \"false\",\n  \"aria-expanded\": \"true\",\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"material-icons \",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 181\n  },\n  __self: this\n}, \"more_horiz\")), React.createElement(\"div\", {\n  className: \"dropdown-menu\",\n  \"aria-labelledby\": \"questionMenuButton\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 183\n  },\n  __self: this\n}, React.createElement(CommentOptModalBtns, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184\n  },\n  __self: this\n})))));\nexport const CommentModalMenu = props => React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 192\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"modal-menu \",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 193\n  },\n  __self: this\n}, React.createElement(ModalCloseBtn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 194\n  },\n  __self: this\n}), React.createElement(CommentOptModalBtns, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195\n  },\n  __self: this\n}))));","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/components/comment_components.js"],"names":["React","BrowserRouter","Link","MatchMediaHOC","ReplyBtn","UpVoteCommentBtn","CommentOptModalBtns","DownVoteCommentBtn","OpenModalButton","QuestionOptDropDownBtn","ModalCloseBtn","ButtonsBox","Api","types","RepliesBox","UserComponentSmall","Editor","EditorState","convertFromRaw","pageMediaBlockRenderer","OptBtnSmallScreen","OptBtnBigScreen","api","CommentsComponent","props","optionsBtnStyles","fontSize","background","fontWeight","width","color","margin","isAnswerBox","isPostBox","comment","index","isPostListBox","storedState","JSON","parse","contentState","editorState","createWithContent","pathToUpvoters","id","state","createApiUrl","updateUrl","updateAnswerCommentApi","createAnswerCommentReplyApi","updatePostCommentApi","createPostCommentReplyApi","modalOptionsProps","modalProps","objName","actionType","UPDATE_COMMENT","isPut","obj","objId","objIndex","apiUrl","modalType","upvoteBtnProps","byId","commentById","createReplyProps","CREATE_REPLY","isPost","editorPlaceHolder","btnsProps","btnStyles","btnText","Object","assign","itemsCounter","pathname","upvotes","upvoteBtn","upvoted","replyBtn","optionsBtn","btnsList","btn1","btn2","btn3","userProps","user","post","created_by","currentUser","replies","length","CommentDropDownMenu","CommentModalMenu"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { MatchMediaHOC } from 'react-match-media';\n\n\nimport { ReplyBtn,UpVoteCommentBtn, CommentOptModalBtns, DownVoteCommentBtn,\n         OpenModalButton, QuestionOptDropDownBtn, ModalCloseBtn  } from \"components/buttons\";\nimport {ButtonsBox} from \"components/partial_components\";\nimport Api from 'api';\nimport  * as types  from 'actions/types';\n\nimport RepliesBox from \"containers/replies/reply_page\";\nimport { UserComponentSmall } from \"components/profile_components\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport {pageMediaBlockRenderer} from 'components/editor_components';\n\n\nconst OptBtnSmallScreen = MatchMediaHOC(OpenModalButton, '(max-width: 500px)');\nconst OptBtnBigScreen = MatchMediaHOC(QuestionOptDropDownBtn, '(min-width: 800px)');\nconst api      = new Api();\n\n\n\n\n\n\nexport const CommentsComponent = props => {\n  let optionsBtnStyles = {\n              fontSize   : '11px',\n              background : ' #F5F5F5',\n              fontWeight : 'bold',\n              width      : '40px',\n              color      : '#4A4A4A',\n              margin     : '0 0 2px'\n   }\n\n   let {isAnswerBox, isPostBox,comment,index, isPostListBox} = props;\n   \n   let storedState = JSON.parse(comment.comment)\n   const contentState = convertFromRaw(storedState);\n   const editorState = EditorState.createWithContent(contentState);\n\n\n    let pathToUpvoters =  `/comment/${comment.id}/upvoters/`;\n\n   \n   let state = {\n         comment,\n         isAnswerBox,\n         isPostBox,\n         isPostListBox,\n      }\n\n   \n   var createApiUrl = '';\n   var updateUrl    = ''; \n   if (isAnswerBox) {\n      updateUrl    = api.updateAnswerCommentApi(comment.id);\n      createApiUrl = api.createAnswerCommentReplyApi(comment.id);\n   }else{\n      updateUrl    = api.updatePostCommentApi(comment.id);\n      createApiUrl = api.createPostCommentReplyApi(comment.id);\n   }\n\n   let  modalOptionsProps = {\n      modalProps : {\n        objName     : 'comment',\n        actionType  : types.UPDATE_COMMENT,\n        isPut       : true,\n        obj         : comment, \n        objId       : comment.id,\n        objIndex    : index, \n        apiUrl      : updateUrl,\n      },\n\n      modalType : 'optionsMenu', \n    };\n   \n   let upvoteBtnProps = {\n      objName     : 'comment',\n      actionType  : types.UPDATE_COMMENT,\n      isPut       : true,\n      obj         : props.comment, \n      objId       : props.comment.id,\n      objIndex    : props.index,\n      apiUrl      : updateUrl,\n      byId        : props.commentById,\n   };\n   \n\n   let  createReplyProps = {\n      modalProps : {\n        objName           : 'reply',\n        actionType        : types.CREATE_REPLY,\n        obj               : props.comment,\n        objId             : props.comment.id,\n        isPost            : true,\n        objIndex          : props.index,\n        editorPlaceHolder : 'Add Reply...',\n        apiUrl            : createApiUrl,\n         \n      },\n      modalType : 'editor', \n          \n   };\n\n   let btnsProps = {\n         createReplyProps,\n         upvoteBtnProps,\n         modalOptionsProps,\n         btnStyles:optionsBtnStyles,\n         btnText : 'More', \n      }; \n\n   Object.assign(btnsProps, props)\n   \n    let itemsCounter = <Link to={{pathname:pathToUpvoters,state }}>\n                          { props.comment.upvotes }  Upvotes\n                      </Link>;\n\n   let upvoteBtn =  props.comment.upvoted? <DownVoteCommentBtn {...btnsProps}/>\n               : <UpVoteCommentBtn {...btnsProps}/>\n\n   let replyBtn =  <ReplyBtn {...btnsProps}/>;\n   let optionsBtn =  <div>\n                        <OptBtnSmallScreen {...btnsProps}/> \n                        <OptBtnBigScreen {...props}/>\n                     </div>;\n                         \n              \n    const btnsList  = {\n        itemsCounter :  itemsCounter,\n        btn1         :  upvoteBtn,\n        btn2         :  replyBtn,\n        btn3         :  optionsBtn,\n      } \n\n      const userProps  = {\n              user        : props.post.created_by,\n              currentUser : props.currentUser,\n            };\n\n    \n\n   return(\n      \n      <div  className=\"comment-box\" id=\"comment-box\">\n         <div className=\"user-box\">\n\n            <UserComponentSmall {...userProps }\n            />\n           \n          </div>\n    \n         <div className=\"comment\">\n            <Editor\n              blockRendererFn={pageMediaBlockRenderer}\n              editorState={editorState} \n              readOnly={true} />\n         </div>\n         <ButtonsBox {...btnsList}/>\n          { props.comment.replies.length?\n            <RepliesBox {...props}/>\n            :\n            \"\"\n          }\n      </div>\n                               \n   )\n}\n\n\n\n\n\nexport const CommentDropDownMenu = props => (\n   <BrowserRouter>\n      <div>\n         <button className=\"btn-sm answer-option options-btn \" id=\"questionMenuButton\"\n              data-toggle=\"dropdown\" aria-haspopup=\"false\" aria-expanded=\"true\" type=\"button\" >\n              <i className=\"material-icons \">more_horiz</i>\n    </button>\n  <div className=\"dropdown-menu\" aria-labelledby=\"questionMenuButton\">\n    <CommentOptModalBtns {...props} />\n  </div>\n  </div>\n  </BrowserRouter>\n \n)\n\nexport const CommentModalMenu = props => (\n   <BrowserRouter>\n    <div className=\"modal-menu \">\n      <ModalCloseBtn/>\n      <CommentOptModalBtns {...props} />      \n   </div>\n   </BrowserRouter>\n) \n\n"]},"metadata":{},"sourceType":"module"}