{"ast":null,"code":"import _defineProperty from \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/index/index_page.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport * as action from 'actions/actionCreators';\nimport { Link } from \"react-router-dom\";\nimport { NavigationBarSmallScreen, NavigationBarBigScreen } from \"components/navBar\";\nimport { store } from \"index\"; //import AnswersBox from \"containers/answer/answer_page\";\n\nimport { QuestionComponent } from \"components/question_components\";\nimport AjaxLoader from \"components/ajax-loader\";\nimport withHigherOrderIndexBox from \"containers/index/higher_order_index\";\n\nclass IndexBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHomeBox: true,\n      questionListById: 'filteredQuestions',\n      postListById: 'filteredPosts',\n      answerListById: 'filteredAnswers'\n    };\n  }\n\n  // static getDerivedStateFromError(error) {\n  // Update state so the next render will show the fallback UI.\n  //  return  dispatch => action.handleError(error);\n  // }\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidUpdate(nextProps, prevState) {//console.log(nextProps, this.props)\n  }\n\n  componentDidMount() {\n    let questionList = localStorage.getItem('questionList');\n    questionList = JSON.parse(questionList);\n    var questionListById = this.state.questionListById;\n\n    if (questionList) {\n      store.dispatch(action.getQuestionListPending(questionListById));\n      store.dispatch(action.getQuestionListSuccess(questionListById, questionList));\n    } else {\n      let optionsProps = this.state;\n      this.updateIndexEntyties(optionsProps);\n      this.props.getIndex(optionsProps);\n    }\n  }\n\n  updateIndexEntyties(params) {\n    var questionListById = params.questionListById,\n        answerListById = params.answerListById,\n        postListById = params.postListById;\n    store.dispatch(action.getQuestionListPending(questionListById));\n    store.dispatch(action.getAnswerListPending(answerListById));\n    store.dispatch(action.getPostListPending(postListById));\n  }\n\n  getProps() {\n    let props = _objectSpread({}, this.state);\n\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    console.log(props);\n    var index = props.entyties.index;\n    return React.createElement(\"div\", {\n      className: \"home-page\",\n      id: \"home-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(NavigationBarBigScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(NavigationBarSmallScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), index ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, index.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loder-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Questions, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })))) : \"\");\n  }\n\n}\n\n;\nexport default withHigherOrderIndexBox(IndexBox);\nexport const IndexComponent = props => {\n  var questionListById = props.questionListById,\n      answerListById = props.answerListById,\n      postListById = props.postListById,\n      entyties = props.entyties;\n  var questions = entyties.questions.byId[questionListById];\n  var posts = entyties.posts.byId[postListById];\n  var answers = entyties.answers.byId[answerListById];\n};\nexport const Questions = props => {\n  var index = props.entyties.index;\n  let questions = index.questions;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, questions && questions.length ? React.createElement(\"div\", {\n    className: \"home-page-contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    let contentsProps = {\n      question,\n      index\n    };\n\n    if (question.answer) {} else {\n      contentsProps['isHomeBox'] = props.isHomeBox;\n    }\n\n    Object.assign(contentsProps, props);\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(QuestionComponent, Object.assign({}, contentsProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })));\n  })) : \"\");\n};\n\nconst HomePageContents = props => {\n  console.log(props);\n  let state = {\n    currentUser: props.currentUser,\n    questionObj: props.questionObj\n  };\n  let questionPath = \"/question/\".concat(props.questionObj.slug, \"/\");\n  return React.createElement(\"div\", {\n    className: \"question-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question-home-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question-home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: questionPath,\n      state: state\n    },\n    className: \"question-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, props.questionObj.add_question)))));\n};\n\nexport const Answers = props => {\n  var answerListById = props.answerListById,\n      entyties = props.entyties;\n  var answers = entyties.answers.byId[answerListById];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, answers && answers.answerList ? React.createElement(\"div\", {\n    className: \"answer-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"number-answers-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, answers.answerList.length > 1 ? React.createElement(\"p\", {\n    className: \"items-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, answers.answerList.length, \"  Answers\") : React.createElement(\"p\", {\n    className: \"items-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, answers.answerList.length, \" Answer\")), answers.answerList.map((answer, index) => {\n    let answerProps = {\n      answer: answer,\n      index: index\n    };\n    Object.assign(answerProps, props);\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"answer-contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(AnswersComponent, Object.assign({}, answerProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })));\n  })) : \"\");\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/index/index_page.js"],"names":["React","Component","action","Link","NavigationBarSmallScreen","NavigationBarBigScreen","store","QuestionComponent","AjaxLoader","withHigherOrderIndexBox","IndexBox","constructor","props","state","isHomeBox","questionListById","postListById","answerListById","componentDidCatch","error","info","console","log","componentDidUpdate","nextProps","prevState","componentDidMount","questionList","localStorage","getItem","JSON","parse","dispatch","getQuestionListPending","getQuestionListSuccess","optionsProps","updateIndexEntyties","getIndex","params","getAnswerListPending","getPostListPending","getProps","Object","assign","render","index","entyties","isLoading","IndexComponent","questions","byId","posts","answers","Questions","length","map","question","contentsProps","answer","HomePageContents","currentUser","questionObj","questionPath","slug","pathname","add_question","Answers","answerList","answerProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  * as action  from 'actions/actionCreators';\nimport { Link } from \"react-router-dom\";\n\nimport {NavigationBarSmallScreen,NavigationBarBigScreen } from \"components/navBar\";\nimport {store} from \"index\";\n//import AnswersBox from \"containers/answer/answer_page\";\nimport { QuestionComponent} from \"components/question_components\"\nimport  AjaxLoader from \"components/ajax-loader\";\n\nimport withHigherOrderIndexBox from \"containers/index/higher_order_index\";\n\n\n\n\nclass IndexBox extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isHomeBox        : true,\n            questionListById : 'filteredQuestions',\n            postListById     : 'filteredPosts',\n            answerListById   : 'filteredAnswers',\n\n\n        } \n    };\n  \n\n    // static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    //  return  dispatch => action.handleError(error);\n    // }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.log(error, info);\n    }\n\n\n    componentDidUpdate(nextProps, prevState) {\n      //console.log(nextProps, this.props)\n    };\n\n         \n   \n    componentDidMount() {\n        let questionList  = localStorage.getItem('questionList');\n        questionList = JSON.parse(questionList)\n        var questionListById = this.state.questionListById;\n        \n        if (questionList) {\n            store.dispatch(action.getQuestionListPending(questionListById));\n            store.dispatch(action.getQuestionListSuccess(questionListById, questionList));\n        }\n        else{\n\n            let optionsProps = this.state;\n            this.updateIndexEntyties(optionsProps);\n            this.props.getIndex(optionsProps);                           \n        }\n    };\n\n    updateIndexEntyties(params){\n        var { questionListById, answerListById, postListById} = params;\n\n        store.dispatch(action.getQuestionListPending(questionListById));\n        store.dispatch(action.getAnswerListPending(answerListById));\n        store.dispatch(action.getPostListPending(postListById))\n\n    }\n\n\n    getProps(){\n        let props = {\n                ...this.state,\n        };\n\n        return Object.assign(props, this.props );  \n    };\n\n      \n    render() {\n        let props = this.getProps()\n        console.log(props)\n        var index  = props.entyties.index;\n        \n              \n        return (\n\n            <div className=\"home-page\" id=\"home-page\">\n\n                <NavigationBarBigScreen {...props}/>\n                <NavigationBarSmallScreen {...props}/>\n\n                { index?\n\n                    <div>\n                        { index.isLoading?\n\n                            <div  className=\"page-spin-loder-box\">\n                                <AjaxLoader/>\n                            </div>\n\n                            :\n\n                            <div>\n                                <Questions {...props}/> \n                            </div>\n                        }\n\n                    </div>\n\n                    :\n                    \"\"\n                }\n            </div>\n        );\n    };\n};\n\n\n\n\n\nexport default  withHigherOrderIndexBox(IndexBox);\n\n\nexport const IndexComponent = props => {\n   \n   var { questionListById, answerListById, postListById, entyties } = props;\n\n   var questions = entyties.questions.byId[questionListById];\n   var posts     = entyties.posts.byId[postListById];\n   var answers   = entyties.answers.byId[answerListById]; \n\n}\n\n\nexport const Questions = props => {\n   var index  = props.entyties.index;\n   let questions      = index.questions\n  \n   return (\n\n      <div>\n         { questions && questions.length?\n         <div className=\"home-page-contents\">\n\n            { questions.map((question, index) => {\n               let contentsProps = {question, index};\n                            \n               if (question.answer) {\n                  \n               }else{\n                  contentsProps['isHomeBox'] = props.isHomeBox;\n                  \n               }\n\n               Object.assign(contentsProps, props)  \n\n               return (\n\n                  <div key={index} >\n                     <QuestionComponent {...contentsProps}  />\n                  </div>\n               )\n            }\n            )}\n         </div>\n         :\n         \"\"\n\n      }\n       \n      </div>\n   );\n};\n\n\n\n\nconst HomePageContents = props => {\n  console.log(props)\n   let state = {\n      currentUser  : props.currentUser, \n      questionObj  : props.questionObj,\n      };\n\n   let questionPath = `/question/${props.questionObj.slug}/`;\n\n   return (\n      <div className=\"question-content\">\n         <div className=\"question-home-box\">\n            <div className=\"question-home\">  \n               <b className=\"\">\n                  <Link to={{pathname: questionPath, state:state }} className=\"question-link\">\n                     { props.questionObj.add_question }\n                  </Link>\n               </b>\n            </div>\n\n            \n         </div>\n      </div>  \n   );\n\n}; \n\n\n\n\n\n\nexport const Answers = props => {\n    var { answerListById, entyties } = props;\n    var answers   = entyties.answers.byId[answerListById]; \n         \n    return(\n        <div>\n\n            {answers && answers.answerList?\n\n                <div className=\"answer-container\">\n                    <div className=\"number-answers-box\">\n\n                        { answers.answerList.length > 1? \n\n                            <p className=\"items-count\">{answers.answerList.length }  Answers</p>\n                            :\n                            <p className=\"items-count\">{answers.answerList.length } Answer</p>\n                        }\n                    </div>\n\n                    { answers.answerList.map((answer, index) => {\n\n                        let answerProps = {answer : answer, index : index};\n\n                        Object.assign(answerProps, props); \n      \n                        return ( \n                            <div key={index} className=\"answer-contents\"> \n                                <AnswersComponent {...answerProps}/>\n                            </div>\n                        );\n                    }\n                    )}\n                </div>\n\n                :\n\n                \"\"\n            }\n\n        </div> \n    )\n};"]},"metadata":{},"sourceType":"module"}