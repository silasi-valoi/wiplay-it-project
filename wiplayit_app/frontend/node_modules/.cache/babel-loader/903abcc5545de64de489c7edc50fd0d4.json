{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_grand_children_page.js\";\nimport React, { Component } from 'react';\nimport AjaxLoader from \"components/ajax-loader\";\nimport { ReplyGrandChildernComponent, GrandChildRepliesLink } from \"components/reply_components\";\nimport * as action from 'actions/actionCreators';\nimport { store } from \"index\";\n\nclass ReplyGrandChildrenBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReplyGrandChildBox: true,\n      byId: ''\n    };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    var reply = this.props.reply;\n\n    if (reply) {\n      var byId = \"replyGrandChild\".concat(reply.id);\n      this.setState({\n        byId\n      });\n      var props = {\n        actionType: 'GET_REPLY_CHILD_LINK_DATA',\n        reply,\n        byId\n      };\n      store.dispatch(action.getReplyChildLindData(props));\n    }\n  }\n\n  componentDidUpdate(nextProps, prevState) {}\n\n  getProps() {\n    let props = {\n      isReplyGrandChildBox: this.state.isReplyGrandChildBox,\n      grandChildParent: this.props.reply,\n      grandChildById: this.state.byId\n    };\n    return Object.assign(props, this.props.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    var replies = props.entyties.replies;\n    replies = replies.byId[props.grandChildById];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, replies ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, replies.showLink ? React.createElement(GrandChildRepliesLink, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, replies.isLoading ? React.createElement(\"div\", {\n      className: \"spin-loader-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(ReplyGrandChildernComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))))) : \"\");\n  }\n\n}\n\n;\nexport default ReplyGrandChildrenBox;","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_grand_children_page.js"],"names":["React","Component","AjaxLoader","ReplyGrandChildernComponent","GrandChildRepliesLink","action","store","ReplyGrandChildrenBox","constructor","props","state","isReplyGrandChildBox","byId","componentDidCatch","error","info","console","log","componentDidMount","reply","id","setState","actionType","dispatch","getReplyChildLindData","componentDidUpdate","nextProps","prevState","getProps","grandChildParent","grandChildById","Object","assign","render","replies","entyties","showLink","isLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAQC,UAAR,MAAwB,wBAAxB;AACA,SAAQC,2BAAR,EAAoCC,qBAApC,QAAkE,6BAAlE;AACA,OAAQ,KAAKC,MAAb,MAA0B,wBAA1B;AACA,SAAQC,KAAR,QAAoB,OAApB;;AAEA,MAAMC,qBAAN,SAAoCN,SAApC,CAA8C;AAE5CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACVC,MAAAA,oBAAoB,EAAG,IADb;AAEVC,MAAAA,IAAI,EAAmB;AAFb,KAAb;AAIF;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,IAAR,EAAc;AAC9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,IAAnB;AACD;;AAECG,EAAAA,iBAAiB,GAAG;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACA,QAAIU,KAAK,GAAI,KAAKV,KAAL,CAAWU,KAAxB;;AACA,QAAIA,KAAJ,EAAW;AACR,UAAIP,IAAI,4BAAqBO,KAAK,CAACC,EAA3B,CAAR;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA;AAAD,OAAd;AACA,UAAIH,KAAK,GAAG;AACTa,QAAAA,UAAU,EAAG,2BADJ;AAETH,QAAAA,KAFS;AAGTP,QAAAA;AAHS,OAAZ;AAKAN,MAAAA,KAAK,CAACiB,QAAN,CAAelB,MAAM,CAACmB,qBAAP,CAA6Bf,KAA7B,CAAf;AACF;AACH;;AAEDgB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAExC;;AAEDC,EAAAA,QAAQ,GAAG;AACR,QAAInB,KAAK,GAAG;AACTE,MAAAA,oBAAoB,EAAI,KAAKD,KAAL,CAAWC,oBAD1B;AAETkB,MAAAA,gBAAgB,EAAQ,KAAKpB,KAAL,CAAWU,KAF1B;AAGTW,MAAAA,cAAc,EAAU,KAAKpB,KAAL,CAAWE;AAH1B,KAAZ;AAKA,WAAOmB,MAAM,CAACC,MAAP,CAAcvB,KAAd,EAAqB,KAAKA,KAAL,CAAWA,KAAhC,CAAP;AACF;;AAIDwB,EAAAA,MAAM,GAAG;AAEN,QAAIxB,KAAK,GAAU,KAAKmB,QAAL,EAAnB;AACA,QAAIM,OAAO,GAAQzB,KAAK,CAAC0B,QAAN,CAAeD,OAAlC;AACAA,IAAAA,OAAO,GAAYA,OAAO,CAACtB,IAAR,CAAaH,KAAK,CAACqB,cAAnB,CAAnB;AAEA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCI,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,OAAO,CAACE,QAAR,GACC,oBAAC,qBAAD,oBAA2B3B,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKyB,OAAO,CAACG,SAAR,GACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,2BAAD,oBAAiC5B,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADH,CANN,CAJN,CADK,GAmBL,EApBH,CADH;AAyBF;;AA7E0C;;AA8E7C;AAKD,eAAeF,qBAAf","sourcesContent":["import React, { Component } from 'react';\nimport  AjaxLoader from \"components/ajax-loader\";\nimport {ReplyGrandChildernComponent,GrandChildRepliesLink  } from \"components/reply_components\"\nimport  * as action  from 'actions/actionCreators';\nimport {store} from \"index\";\n\nclass ReplyGrandChildrenBox extends Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n         isReplyGrandChildBox : true,\n         byId                 : '',\n      };\n   };\n\n   componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n    componentDidMount() {\n      console.log(this.props)\n      var reply  = this.props.reply;\n      if (reply) {\n         var byId = `replyGrandChild${reply.id}`;\n         this.setState({byId});\n         var props = {\n            actionType : 'GET_REPLY_CHILD_LINK_DATA',\n            reply,\n            byId, \n         }\n         store.dispatch(action.getReplyChildLindData(props)); \n      }     \n   }; \n\n   componentDidUpdate(nextProps, prevState) {\n      \n   }; \n  \n   getProps() {\n      let props = {\n         isReplyGrandChildBox  : this.state.isReplyGrandChildBox,\n         grandChildParent      : this.props.reply,\n         grandChildById        : this.state.byId,\n      } \n      return Object.assign(props, this.props.props);\n   };\n\n\n\n   render() { \n     \n      let props      =   this.getProps();\n      var replies    =   props.entyties.replies;\n      replies        =   replies.byId[props.grandChildById]; \n      \n      return (\n         <div>\n         {replies?\n            <div>\n               { replies.showLink?\n                  <GrandChildRepliesLink {...props}/>\n                  :\n                  <div>\n                     { replies.isLoading?\n                        <div className=\"spin-loader-box\">\n                           <AjaxLoader/>\n                        </div>\n                     :\n                        <div>\n                           <ReplyGrandChildernComponent {...props}/>\n                        </div>\n                     }\n                  </div>\n               }\n            </div>\n            :\n            \"\"\n         }\n         </div>\n      )\n   };    \n};\n\n\n\n\nexport default ReplyGrandChildrenBox;\n\n\n\n"]},"metadata":{},"sourceType":"module"}