{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/answer/answer_page.js\";\nimport React, { Component } from 'react';\nimport { AnswersComponent } from \"components/answer_components\";\n\nclass AnswersBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAnswerBox: true,\n      questionObj: '',\n      answerById: ''\n    };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidMount() {\n    var questionById = this.props.questionById;\n    var question = this.props.entyties.question.byId[questionById];\n    let questionObj = question.questionObj;\n    var answerById = \"answer\".concat(questionObj.id);\n    this.setState({\n      answerById,\n      questionObj\n    });\n  }\n\n  componentDidUpdate(nextProps, prevState) {}\n\n  getProps() {\n    let props = {\n      isAnswerBox: this.state.isAnswerBox,\n      answerById: this.state.answerById,\n      questionObj: this.state.question\n    };\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    const props = this.getProps();\n    var answers = props.entyties.answers;\n    answers = answers.byId[props.answerById];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, answers ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, answers.answerList.length ? React.createElement(Answers, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })) : \"\") : \"\");\n  }\n\n}\n\n;\nexport default AnswersBox;\nexport const Answers = props => {\n  var answers = props.entyties.answers;\n  answers = answers.byId[props.answerById];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, answers && answers.answerList ? React.createElement(\"div\", {\n    className: \"answer-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"number-answers-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, answers.answerList.length > 1 ? React.createElement(\"p\", {\n    className: \"items-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, answers.answerList.length, \"  Answers\") : React.createElement(\"p\", {\n    className: \"items-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, answers.answerList.length, \" Answer\")), answers.answerList.map((answer, index) => {\n    let answerProps = {\n      answer: answer,\n      index: index\n    };\n    Object.assign(answerProps, props);\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"answer-contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(AnswersComponent, Object.assign({}, answerProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })));\n  })) : \"\");\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/answer/answer_page.js"],"names":["React","Component","AnswersComponent","AnswersBox","constructor","props","state","isAnswerBox","questionObj","answerById","componentDidCatch","error","info","console","log","componentDidMount","questionById","question","entyties","byId","id","setState","componentDidUpdate","nextProps","prevState","getProps","Object","assign","render","answers","answerList","length","Answers","map","answer","index","answerProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { AnswersComponent } from \"components/answer_components\";\n\n\n\nclass AnswersBox extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n         isAnswerBox : true,\n         questionObj : '',\n         answerById  : '', \n      };\n   };\n   \n   \n   componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n\n   componentDidMount() {\n      var questionById =  this.props.questionById;\n      var question     =  this.props.entyties.question.byId[questionById];\n      let questionObj  =  question.questionObj;\n      var answerById = `answer${questionObj.id}`;\n      this.setState({answerById, questionObj })\n   };\n\n   componentDidUpdate(nextProps, prevState) {\n    \n   } \n   \n \n   getProps() {\n   \n      let props = {\n        isAnswerBox  : this.state.isAnswerBox,\n        answerById   : this.state.answerById,\n        questionObj  : this.state.question,\n        \n      };\n      return Object.assign(props,this.props)\n   };\n\n\n   render() { \n      const props =  this.getProps();\n      var answers      = props.entyties.answers;\n      answers          = answers.byId[props.answerById]\n         \n      return (\n         <div>\n            { answers?\n               <div>\n                  {answers.answerList.length?\n                     <Answers {...props}/>\n                     :\n                     \"\"  \n                  }\n               </div>\n              :\n              \"\"\n            }\n         </div>\n      );        \n   };\n};\n\n\nexport default AnswersBox;\n\n\nexport const Answers = props => {\n    var answers = props.entyties.answers;\n    answers = answers.byId[props.answerById]\n         \n    return(\n        <div>\n\n            {answers && answers.answerList?\n\n                <div className=\"answer-container\">\n                    <div className=\"number-answers-box\">\n\n                        { answers.answerList.length > 1? \n\n                            <p className=\"items-count\">{answers.answerList.length }  Answers</p>\n                            :\n                            <p className=\"items-count\">{answers.answerList.length } Answer</p>\n                        }\n                    </div>\n\n                    { answers.answerList.map((answer, index) => {\n\n                        let answerProps = {answer : answer, index : index};\n\n                        Object.assign(answerProps, props); \n      \n                        return ( \n                            <div key={index} className=\"answer-contents\"> \n                                <AnswersComponent {...answerProps}/>\n                            </div>\n                        );\n                    }\n                    )}\n                </div>\n\n                :\n\n                \"\"\n            }\n\n        </div> \n    )\n};\n\n\n"]},"metadata":{},"sourceType":"module"}