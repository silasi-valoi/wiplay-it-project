{"ast":null,"code":"import axios from 'axios';\nlet API_URL = 'http://127.0.0.1:8000';\nlet MobileAPI_URL = 'http://192.168.43.101:3000';\nexport default class Axios {\n  constructor(props) {\n    console.log(props);\n    this.cachedEntyties = JSON.parse(localStorage.getItem('@@CachedEntyties'));\n    this.withAuthentication = props;\n  }\n\n  getTokenKey() {\n    var auth = this.cachedEntyties.auth;\n\n    if (auth && auth.tokenKey) {\n      return auth.tokenKey;\n    }\n  }\n\n  axiosInstance(with_token = true, tokenKey = null) {\n    //console.log(with_token, tokenKey)  \n    let baseURL = API_URL;\n\n    if (window.navigator.platform === 'Linux armv7l') {\n      baseURL = MobileAPI_URL;\n    }\n\n    var instance = axios.create({\n      baseURL: baseURL\n    }); //alert(with_token) \n\n    if (with_token) {\n      //retrive token from storage\n      let auth = localStorage.getItem('auth') ? true : false;\n\n      if (auth) {\n        auth = localStorage.getItem('auth');\n        auth = JSON.parse(auth);\n        tokenKey = auth.tokenKey;\n      }\n\n      if (tokenKey || auth) {\n        tokenKey = \"Token \".concat(tokenKey);\n        instance.defaults.headers.common['Authorization'] = tokenKey;\n      }\n    }\n\n    instance.defaults.timeout = 30000;\n    return instance;\n  }\n\n}","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/axios_instance.js"],"names":["axios","API_URL","MobileAPI_URL","Axios","constructor","props","console","log","cachedEntyties","JSON","parse","localStorage","getItem","withAuthentication","getTokenKey","auth","tokenKey","axiosInstance","with_token","baseURL","window","navigator","platform","instance","create","defaults","headers","common","timeout"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,OAAO,GAAG,uBAAd;AACA,IAAIC,aAAa,GAAG,4BAApB;AAMA,eAAe,MAAMC,KAAN,CAAY;AAEvBC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAKG,cAAL,GAAsBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CAAtB;AACA,SAAKC,kBAAL,GAA0BR,KAA1B;AAEH;;AAEDS,EAAAA,WAAW,GAAE;AAAA,QACJC,IADI,GACK,KAAKP,cADV,CACJO,IADI;;AAET,QAAIA,IAAI,IAAIA,IAAI,CAACC,QAAjB,EAA2B;AACvB,aAAOD,IAAI,CAACC,QAAZ;AACH;AAGJ;;AAGDC,EAAAA,aAAa,CAACC,UAAU,GAAC,IAAZ,EAAkBF,QAAQ,GAAC,IAA3B,EAAgC;AAC1C;AAEC,QAAIG,OAAO,GAAGlB,OAAd;;AAEH,QAAGmB,MAAM,CAACC,SAAP,CAAiBC,QAAjB,KAA8B,cAAjC,EAAgD;AAC3CH,MAAAA,OAAO,GAAIjB,aAAX;AACD;;AAED,QAAIqB,QAAQ,GAAGvB,KAAK,CAACwB,MAAN,CAAa;AAC3BL,MAAAA,OAAO,EAAEA;AADkB,KAAb,CAAf,CATyC,CAa3C;;AAEA,QAAID,UAAJ,EAAgB;AACb;AACA,UAAIH,IAAI,GAAGJ,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA8B,IAA9B,GAAqC,KAAhD;;AACA,UAAIG,IAAJ,EAAU;AACPA,QAAAA,IAAI,GAAIJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAR;AACAG,QAAAA,IAAI,GAAGN,IAAI,CAACC,KAAL,CAAWK,IAAX,CAAP;AACAC,QAAAA,QAAQ,GAAGD,IAAI,CAACC,QAAhB;AACF;;AACD,UAAIA,QAAQ,IAAID,IAAhB,EAAsB;AACnBC,QAAAA,QAAQ,mBAAWA,QAAX,CAAR;AACAO,QAAAA,QAAQ,CAACE,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiC,eAAjC,IAAoDX,QAApD;AACF;AACH;;AAEDO,IAAAA,QAAQ,CAACE,QAAT,CAAkBG,OAAlB,GAA4B,KAA5B;AACA,WAAOL,QAAP;AACF;;AAlDuB","sourcesContent":["\nimport axios from 'axios';\n\nlet API_URL = 'http://127.0.0.1:8000';\nlet MobileAPI_URL = 'http://192.168.43.101:3000'\n\n\n  \n  \n\nexport default class Axios {\n\n    constructor(props){\n        console.log(props)\n        this.cachedEntyties = JSON.parse(localStorage.getItem('@@CachedEntyties'));\n        this.withAuthentication = props;\n\n    }\n\n    getTokenKey(){\n        var {auth } = this.cachedEntyties\n        if (auth && auth.tokenKey) {\n            return auth.tokenKey\n        }\n\n\n    };\n\n\n    axiosInstance(with_token=true, tokenKey=null){\n       //console.log(with_token, tokenKey)  \n\n       \tlet baseURL = API_URL;\n\n    \tif(window.navigator.platform === 'Linux armv7l'){\n          baseURL =  MobileAPI_URL;\n        }\n\n        var instance = axios.create({\n         baseURL: baseURL,\n      });\n\n      //alert(with_token) \n\n      if (with_token) {\n         //retrive token from storage\n         let auth = localStorage.getItem('auth' )?true : false;\n         if (auth) {\n            auth  = localStorage.getItem('auth');\n            auth = JSON.parse(auth)\n            tokenKey = auth.tokenKey;\n         }\n         if (tokenKey || auth) {\n            tokenKey =`Token ${tokenKey}`;\n            instance.defaults.headers.common['Authorization'] = tokenKey;\n         }\n      }\n\n      instance.defaults.timeout = 30000;\n      return instance;\n   };\n\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}