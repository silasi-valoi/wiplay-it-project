{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/post/post_list.js\";\nimport React, { Component } from 'react';\nimport withMain from 'containers/higher-order-components/main';\nimport { PostComponent } from \"components/post_components\";\nimport * as action from 'actions/actionCreators';\nimport { store } from \"index\";\nimport HigherOrderIndexBox from \"containers/index/higher_order_index\";\nimport { PartalNavigationBar, NavigationBarBigScreen } from \"components/navBar\";\nimport AjaxLoader from \"components/ajax-loader\";\n\nclass PostListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPostListBox: true,\n      postListById: 'filteredPosts'\n    };\n  }\n\n  componentWillMount() {\n    console.log(this.props);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    let postList = localStorage.getItem('postList');\n    var postListById = this.state.postListById;\n    postList = JSON.parse(postList);\n\n    if (postList) {\n      store.dispatch(action.getPostListPending(postListById));\n      store.dispatch(action.getPostListSuccess(postListById, postList));\n    } else {\n      this.props.getPostList(postListById);\n    }\n  }\n\n  getProps() {\n    let props = {\n      isPostListBox: this.state.isPostListBox,\n      pageName: \"Posts\",\n      postListById: this.state.postListById\n    };\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    let props = this.getProps(); //let style =  {border:'1px solid red',padding:'60px 0 0 0', margin:'100px 0 0 0'}\n\n    var posts = props.entyties.posts;\n    console.log(posts);\n    posts = posts.byId[props.postListById];\n    console.log(props, posts);\n    return React.createElement(\"div\", {\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(PartalNavigationBar, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(NavigationBarBigScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), posts ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, posts.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loder-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Posts, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))) : \"\");\n  }\n\n}\n\nexport default withMain(PostListPage);\n\nconst Posts = props => {\n  var posts = props.entyties.posts;\n  posts = posts.byId[props.postListById];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"home-page-contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, posts.postList.map((post, index) => {\n    let postProps = {\n      post: post\n    };\n    Object.assign(postProps, props);\n    return React.createElement(\"div\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(PostComponent, Object.assign({}, postProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })));\n  })));\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/post/post_list.js"],"names":["React","Component","withMain","PostComponent","action","store","HigherOrderIndexBox","PartalNavigationBar","NavigationBarBigScreen","AjaxLoader","PostListPage","constructor","props","state","isPostListBox","postListById","componentWillMount","console","log","componentDidMount","postList","localStorage","getItem","JSON","parse","dispatch","getPostListPending","getPostListSuccess","getPostList","getProps","pageName","Object","assign","render","posts","entyties","byId","isLoading","Posts","map","post","index","postProps","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withMain  from 'containers/higher-order-components/main';\nimport { PostComponent} from \"components/post_components\"\nimport  * as action  from 'actions/actionCreators';\nimport {store} from \"index\";\nimport HigherOrderIndexBox from \"containers/index/higher_order_index\";\n\nimport {PartalNavigationBar,NavigationBarBigScreen } from \"components/navBar\";\nimport  AjaxLoader from \"components/ajax-loader\";\n \n\n\n\n\n\n\n\n\nclass  PostListPage extends Component  {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n         isPostListBox   : true,\n         postListById : 'filteredPosts'\n\n      }\n     \n   }\n  \n   componentWillMount() {\n      console.log(this.props)\n\n   }\n\n   \n   componentDidMount() {\n      console.log(this.props)\n      let postList  = localStorage.getItem('postList');\n      var postListById = this.state.postListById;\n      postList = JSON.parse(postList);\n      if (postList) {\n         store.dispatch(action.getPostListPending(postListById));\n         store.dispatch(action.getPostListSuccess(postListById ,postList));\n      }else{\n        this.props.getPostList(postListById);                           \n      }\n          \n   }\n\n   \n\n   getProps(){\n      let props = {\n         isPostListBox  : this.state.isPostListBox,\n         pageName       : \"Posts\",\n         postListById : this.state.postListById,\n      }\n      return Object.assign(props,this.props);\n   };\n\n   render() {\n      let props = this.getProps();\n      //let style =  {border:'1px solid red',padding:'60px 0 0 0', margin:'100px 0 0 0'}\n      var posts  = props.entyties.posts;\n       console.log(posts)\n      posts  = posts.byId[props.postListById];\n      console.log(props, posts)\n      return (\n         <div style={{}}>\n            <PartalNavigationBar {...props}/>\n               <NavigationBarBigScreen {...props} /> \n               {posts?\n                  <div>\n                     { posts.isLoading? \n                        <div  className=\"page-spin-loder-box\">\n                           <AjaxLoader/>\n                        </div>\n                        : \n                        <div>\n                           <Posts {...props}/>   \n                        </div>\n                     }\n                  </div>\n               :\n               \"\"\n            }\n         </div>\n      );\n  };\n\n}\n\n\nexport default withMain(PostListPage);\n\n\n\n\n\n\nconst Posts = props => {\n\n   var posts  = props.entyties.posts;\n   posts  = posts.byId[props.postListById];\n\n   return (\n      <div>\n         <div className=\"home-page-contents\">\n\n            { posts.postList.map(( post, index )  => {\n               let postProps = {post:post} \n               Object.assign(postProps, props);\n               \n               return (\n                  <div key={post.id} >\n                    <PostComponent {...postProps}/>\n                  </div>\n                  )\n               }\n            )}\n\n         </div>\n      </div>        \n   )\n}\n\n\n\n\n\n "]},"metadata":{},"sourceType":"module"}