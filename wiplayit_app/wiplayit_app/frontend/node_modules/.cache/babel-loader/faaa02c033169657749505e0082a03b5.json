{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/post/post_page.js\";\nimport React, { Component } from 'react';\nimport { PartalNavigationBar, NavigationBarBigScreen } from \"components/navBar\";\nimport AjaxLoader from \"components/ajax-loader\";\nimport { PostComponent } from \"components/post_components\";\nimport withHigherOrderIndexBox from \"containers/index/higher_order_index\";\nimport * as action from 'actions/actionCreators';\nimport { getPost } from 'dispatch/index';\nimport { store } from \"index\";\n\nclass PostPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPostBox: true,\n      pageName: \"Post\",\n      postById: ''\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidUpdate(nextProps, prevProps) {\n    if (nextProps !== this.props) {\n      console.log('Component updated');\n    }\n  }\n\n  componentDidMount() {\n    let state = this.props.location.state;\n\n    if (state) {\n      let isNewPost = state.isNewPost,\n          post = state.post;\n      this.setState({\n        postById: \"post\".concat(post.id)\n      });\n\n      if (isNewPost) {\n        store.dispatch(action.getQuestionSuccess(post));\n        store.dispatch(action.Redirected());\n      } else {\n        store.dispatch(getPost(post.id));\n      }\n    }\n  }\n\n  getProps() {\n    //Collect all state data and props.\n    let props = {\n      isPostBox: this.state.isPostBox,\n      pageName: this.state.pageName,\n      postById: this.state.postById\n    };\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    var postById = props.postById;\n    var post = props.entyties.post;\n    console.log(post, props);\n    post = post.byId[postById];\n    console.log(post);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(PartalNavigationBar, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(NavigationBarBigScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), post ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, post.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loder-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      style: {\n        paddingTop: '70px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, post.post ? React.createElement(Post, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })) : \"\")) : \"\");\n  }\n\n}\n\n;\nexport default withHigherOrderIndexBox(PostPage);\nexport const Post = props => {\n  var postById = props.postById;\n  var postState = props.entyties.post.byId[postById];\n  let post = postState.post;\n  var postProps = Object.assign({\n    post\n  }, props);\n  return React.createElement(\"div\", {\n    className: \"post-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(PostComponent, Object.assign({}, postProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/post/post_page.js"],"names":["React","Component","PartalNavigationBar","NavigationBarBigScreen","AjaxLoader","PostComponent","withHigherOrderIndexBox","action","getPost","store","PostPage","constructor","props","state","isPostBox","pageName","postById","componentWillMount","componentDidUpdate","nextProps","prevProps","console","log","componentDidMount","location","isNewPost","post","setState","id","dispatch","getQuestionSuccess","Redirected","getProps","Object","assign","render","entyties","byId","isLoading","paddingTop","Post","postState","postProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {PartalNavigationBar,NavigationBarBigScreen } from \"components/navBar\";\n\nimport  AjaxLoader from \"components/ajax-loader\";\n\nimport { PostComponent} from \"components/post_components\"\n\nimport withHigherOrderIndexBox from \"containers/index/higher_order_index\";\n \nimport  * as action  from 'actions/actionCreators';\nimport { getPost } from 'dispatch/index';\nimport {store} from \"index\";\n\n\n\n\n\nclass  PostPage extends Component  {\n   \n    constructor(props) {\n      super(props);\n\n        this.state = {\n            isPostBox   : true,\n            pageName    : \"Post\", \n            postById    : ''\n        };\n    };\n  \n    componentWillMount() {\n\n    }\n\n    componentDidUpdate(nextProps,prevProps) {\n      \n\n      if (nextProps !== this.props ) {\n        console.log('Component updated');\n      } \n        \n    };   \n\n    componentDidMount() {\n        let {state} = this.props.location;\n\n        if (state) {\n            let { isNewPost, post } = state;\n           this.setState({postById:`post${post.id}`});\n\n        if (isNewPost) {\n            store.dispatch(action.getQuestionSuccess(post))\n            store.dispatch(action.Redirected());\n        }else {\n            store.dispatch(getPost(post.id));\n        } \n      }\n    };\n\n\n   \n    getProps(){\n\n        //Collect all state data and props.\n        let props = {\n        \tisPostBox      : this.state.isPostBox,\n            pageName       : this.state.pageName,\n            postById       : this.state.postById\n        };\n\n        return Object.assign(props, this.props);\n    };\n\n    render() {\n        let props = this.getProps();\n        var postById = props.postById;\n        var post = props.entyties.post;\n        console.log(post, props)\n        post = post.byId[postById]\n        console.log(post)                 \n        return (\n            <div>\n               <PartalNavigationBar {...props}/>\n               <NavigationBarBigScreen {...props} />\n               { post?\n                    <div>\n                    { post.isLoading?\n                        <div className=\"page-spin-loder-box\">\n                           <AjaxLoader/>\n                        </div>\n                        :\n                        <div style={{paddingTop:'70px'}}>\n                           { post.post?\n                               <Post {...props}/>\n                               :\n                               \"\"\n                            }\n                        </div>\n                    } \n                    </div>\n                :\n                \"\"  \n                }           \n         </div>\n\n            \n    );                   \n      \n    };\n   \n};\n\n\nexport default withHigherOrderIndexBox(PostPage);\n\n\nexport const Post = props => {\n\tvar postById = props.postById;\n   var postState = props.entyties.post.byId[postById];\n   let post      = postState.post;\n   var postProps = Object.assign({post},props)\n\treturn(\n       <div className=\"post-page\">  \n        <PostComponent {...postProps }  />\n      </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}