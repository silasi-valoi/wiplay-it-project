{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/users/user_list_page.js\";\nimport React, { Component } from 'react';\nimport withMain from 'containers/higher-order-components/main';\nimport { UserList } from \"components/profile_components\";\nimport { PartalNavigationBar } from \"components/navBar\";\nimport AjaxLoader from \"components/ajax-loader\";\nimport * as action from 'actions/actionCreators';\nimport { store } from \"index\";\nimport Api from 'api';\nconst api = new Api();\n\nclass UserListBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersById: \"allUsersList\",\n      pageName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    let state = this.props.location.state;\n    let usersProps = {};\n    state['pageName'] = 'Upvoters';\n    state['apiUrl'] = api.getUserListApi();\n    state['usersById'] = this.state.usersById;\n    console.log(state);\n\n    switch (state.usersIsFor) {\n      case 'userProfileFollowers':\n      case 'userProfileFollowings':\n        usersProps = this.updateUserFollowersProps(state);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      case 'questionFollowers':\n        usersProps = this.updateQuestionFollowersProps(state);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      case 'answerUpVoters':\n        usersProps = this.updateAnswerUpVotersProps(state);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      case 'answerCommentUpVoters':\n      case 'postCommentUpVoters':\n        usersProps = this.updateCommentUpVotersProps(state);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      case 'answerReplyUpVoters':\n      case 'postReplyUpVoters':\n        usersProps = this.updateReplyUpVotersProps(state);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      case 'postUpVoters':\n        usersProps = this.updatePostUpVotersProps(state);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      default:\n        state['pageName'] = 'users';\n        this.updateLocalstate(state);\n        return this.props.getUserList(state);\n    }\n  }\n\n  updateLocalstate(state) {\n    this.setState(state);\n  }\n\n  updateUserFollowersProps(params) {\n    var userProfile = params.userProfile,\n        usersById = params.usersById,\n        usersIsFor = params.usersIsFor,\n        apiUrl = params.apiUrl,\n        pageName = params.pageName;\n\n    switch (usersIsFor) {\n      case 'userProfileFollowings':\n        pageName = 'Followings';\n        usersById = \"userProfileFollowings\".concat(userProfile.id);\n        apiUrl = api.getUserFollowingsListApi(userProfile.id);\n        return {\n          pageName,\n          usersById,\n          apiUrl\n        };\n\n      default:\n        pageName = 'Followers';\n        usersById = \"userProfileFollowers\".concat(userProfile.id);\n        apiUrl = api.getUserFollowersListApi(userProfile.id);\n        return {\n          pageName,\n          usersById,\n          apiUrl\n        };\n    }\n\n    ;\n  }\n\n  updateQuestionFollowersProps(params) {\n    var question = params.question,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl,\n        pageName = params.pageName;\n    var pageName = 'Followers';\n    usersById = \"questionFollowers\".concat(question.id);\n    apiUrl = api.getQuestionFollowersListApi(question.id);\n    return {\n      usersById,\n      apiUrl,\n      pageName\n    };\n  }\n\n  updatePostUpVotersProps(params) {\n    var post = params.post,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n    usersById = \"postUpVoters\".concat(post.id);\n    apiUrl = api.getPostUpVotersListApi(post.id);\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  updateAnswerUpVotersProps(params) {\n    var answer = params.answer,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n    usersById = \"postUpVoters\".concat(answer.id);\n    apiUrl = api.getAnswerUpVotersListApi(answer.id);\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  updateCommentUpVotersProps(params) {\n    var comment = params.comment,\n        usersIsFor = params.usersIsFor,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n\n    switch (usersIsFor) {\n      case 'postCommentUpVoters':\n        usersById = \"postCommentUpVoters\".concat(comment.id);\n        apiUrl = api.getPostCommentUpVotersListApi(comment.id);\n        return {\n          usersById,\n          apiUrl\n        };\n\n      default:\n        usersById = \"answerCommentUpVoters\".concat(comment.id);\n        apiUrl = api.getAnswerCommentUpVotersListApi(comment.id);\n        return {\n          usersById,\n          apiUrl\n        };\n    }\n  }\n\n  updateReplyUpVotersProps(params) {\n    var reply = params.reply,\n        isAnswerBox = params.isAnswerBox,\n        usersIsFor = params.usersIsFor,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n\n    switch (usersIsFor) {\n      case 'postReplyUpVoters':\n        usersById = \"postReplyUpVoters\".concat(reply.id);\n        apiUrl = api.getPostReplyUpVotersListApi(reply.id);\n        return {\n          usersById,\n          apiUrl\n        };\n\n      default:\n        usersById = \"answerReplyUpVoters\".concat(reply.id);\n        apiUrl = api.getAnswerReplyUpVotersListApi(reply.id);\n        return {\n          usersById,\n          apiUrl\n        };\n    }\n  }\n\n  getProps() {\n    let props = {\n      pageName: this.state.pageName,\n      usersById: this.state.usersById\n    };\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    var props = this.getProps();\n    console.log(props);\n    var usersById = props.usersById;\n    const users = props.entyties.users.byId[usersById]; //userProfile = userProfile.user;\n\n    console.log(users);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(PartalNavigationBar, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })), users ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, users.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loder-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      style: {\n        paddingTop: '70px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(UserList, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })))) : \"\");\n  }\n\n}\n\n;\nexport default withMain(UserListBox);","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/users/user_list_page.js"],"names":["React","Component","withMain","UserList","PartalNavigationBar","AjaxLoader","action","store","Api","api","UserListBox","constructor","props","state","usersById","pageName","componentDidMount","console","log","location","usersProps","getUserListApi","usersIsFor","updateUserFollowersProps","updateLocalstate","getUserList","updateQuestionFollowersProps","updateAnswerUpVotersProps","updateCommentUpVotersProps","updateReplyUpVotersProps","updatePostUpVotersProps","setState","params","userProfile","apiUrl","id","getUserFollowingsListApi","getUserFollowersListApi","question","getQuestionFollowersListApi","post","getPostUpVotersListApi","answer","getAnswerUpVotersListApi","comment","getPostCommentUpVotersListApi","getAnswerCommentUpVotersListApi","reply","isAnswerBox","getPostReplyUpVotersListApi","getAnswerReplyUpVotersListApi","getProps","Object","assign","render","users","entyties","byId","isLoading","paddingTop"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport withMain  from 'containers/higher-order-components/main';\nimport { UserList } from \"components/profile_components\";\nimport {PartalNavigationBar} from \"components/navBar\";\nimport  AjaxLoader from \"components/ajax-loader\";\nimport  * as action  from 'actions/actionCreators';\nimport {store} from \"index\";\n\n\nimport Api from 'api';\n\nconst api = new Api();\n\n\n  \n\nclass UserListBox extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n         usersById : `allUsersList`,\n         pageName       : \"\",\n      }\n   };\n  \n  \n    componentDidMount() {\n        console.log(this.props)\n                \n        let { state }      = this.props.location;\n        let usersProps = {};\n\n        state['pageName']  = 'Upvoters'; \n        state['apiUrl']    = api.getUserListApi();\n        state['usersById'] = this.state.usersById;\n\n        \n        console.log(state)\n\n        switch(state.usersIsFor){\n            case 'userProfileFollowers' :\n            case 'userProfileFollowings':\n\n                usersProps = this.updateUserFollowersProps(state);\n                this.updateLocalstate(usersProps);\n                return this.props.getUserList(usersProps);\n\n\n            case 'questionFollowers':\n\n                usersProps = this.updateQuestionFollowersProps(state);\n                this.updateLocalstate(usersProps);\n                return this.props.getUserList(usersProps);\n\n           \n\n\n            case 'answerUpVoters':\n\n                usersProps = this.updateAnswerUpVotersProps(state);\n                this.updateLocalstate(usersProps);\n                return this.props.getUserList(usersProps);\n\n\n\n            case 'answerCommentUpVoters':\n            case 'postCommentUpVoters'  :\n\n                usersProps = this.updateCommentUpVotersProps(state);\n                this.updateLocalstate(usersProps);\n                return this.props.getUserList(usersProps);\n\n            case 'answerReplyUpVoters':\n            case 'postReplyUpVoters'  :\n\n                usersProps = this.updateReplyUpVotersProps(state);\n                this.updateLocalstate(usersProps);\n                return this.props.getUserList(usersProps);\n\n\n            case 'postUpVoters':\n\n                usersProps = this.updatePostUpVotersProps(state);\n                this.updateLocalstate(usersProps);\n\n                return this.props.getUserList(usersProps); \n\n\n            default:\n                state['pageName'] = 'users';\n\n                this.updateLocalstate(state);\n                return this.props.getUserList(state);\n                \n        }\n\n    };\n\n    updateLocalstate(state){\n       this.setState(state);\n    }\n\n    updateUserFollowersProps(params ){\n        var { userProfile, usersById, usersIsFor, apiUrl, pageName, } = params;\n        switch(usersIsFor){\n\n            case 'userProfileFollowings':\n\n                pageName  = 'Followings';\n                usersById = `userProfileFollowings${userProfile.id}`;\n                apiUrl    = api.getUserFollowingsListApi(userProfile.id);\n\n                return { pageName, usersById, apiUrl};\n\n            default:\n               \n                pageName  = 'Followers';\n                usersById = `userProfileFollowers${userProfile.id}`;\n                apiUrl     = api.getUserFollowersListApi(userProfile.id)\n                return { pageName, usersById, apiUrl};\n        };\n\n       \n    };\n      \n   \n\n    updateQuestionFollowersProps( params ) {\n\n       var  { question, usersById, apiUrl, pageName } = params\n\n        var pageName = 'Followers';\n        usersById = `questionFollowers${question.id}`;\n        apiUrl  = api.getQuestionFollowersListApi(question.id);\n\n        return { usersById, apiUrl, pageName };\n    };\n\n\n    updatePostUpVotersProps( params ){\n\n        var { post, usersById, apiUrl } = params;\n\n        usersById = `postUpVoters${post.id}`;\n        apiUrl    = api.getPostUpVotersListApi(post.id);\n       \n        return { usersById, apiUrl };\n    };\n\n    updateAnswerUpVotersProps(params){\n\n        var {answer, usersById, apiUrl } = params;\n\n        usersById = `postUpVoters${answer.id}`;\n        apiUrl    = api.getAnswerUpVotersListApi(answer.id);\n\n        return { usersById, apiUrl};\n      \n    };\n\n    updateCommentUpVotersProps(params){\n\n        var {comment, usersIsFor, usersById, apiUrl} = params;\n\n        switch(usersIsFor){\n\n            case 'postCommentUpVoters':\n\n                usersById = `postCommentUpVoters${comment.id}`;\n                apiUrl    = api.getPostCommentUpVotersListApi(comment.id)\n                return { usersById, apiUrl};\n\n            default:\n\n                usersById  = `answerCommentUpVoters${comment.id}`;\n                apiUrl     = api.getAnswerCommentUpVotersListApi(comment.id)\n                return { usersById, apiUrl};\n\n\n        }\n        \n    };\n\n    updateReplyUpVotersProps(params){\n        var {reply, isAnswerBox, usersIsFor, usersById, apiUrl} = params;\n\n        switch(usersIsFor){\n\n            case 'postReplyUpVoters':\n\n                usersById = `postReplyUpVoters${reply.id}`;\n                apiUrl    = api.getPostReplyUpVotersListApi(reply.id)\n                return { usersById, apiUrl};\n\n            default:\n            \n                usersById  = `answerReplyUpVoters${reply.id}`;\n                apiUrl     = api.getAnswerReplyUpVotersListApi(reply.id)\n                return { usersById, apiUrl};\n\n\n        }\n\n            \n    }\n\n\n\n\n\n\n\n\n     \n           \n   getProps(){\n      let props = {\n         pageName       : this.state.pageName,\n         usersById      : this.state.usersById,\n      };\n      return Object.assign(props, this.props);\n   };\n\n   render() {\n      var props = this.getProps()\n      console.log(props)\n      var usersById = props.usersById;\n      const users = props.entyties.users.byId[usersById];\n      //userProfile = userProfile.user;\n      console.log(users)\n   \n      return (\n          <div>\n            <PartalNavigationBar {...props}/>\n            {users?\n               <div>\n                  {users.isLoading?\n                     <div className=\"page-spin-loder-box\">\n                        <AjaxLoader/>\n                     </div>\n                    :\n                    <div style={{ paddingTop : '70px'}}>\n                     <UserList {...props}/>\n                     </div>\n                  }\n               </div>\n               :\n               \"\"\n            }\n          </div>\n      )\n   };\n};\n\n\n\nexport default withMain(UserListBox);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}