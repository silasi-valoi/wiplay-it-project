{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/python_projects/wiplay-it-project/wiplayit_app/frontend/src/containers/profile/profile_page.js\";\nimport React, { Component } from 'react';\nimport { ModalManager } from 'react-dynamic-modal';\nimport { PartalNavigationBar, NavigationBarBigScreen } from \"components/navBar\";\nimport * as action from 'actions/actionCreators';\nimport { ProfileComponent, UserAnswers } from \"components/profile_components\";\nimport withHigherOrderIndexBox from \"containers/index/higher_order_index\";\nimport { store } from \"index\";\nimport AjaxLoader from \"components/ajax-loader\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userItemsComponent: UserAnswers,\n      isProfileBox: true,\n      pageName: \"Profile\",\n      profileById: ''\n    };\n    this.redirectToEdit = this.redirectToEdit.bind(this);\n  }\n\n  componentDidUpdate(nextProps, prevProps) {\n    var profileById = this.state.profileById;\n    const userProfile = nextProps.entyties.userProfile.byId[profileById];\n\n    if (userProfile) {\n      console.log(userProfile);\n      var answers = nextProps.entyties.answers;\n      console.log(answers);\n\n      if (userProfile && userProfile.user) {\n        var byId = \"usersAnswers\".concat(userProfile.user.id);\n        answers = answers.byId[byId];\n        var usersAnswers = userProfile.answers;\n\n        if (!answers) {\n          store.dispatch(action.getAnswerListPending(byId));\n          store.dispatch(action.getAnswerListSuccess(byId, usersAnswers));\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    let state = this.props.location.state;\n\n    if (state && state.userProfile) {\n      let userId = state.userProfile.id;\n      var profileById = \"userProfile\".concat(userId);\n      this.setState({\n        profileById\n      });\n      const userProfile = this.props.entyties.userProfile.byId[profileById];\n      console.log(userProfile);\n\n      if (!userProfile) {\n        this.props.getUserProfile(userId);\n      }\n    }\n  }\n\n  showUserItems(params) {\n    let items = params.items,\n        component = params.component,\n        byId = params.byId,\n        data = params.data;\n    this.setState({\n      userItemsComponent: component\n    });\n\n    switch (items) {\n      case 'isUsersAnswers':\n        store.dispatch(action.getAnswerListPending(byId));\n        store.dispatch(action.getAnswerListSuccess(byId, data));\n        return;\n\n      case 'isUsersQuestions':\n        store.dispatch(action.getQuestionListPending(byId));\n        store.dispatch(action.getQuestionListSuccess(byId, data));\n        return;\n\n      case 'isUsersPosts':\n        store.dispatch(action.getPostListPending(byId));\n        store.dispatch(action.getPostListSuccess(byId, data));\n        return;\n\n      case 'isUsersFollowings':\n        console.log(data, items);\n        store.dispatch(action.getUserListPending(byId));\n        store.dispatch(action.getUserListSuccess(byId, data));\n        return;\n\n      case 'isUsersFollowers':\n        store.dispatch(action.getUserListPending(byId));\n        store.dispatch(action.getUserListSuccess(byId, data));\n        return;\n\n      default:\n        console.log(data, items);\n        return;\n    }\n\n    ;\n  }\n\n  redirectToEdit(params) {\n    ModalManager.close();\n    console.log(this.props);\n    this.props.history.push(params.pathToEditProfile, params.state);\n  }\n\n  getProps() {\n    let props = {\n      pageName: this.state.pageName,\n      userItemsComponent: this.state.userItemsComponent,\n      showUserItems: this.showUserItems.bind(this),\n      isProfileBox: this.state.isProfileBox,\n      redirectToEdit: this.redirectToEdit,\n      profileById: this.state.profileById\n    };\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    var profileById = props.profileById;\n    const userProfile = props.entyties.userProfile.byId[profileById];\n    return React.createElement(\"div\", {\n      id: \"profile-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(PartalNavigationBar, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(NavigationBarBigScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), userProfile ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, userProfile.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loder-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })) : React.createElement(ProfileComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))) : \"\");\n  }\n\n}\n\n;\nexport default withHigherOrderIndexBox(ProfilePage);","map":{"version":3,"sources":["/home/silasi/Deprojectos/python_projects/wiplay-it-project/wiplayit_app/frontend/src/containers/profile/profile_page.js"],"names":["React","Component","ModalManager","PartalNavigationBar","NavigationBarBigScreen","action","ProfileComponent","UserAnswers","withHigherOrderIndexBox","store","AjaxLoader","ProfilePage","constructor","props","state","userItemsComponent","isProfileBox","pageName","profileById","redirectToEdit","bind","componentDidUpdate","nextProps","prevProps","userProfile","entyties","byId","console","log","answers","user","id","usersAnswers","dispatch","getAnswerListPending","getAnswerListSuccess","componentDidMount","location","userId","setState","getUserProfile","showUserItems","params","items","component","data","getQuestionListPending","getQuestionListSuccess","getPostListPending","getPostListSuccess","getUserListPending","getUserListSuccess","close","history","push","pathToEditProfile","getProps","Object","assign","render","isLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { ModalManager } from 'react-dynamic-modal';\n\nimport {PartalNavigationBar,NavigationBarBigScreen } from \"components/navBar\";\n\nimport  * as action  from 'actions/actionCreators';\n\nimport { ProfileComponent, UserAnswers } from \"components/profile_components\";\nimport withHigherOrderIndexBox from \"containers/index/higher_order_index\";\n\nimport {store} from \"index\";\n\nimport  AjaxLoader from \"components/ajax-loader\";\n\n\n\n\n\n\nclass ProfilePage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userItemsComponent : UserAnswers,\n            isProfileBox       : true,\n            pageName           : \"Profile\", \n            profileById        : '',\n        } \n\n        this.redirectToEdit =  this.redirectToEdit.bind(this);\n    };\n\n    componentDidUpdate(nextProps, prevProps){ \n        var profileById = this.state.profileById;\n        const userProfile = nextProps.entyties.userProfile.byId[profileById];\n\n      \n        if (userProfile) {\n            console.log(userProfile)\n            var answers      = nextProps.entyties.answers;\n            console.log(answers)\n\n            if (userProfile && userProfile.user) {\n                var byId         =`usersAnswers${userProfile.user.id}`;\n                answers          = answers.byId[byId]\n                var usersAnswers = userProfile.answers;\n\n                if (!answers) {\n                   store.dispatch(action.getAnswerListPending(byId));\n                   store.dispatch(action.getAnswerListSuccess(byId, usersAnswers));\n                }\n            }\n        }\n    };\n  \n  \n\n    componentDidMount() {\n        console.log(this.props)\n        let {state} = this.props.location;\n\n        if (state && state.userProfile) {\n            let userId    =   state.userProfile.id;\n            var profileById = `userProfile${userId}`;\n            this.setState({profileById});\n         \n            const userProfile = this.props.entyties.userProfile.byId[profileById];\n            console.log(userProfile)\n\n            if (!userProfile) {\n                this.props.getUserProfile(userId);\n            }\n        }\n    };\n\n   \n    showUserItems(params) {\n        let {items, component, byId, data } = params;\n        this.setState({userItemsComponent : component})\n\n        switch(items){\n            case 'isUsersAnswers':\n\n                store.dispatch(action.getAnswerListPending(byId));\n                store.dispatch(action.getAnswerListSuccess(byId, data));\n                return;\n\n\n            case 'isUsersQuestions':\n\n                store.dispatch(action.getQuestionListPending(byId));\n                store.dispatch(action.getQuestionListSuccess(byId, data));\n                return;\n            \n            case 'isUsersPosts':\n\n                store.dispatch(action.getPostListPending(byId));\n                store.dispatch(action.getPostListSuccess(byId, data));\n                return;\n         \n            case 'isUsersFollowings':\n                console.log(data, items)\n                store.dispatch(action.getUserListPending(byId));\n                store.dispatch(action.getUserListSuccess(byId, data));\n                return;\n\n            case 'isUsersFollowers':\n                store.dispatch(action.getUserListPending(byId));\n                store.dispatch(action.getUserListSuccess(byId, data));  \n                return;  \n\n            default:\n                console.log(data, items)\n                return;  \n        };\n    };\n\n\n    redirectToEdit(params){\n\n        ModalManager.close();\n        console.log(this.props)\n        this.props.history.push(params.pathToEditProfile, params.state)\n    };    \n\n    getProps(){\n\n        let props = {\n            pageName           : this.state.pageName,\n            userItemsComponent : this.state.userItemsComponent,\n            showUserItems      : this.showUserItems.bind(this),\n            isProfileBox       : this.state.isProfileBox, \n            redirectToEdit     : this.redirectToEdit,\n            profileById        : this.state.profileById,\n        };\n\n        return Object.assign(props, this.props);\n    };\n  \n\n  \n    render() {\n        let   props = this.getProps();\n        var   profileById = props.profileById;\n        const userProfile = props.entyties.userProfile.byId[profileById];\n      \n          \n\n        return (\n           <div id=\"profile-page\">\n           \n               <PartalNavigationBar {...props}/>\n               <NavigationBarBigScreen {...props} />\n\n               { userProfile?\n                    <div>\n                        {userProfile.isLoading?\n                            <div className=\"page-spin-loder-box\">\n                                 <AjaxLoader/>\n                            </div>\n\n                            :\n\n                            <ProfileComponent {...props}/> \n                        }\n                    </div>\n\n                    :\n                    \"\"\n                }\n            </div>\n        );\n    };\n};\n\n\n\n\nexport default withHigherOrderIndexBox(ProfilePage);\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}