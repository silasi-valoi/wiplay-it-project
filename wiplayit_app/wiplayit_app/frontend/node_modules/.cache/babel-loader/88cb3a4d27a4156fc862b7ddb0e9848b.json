{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_great_grand_child_page.js\";\nimport React, { Component } from 'react';\nimport AjaxLoader from \"components/ajax-loader\";\nimport * as action from 'actions/actionCreators';\nimport * as types from 'actions/types';\nimport { store } from \"index\";\nimport { Reply } from \"components/reply_components\";\nimport Api from 'api';\nconst api = new Api();\n\nclass ReplyGreatGrandChildBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReplyGreatGrandChildBox: true,\n      byId: ''\n    };\n  }\n\n  componentDidMount() {\n    var reply = this.props.reply;\n    console.log(reply);\n\n    if (reply) {\n      var byId = \"replyGreateGrandChild\".concat(reply.id);\n      this.setState({\n        byId\n      });\n      var props = {\n        actionType: 'GET_REPLY_CHILD_LINK_DATA',\n        reply,\n        byId\n      };\n      store.dispatch(action.getReplyChildLindData(props));\n    }\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidUpdate(nextProps, prevState) {}\n\n  getProps() {\n    let props = {\n      isReplyGreatGrandChildBox: this.state.isReplyGreatGrandChildBox,\n      greatGrandChildParent: this.props.reply,\n      byId: this.state.byId\n    };\n    return Object.assign(props, this.props.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    var replyParent = this.props.reply;\n    let byId = this.state.byId;\n    var replies = props.entyties.replies;\n    replies = replies.byId[byId];\n    console.log(replies);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, replies ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, replies.showLink ? React.createElement(ChildrenLinkComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, replies.isLoading ? React.createElement(\"div\", {\n      className: \"spin-loader-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(GraetGrandChildComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))))) : \"\");\n  }\n\n}\n\n;\nexport default ReplyGreatGrandChildBox;\n\nconst ChildrenLinkComponent = props => {\n  console.log(props);\n  var replyParent = props.greatGrandChildParent;\n  var byId = \"replyGreateGrandChild\".concat(replyParent.id);\n  var replies = props.entyties.replies;\n  replies = replies.byId[byId];\n  console.log(replyParent);\n  var apiUrl = '';\n\n  if (props.isAnswerBox && replies) {\n    apiUrl = api.getAnswerReplyChildrenListApi(replyParent.id);\n  } else {\n    apiUrl = api.getPostReplyChildrenListApi(replyParent.id);\n  }\n\n  var replyProps = {\n    actionType: types.GET_REPLY_CHILD_LIST,\n    apiUrl: apiUrl,\n    byId: props.byId,\n    children: replyParent.children\n  };\n  return React.createElement(\"div\", {\n    onClick: () => props.getReplyChildrenList(replyProps),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Click to view More\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, replies.linkData.totalReplies)));\n};\n\nconst GraetGrandChildComponent = props => {\n  console.log(props);\n  let replyStyles = {\n    border: 'px solid green',\n    margin: '15px 22px 10px 75px'\n  };\n  var replyParent = props.greatGrandChildParent;\n  var byId = \"replyGreateGrandChild\".concat(replyParent.id);\n  var replies = props.entyties.replies;\n  replies = replies.byId[byId];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, replies.replyList.map((reply, index) => {\n    let replyProps = {\n      reply,\n      index,\n      replyStyles,\n      props\n    };\n    console.log(replyProps);\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, replyParent.id === reply.parent ? React.createElement(\"div\", {\n      className: \"reply-great-grand-child-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reply-great-grand-child-contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Reply, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }))), reply.has_children ? React.createElement(ReplyGreatGrandChildBox, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })) : '') : \"\");\n  })));\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_great_grand_child_page.js"],"names":["React","Component","AjaxLoader","action","types","store","Reply","Api","api","ReplyGreatGrandChildBox","constructor","props","state","isReplyGreatGrandChildBox","byId","componentDidMount","reply","console","log","id","setState","actionType","dispatch","getReplyChildLindData","componentDidCatch","error","info","componentDidUpdate","nextProps","prevState","getProps","greatGrandChildParent","Object","assign","render","replyParent","replies","entyties","showLink","isLoading","ChildrenLinkComponent","apiUrl","isAnswerBox","getAnswerReplyChildrenListApi","getPostReplyChildrenListApi","replyProps","GET_REPLY_CHILD_LIST","children","getReplyChildrenList","linkData","totalReplies","GraetGrandChildComponent","replyStyles","border","margin","replyList","map","index","parent","has_children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  AjaxLoader from \"components/ajax-loader\";\nimport  * as action  from 'actions/actionCreators';\nimport  * as types  from 'actions/types';\n\nimport {store} from \"index\";\nimport {Reply } from \"components/reply_components\";\nimport Api from 'api';\n\n\n \nconst api      = new Api();\n\n\n\n\nclass ReplyGreatGrandChildBox extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isReplyGreatGrandChildBox : true,\n            byId                     : '',\n        };\n    };\n\n\n    componentDidMount() {\n        var reply  = this.props.reply;\n        console.log(reply)\n        if (reply) {\n\n            var byId = `replyGreateGrandChild${reply.id}`;\n            this.setState({byId});\n\n            var props = {\n                actionType : 'GET_REPLY_CHILD_LINK_DATA',\n                reply,\n                byId,\n            }\n\n            store.dispatch(action.getReplyChildLindData(props)); \n        }\n    };\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.log(error, info);\n    } \n\n   componentDidUpdate(nextProps, prevState) {\n      \n   }; \n  \n   getProps() {\n      let props = {\n         isReplyGreatGrandChildBox  : this.state.isReplyGreatGrandChildBox,\n         greatGrandChildParent      : this.props.reply,\n         byId                       : this.state.byId,\n      } \n      return Object.assign(props, this.props.props);\n   };\n\n\n   render() {\n\n      let props       =  this.getProps();\n      var replyParent =  this.props.reply;\n      let byId        =  this.state.byId;\n      var replies     =  props.entyties.replies;\n      replies         =  replies.byId[byId];  \n\n      console.log(replies)   \n      \n      return (\n         <div>\n            {replies?\n            <div>\n               { replies.showLink?\n                  <ChildrenLinkComponent {...props}/>\n                  :\n                  <div>\n                     { replies.isLoading?\n                        <div className=\"spin-loader-box\">\n                           <AjaxLoader/>\n                        </div>\n                     :\n                        <div>\n                           <GraetGrandChildComponent {...props}/>\n                        </div>\n                     }\n                  </div>\n               }\n            </div>\n            :\n            \"\"\n         }\n           \n         </div>   \n      ) \n   };\n  \n};\n\n\nexport default ReplyGreatGrandChildBox;\n\n\n\n\nconst ChildrenLinkComponent = props =>{\n   console.log(props)\n   var replyParent =  props.greatGrandChildParent;\n   var byId        = `replyGreateGrandChild${replyParent.id}`;\n   \n   var replies     =  props.entyties.replies;\n   replies         =  replies.byId[byId];  \n\n   console.log(replyParent)\n\n\n\n\n   var apiUrl = '';\n\n   if (props.isAnswerBox && replies) { \n      apiUrl = api.getAnswerReplyChildrenListApi(replyParent.id);\n\n   }\n\n   else{\n      apiUrl = api.getPostReplyChildrenListApi(replyParent.id);\n   }\n\n   var replyProps = {\n      actionType: types.GET_REPLY_CHILD_LIST,\n      apiUrl    : apiUrl,\n      byId      : props.byId,\n      children  : replyParent.children,\n   };\n\n   return(\n      <div onClick={ () => props.getReplyChildrenList( replyProps ) }> \n         <ul>\n            <li>Click to view More</li>\n            <li>{ replies.linkData.totalReplies }</li>\n         </ul>\n      </div> \n   );\n};\n\n\n\nconst GraetGrandChildComponent = props => {\n    console.log(props)\n\n   let replyStyles = { border     : 'px solid green',\n                          margin     : '15px 22px 10px 75px' };\n\n   \n   var replyParent =  props.greatGrandChildParent;\n   var byId        = `replyGreateGrandChild${replyParent.id}`;\n   \n   var replies     =  props.entyties.replies;\n   replies         =  replies.byId[byId]; \n\n   return(\n        <div>\n           <div>\n                { replies.replyList.map( (reply, index) => {\n\n                    let replyProps = {reply,index,replyStyles,props}\n                    console.log(replyProps)\n\n                    return(\n                        <div  key={index}>\n                            { replyParent.id === reply.parent?\n\n                                <div className=\"reply-great-grand-child-container\">\n\n                                    <div className=\"reply-great-grand-child-contents\">\n                                        <Reply {...replyProps}/>\n                                    </div>\n\n                                    { reply.has_children?\n                                        <ReplyGreatGrandChildBox {...replyProps}/>\n                                        :\n                                        ''\n                                    }\n\n                                </div>\n\n                                :\n                                \"\"\n                            }\n                        </div>\n                    )\n                })}\n\n            </div>\n        </div>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}