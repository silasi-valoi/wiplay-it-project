{"ast":null,"code":"import _defineProperty from \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/index/index_page.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport * as action from 'actions/actionCreators';\nimport { Link } from \"react-router-dom\";\nimport { NavigationBarSmallScreen, NavigationBarBigScreen } from \"components/navBar\";\nimport { store } from \"index\"; //import AnswersBox from \"containers/answer/answer_page\";\n\nimport { QuestionComponent } from \"components/question_components\";\nimport { PostComponent } from \"components/post_components\";\nimport AjaxLoader from \"components/ajax-loader\";\nimport { AnswersComponent } from \"components/answer_components\";\nimport withHigherOrderIndexBox from \"containers/index/higher_order_index\";\n\nclass IndexBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHomeBox: true,\n      questionListById: 'filteredQuestions',\n      postListById: 'filteredPosts',\n      answerListById: 'filteredAnswers'\n    };\n  }\n\n  // static getDerivedStateFromError(error) {\n  // Update state so the next render will show the fallback UI.\n  //  return  dispatch => action.handleError(error);\n  // }\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidUpdate(nextProps, prevState) {//console.log(nextProps, this.props)\n  }\n\n  componentDidMount() {\n    let questionList = localStorage.getItem('questionList');\n    questionList = JSON.parse(questionList);\n    var questionListById = this.state.questionListById;\n\n    if (questionList) {\n      store.dispatch(action.getQuestionListPending(questionListById));\n      store.dispatch(action.getQuestionListSuccess(questionListById, questionList));\n    } else {\n      let optionsProps = this.state;\n      this.updateIndexEntyties(optionsProps);\n      var index = props.entyties.index;\n\n      if (!index.isSuccess) {\n        this.props.getIndex(optionsProps);\n      }\n    }\n  }\n\n  updateIndexEntyties(params) {\n    var questionListById = params.questionListById,\n        answerListById = params.answerListById,\n        postListById = params.postListById;\n    store.dispatch(action.getQuestionListPending(questionListById));\n    store.dispatch(action.getAnswerListPending(answerListById));\n    store.dispatch(action.getPostListPending(postListById));\n  }\n\n  getProps() {\n    let props = _objectSpread({}, this.state);\n\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    console.log(props);\n    var index = props.entyties.index;\n    console.log(index);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(NavigationBarBigScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(NavigationBarSmallScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), index ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, index.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loader-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })) : React.createElement(IndexComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))) : \"\");\n  }\n\n}\n\n;\nexport default withHigherOrderIndexBox(IndexBox);\nexport const IndexComponent = props => {\n  return React.createElement(\"div\", {\n    className: \"home-page-contents\",\n    id: \"home-page-contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Answers, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(Posts, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(Questions, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })));\n};\nexport const Questions = props => {\n  var questionListById = props.questionListById,\n      entyties = props.entyties;\n  var questions = entyties.questions.byId[questionListById];\n  console.log(questions, props);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, questions && questions.questionList.length ? React.createElement(\"div\", {\n    className: \"index-questions-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"index-items-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Questions\")), questions.questionList.map((question, index) => {\n    let contentsProps = {\n      question,\n      index\n    };\n    Object.assign(contentsProps, props);\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(QuestionComponent, Object.assign({}, contentsProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })));\n  })) : \"\");\n};\nexport const Posts = props => {\n  var postListById = props.postListById,\n      entyties = props.entyties;\n  var posts = entyties.posts.byId[postListById];\n  console.log(posts, props);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, posts && posts.postList.length ? React.createElement(\"div\", {\n    className: \"index-posts-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"index-items-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Posts\")), posts.postList.map((post, index) => {\n    let contentsProps = {\n      post,\n      index\n    };\n    Object.assign(contentsProps, props);\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(PostComponent, Object.assign({}, contentsProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })));\n  })) : \"\");\n};\nexport const Answers = props => {\n  var answerListById = props.answerListById,\n      entyties = props.entyties;\n  var answers = entyties.answers.byId[answerListById];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, answers && answers.answerList ? React.createElement(\"div\", {\n    className: \"index-answers-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"answer-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"index-items-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Answers\")), answers.answerList.map((answer, index) => {\n    let answerProps = {\n      answer,\n      index\n    };\n    let question = answer.question;\n    let questionPath = \"/question/\".concat(question.slug, \"/\");\n    Object.assign(answerProps, props);\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"answer-contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: questionPath,\n        state: {\n          question\n        }\n      },\n      className: \"question-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, question.add_question))), React.createElement(AnswersComponent, Object.assign({}, answerProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })));\n  }))) : \"\");\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/index/index_page.js"],"names":["React","Component","action","Link","NavigationBarSmallScreen","NavigationBarBigScreen","store","QuestionComponent","PostComponent","AjaxLoader","AnswersComponent","withHigherOrderIndexBox","IndexBox","constructor","props","state","isHomeBox","questionListById","postListById","answerListById","componentDidCatch","error","info","console","log","componentDidUpdate","nextProps","prevState","componentDidMount","questionList","localStorage","getItem","JSON","parse","dispatch","getQuestionListPending","getQuestionListSuccess","optionsProps","updateIndexEntyties","index","entyties","isSuccess","getIndex","params","getAnswerListPending","getPostListPending","getProps","Object","assign","render","isLoading","IndexComponent","Questions","questions","byId","length","map","question","contentsProps","Posts","posts","postList","post","Answers","answers","answerList","answer","answerProps","questionPath","slug","pathname","add_question"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  * as action  from 'actions/actionCreators';\nimport { Link } from \"react-router-dom\";\n\nimport {NavigationBarSmallScreen,NavigationBarBigScreen } from \"components/navBar\";\nimport {store} from \"index\";\n//import AnswersBox from \"containers/answer/answer_page\";\nimport { QuestionComponent} from \"components/question_components\"\nimport { PostComponent} from \"components/post_components\"\n\nimport  AjaxLoader from \"components/ajax-loader\";\nimport { AnswersComponent } from \"components/answer_components\";\n\nimport withHigherOrderIndexBox from \"containers/index/higher_order_index\";\n\n\n\n\nclass IndexBox extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isHomeBox        : true,\n            questionListById : 'filteredQuestions',\n            postListById     : 'filteredPosts',\n            answerListById   : 'filteredAnswers',\n\n\n        } \n    };\n  \n\n    // static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    //  return  dispatch => action.handleError(error);\n    // }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.log(error, info);\n    }\n\n\n    componentDidUpdate(nextProps, prevState) {\n      //console.log(nextProps, this.props)\n    };\n\n         \n   \n    componentDidMount() {\n        let questionList  = localStorage.getItem('questionList');\n        questionList = JSON.parse(questionList)\n        var questionListById = this.state.questionListById;\n        \n        if (questionList) {\n            store.dispatch(action.getQuestionListPending(questionListById));\n            store.dispatch(action.getQuestionListSuccess(questionListById, questionList));\n        }\n        else{\n\n            let optionsProps = this.state;\n            this.updateIndexEntyties(optionsProps);\n            var index  = props.entyties.index;\n            \n            if (!index.isSuccess) {\n                this.props.getIndex(optionsProps); \n            }                          \n        }\n    };\n\n    updateIndexEntyties(params){\n        var { questionListById, answerListById, postListById} = params;\n\n        store.dispatch(action.getQuestionListPending(questionListById));\n        store.dispatch(action.getAnswerListPending(answerListById));\n        store.dispatch(action.getPostListPending(postListById))\n\n    }\n\n\n    getProps(){\n        let props = {\n                ...this.state,\n        };\n\n        return Object.assign(props, this.props );  \n    };\n\n      \n    render() {\n        let props = this.getProps()\n        console.log(props)\n        var index  = props.entyties.index;\n        console.log(index)\n                     \n        return (\n\n            <div>\n\n                <NavigationBarBigScreen {...props}/>\n                <NavigationBarSmallScreen {...props}/>\n\n                { index?\n\n                    <div>\n                        { index.isLoading?\n                            <div className=\"page-spin-loader-box\">\n                                <AjaxLoader/>\n                            </div>\n\n                            :\n                            <IndexComponent {...props}/>\n                        } \n                    </div>\n\n                    :\n                   \"\"  \n                }           \n            </div>\n        );\n    };\n};\n\n\n\n\n\nexport default  withHigherOrderIndexBox(IndexBox);\n\n\nexport const IndexComponent = props => {\n   \n      \n   return(\n     <div className=\"home-page-contents\" id=\"home-page-contents\">\n       <Answers {...props}/>\n       <Posts {...props}/>\n       <Questions {...props}/>\n\n     </div>\n   )\n\n}\n\n\nexport const Questions = props => {\n   \n    var { questionListById, entyties } = props;\n\n    var questions = entyties.questions.byId[questionListById];\n    console.log(questions, props)\n  \n    return (\n\n      <div>\n         { questions && questions.questionList.length?\n         <div className=\"index-questions-box\">\n            <div className=\"index-items-label\">\n                <b>Questions</b>\n            </div>\n\n            { questions.questionList.map((question, index) => {\n                let contentsProps = {question, index};\n                Object.assign(contentsProps, props)  \n\n                return (\n\n                  <div key={index} >\n                     <QuestionComponent {...contentsProps}  />\n                  </div>\n               )\n            }\n            )}\n         </div>\n         :\n         \"\"\n\n      }\n       \n      </div>\n   );\n};\n\n\n\n\n\nexport const Posts = props => {\n   \n    var { postListById, entyties } = props;\n\n    var posts = entyties.posts.byId[postListById];\n    console.log(posts, props)\n  \n    return (\n\n      <div >\n         { posts && posts.postList.length?\n         <div  className=\"index-posts-box\">\n            <div className=\"index-items-label\">\n                <b>Posts</b>\n            </div>\n\n            { posts.postList.map((post, index) => {\n                let contentsProps = {post, index};\n                Object.assign(contentsProps, props)  \n\n                return (\n\n                  <div key={index} >\n                     <PostComponent {...contentsProps}  />\n                  </div>\n               )\n            }\n            )}\n         </div>\n         :\n         \"\"\n\n      }\n       \n      </div>\n   );\n};\n\n\n\n\n\n\nexport const Answers = props => {\n    var { answerListById, entyties } = props;\n    var answers   = entyties.answers.byId[answerListById]; \n         \n    return(\n        <div>\n\n            {answers && answers.answerList?\n                <div className=\"index-answers-box\">\n\n\n                <div className=\"answer-container\">\n                    <div className=\"index-items-label\">\n                       <b>Answers</b>\n                    </div>\n                  \n                    { answers.answerList.map((answer, index) => {\n\n                        let answerProps = { answer, index};\n                        let question = answer.question;\n                        let questionPath = `/question/${question.slug}/`;\n\n                        Object.assign(answerProps, props); \n      \n                        return ( \n                            <div key={index} className=\"answer-contents\"> \n                                <div>\n                                <b className=\"\">\n                                    <Link to={{pathname: questionPath, state : {question} }} className=\"question-link\">\n                                       { question.add_question }\n                                    </Link>\n                                </b>\n                                </div>\n                                <AnswersComponent {...answerProps}/>\n                            </div>\n                        );\n                    }\n                    )}\n                </div>\n                </div>\n\n                :\n\n                \"\"\n            }\n\n        </div> \n    )\n};"]},"metadata":{},"sourceType":"module"}