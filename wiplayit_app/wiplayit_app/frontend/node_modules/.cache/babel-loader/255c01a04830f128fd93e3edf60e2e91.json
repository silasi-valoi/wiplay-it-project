{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/python_projects/wiplay-it-backend/backend/wiplay-it-web-frontend/src/components/editor_components.js\";\nimport React from 'react';\nimport LinkInput from 'containers/input';\nimport { Editor, Entity, CompositeDecorator } from 'draft-js';\nimport TextareaAutosize from 'react-autosize-textarea';\nexport const ToolBar = props => {\n  const textStyles = ['BOLD', 'ITALIC'];\n  const mediaStyles = ['Video', 'Image', 'Link', 'MoreOptions'];\n  const buttons = textStyles.map(style => {\n    let button;\n    let buttonProps = {};\n    buttonProps['name'] = style; //console.log(props)\n\n    if (style === 'BOLD' || style === \"ITALIC\") {\n      if (style === \"BOLD\") {\n        buttonProps['onClick'] = props.addBold;\n        buttonProps['buttonFormat'] = 'format_bold';\n        buttonProps['boldOnClick'] = props.boldOnClick;\n        buttonProps['className'] = props.boldOnClick ? \"btn-sm active toolbar-button\" : \"btn-sm toolbar-button\";\n      } else if (style === \"ITALIC\") {\n        buttonProps['onClick'] = props.addItalic;\n        buttonProps['buttonFormat'] = 'format_italic';\n        buttonProps['className'] = props.italicOnClick ? \"btn-sm active toolbar-button\" : \"btn-sm toolbar-button\";\n      }\n\n      button = React.createElement(Button, Object.assign({}, buttonProps, {\n        key: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n\n    return button;\n  });\n  const MediaBtns = mediaStyles.map(style => {\n    let button;\n    let buttonProps = {};\n    buttonProps['style'] = style;\n\n    if (style === \"Image\" || style === \"Video\") {\n      buttonProps['onChange'] = props.onURLChange;\n\n      if (style === \"Image\") {\n        buttonProps['name'] = 'image';\n        buttonProps['accept'] = 'image/*';\n        buttonProps['buttonFormat'] = 'insert_photo';\n      } else if (style === \"Video\") {\n        buttonProps['name'] = 'video';\n        buttonProps['accept'] = 'video/*';\n        buttonProps['buttonFormat'] = 'videocam';\n      }\n\n      button = React.createElement(ImageButton, Object.assign({\n        key: style\n      }, buttonProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    } else if (style === \"MoreOptions\") {\n      buttonProps['name'] = 'more-options';\n      buttonProps['onClick'] = props.moreBtns;\n      buttonProps['buttonFormat'] = 'more_horiz';\n      button = React.createElement(Button, Object.assign({\n        key: style\n      }, buttonProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    } else if (style === \"Link\") {\n      buttonProps['name'] = 'LINK';\n      buttonProps['onClick'] = props.promptLinkIpunt;\n      buttonProps['buttonFormat'] = 'insert_link';\n      button = React.createElement(Button, Object.assign({\n        key: style\n      }, buttonProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n\n    return button;\n  });\n  return React.createElement(\"div\", {\n    id: \"toolbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.onLinkInput ? React.createElement(LinkInput, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"navigation-toolbar\",\n    onMouseDown: e => e.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-btns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, buttons), React.createElement(\"div\", {\n    className: \"media-btns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, MediaBtns))));\n};\n\nconst ImageButton = props => {\n  return React.createElement(\"label\", {\n    id: \"fileContainer\",\n    className: \"btn-sm toolbar-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    accept: props.accept,\n    name: props.name,\n    onChange: props.onChange,\n    className: \"image\",\n    value: props.urlValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, props.buttonFormat));\n};\n\nconst Button = props => {\n  //console.log(props)\n  const style = props.boldOnClick ? props.active : {}; //console.log(style)\n\n  return React.createElement(\"button\", {\n    style: style,\n    onClick: props.onClick,\n    name: props.name,\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"image-icon material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, props.buttonFormat));\n};\n\nexport const TextAreaEditor = props => {\n  return React.createElement(\"div\", {\n    className: \"textarea-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"textarea-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(TextareaAutosize, Object.assign({}, props.textAreaProps, {\n    rows: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })))));\n};\nexport const DraftEditor = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"editor-btns-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(ToolBar, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"editors-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, props.onPost ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(TextareaAutosize, Object.assign({}, props.textAreaProps, {\n    rows: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))) : \"\", React.createElement(Editor, {\n    editorState: props.editorState,\n    blockRendererFn: mediaBlockRenderer,\n    handleKeyCommand: props.handleKeyCommand,\n    onChange: props.onChange,\n    decorators: CompositeDecorator,\n    blockStyleFn: props.blockStyleFn,\n    placeholder: props.editorPlaceHolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })));\n};\nexport function mediaBlockRenderer(block) {\n  if (block.getType() === 'atomic') {\n    return {\n      component: Media,\n      editable: false\n    };\n  }\n\n  return null;\n}\nexport function pageMediaBlockRenderer(block) {\n  if (block.getType() === 'atomic') {\n    return {\n      component: MediaPage,\n      editable: false\n    };\n  }\n\n  return null;\n}\n\nconst Image = props => {\n  return React.createElement(\"img\", {\n    alt: \"\",\n    src: props.src,\n    style: styles.media,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  });\n};\n\nconst Video = props => {\n  return React.createElement(\"video\", {\n    controls: true,\n    src: props.src,\n    style: styles.media,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  });\n};\n\nconst Media = props => {\n  const entity = Entity.get(props.block.getEntityAt(0));\n\n  const _entity$getData = entity.getData(),\n        src = _entity$getData.src;\n\n  const type = entity.getType();\n  let media;\n\n  if (type === 'image') {\n    media = React.createElement(Image, {\n      src: src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    });\n  } else if (type === 'video') {\n    media = React.createElement(Video, {\n      src: src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    });\n  }\n\n  return media;\n};\n\nconst MediaPage = props => {\n  const entity = Entity.get(props.block.getEntityAt(0));\n\n  const _entity$getData2 = entity.getData(),\n        src = _entity$getData2.src;\n\n  const type = entity.getType();\n  let media;\n\n  if (type === 'image') {\n    media = React.createElement(\"div\", {\n      style: styles.imageBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: src,\n      style: styles.mediaPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }));\n  } else if (type === 'video') {\n    media = React.createElement(\"div\", {\n      style: styles.imageBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      controls: true,\n      src: src,\n      style: styles.mediaPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), \";\");\n  }\n\n  return media;\n};\n\nconst styles = {\n  root: {\n    fontFamily: '\\'Georgia\\', serif',\n    padding: 20,\n    width: 600\n  },\n  buttons: {\n    marginBottom: 10\n  },\n  urlInputContainer: {\n    marginBottom: 10\n  },\n  urlInput: {\n    fontFamily: '\\'Georgia\\', serif',\n    marginRight: 10,\n    padding: 3\n  },\n  editor: {\n    border: '1px solid #ccc',\n    cursor: 'text',\n    minHeight: 80,\n    padding: 10\n  },\n  button: {\n    marginTop: 10,\n    textAlign: 'center'\n  },\n  media: {\n    width: '100%',\n    height: 'auto',\n    objectFit: 'cover'\n  },\n  mediaPage: {\n    width: '70%',\n    height: 'auto',\n    objectFit: 'cover'\n  },\n  imageBox: {\n    border: 'px solid red',\n    margin: '0 10px'\n  }\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/python_projects/wiplay-it-backend/backend/wiplay-it-web-frontend/src/components/editor_components.js"],"names":["React","LinkInput","Editor","Entity","CompositeDecorator","TextareaAutosize","ToolBar","props","textStyles","mediaStyles","buttons","map","style","button","buttonProps","addBold","boldOnClick","addItalic","italicOnClick","MediaBtns","onURLChange","moreBtns","promptLinkIpunt","onLinkInput","e","preventDefault","ImageButton","accept","name","onChange","urlValue","buttonFormat","Button","active","onClick","className","TextAreaEditor","textAreaProps","DraftEditor","onPost","editorState","mediaBlockRenderer","handleKeyCommand","blockStyleFn","editorPlaceHolder","block","getType","component","Media","editable","pageMediaBlockRenderer","MediaPage","Image","src","styles","media","Video","entity","get","getEntityAt","getData","type","imageBox","mediaPage","root","fontFamily","padding","width","marginBottom","urlInputContainer","urlInput","marginRight","editor","border","cursor","minHeight","marginTop","textAlign","height","objectFit","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LinkInput from 'containers/input';\nimport { Editor,Entity,CompositeDecorator } from 'draft-js';\nimport TextareaAutosize from 'react-autosize-textarea';\n\n\n\nexport const ToolBar = props => {\n   const textStyles  = ['BOLD', 'ITALIC'];\n   const mediaStyles = ['Video','Image', 'Link', 'MoreOptions']\n\n   const buttons = textStyles.map(style => {\n      let button;\n      let buttonProps = {};\n      buttonProps['name']   = style;\n      \n      //console.log(props)\n      \n          \n      if (style === 'BOLD' || style === \"ITALIC\") {\n\n         if (style === \"BOLD\" ) {\n            buttonProps['onClick'] = props.addBold;\n            buttonProps['buttonFormat'] = 'format_bold';\n            buttonProps['boldOnClick']  = props.boldOnClick;\n            buttonProps['className'] = props.boldOnClick?\n                                      \"btn-sm active toolbar-button\":\n                                      \"btn-sm toolbar-button\";\n      \n            \n         }\n         else if (style === \"ITALIC\") {\n            buttonProps['onClick'] = props.addItalic;\n            buttonProps['buttonFormat'] = 'format_italic';\n\n            buttonProps['className'] = props.italicOnClick?\n                                      \"btn-sm active toolbar-button\":\n                                      \"btn-sm toolbar-button\";\n      \n         }\n\n         button = <Button {...buttonProps} key={style} />; \n      }\n\n      return button;\n      });\n\n\n      const MediaBtns = mediaStyles.map(style => {\n         let button;\n         let buttonProps = {};\n         buttonProps['style']  = style\n       \n         if(style === \"Image\" || style === \"Video\") {\n                      \n            buttonProps['onChange']     = props.onURLChange;\n            \n\n            if (style === \"Image\" ) {\n               buttonProps['name']         = 'image';\n               buttonProps['accept']       = 'image/*'; \n               buttonProps['buttonFormat'] = 'insert_photo'; \n            }\n            else if (style === \"Video\"){\n               buttonProps['name']         = 'video'\n               buttonProps['accept']       = 'video/*';\n               buttonProps['buttonFormat'] = 'videocam'; \n            }\n\n            button = <ImageButton  key={style} {...buttonProps}/>\n         }\n\n         else if(style === \"MoreOptions\"){\n           buttonProps['name']         = 'more-options'\n           buttonProps['onClick']      = props.moreBtns;\n           buttonProps['buttonFormat'] = 'more_horiz'; \n\n           button = <Button  key={style} {...buttonProps}/>\n\n         }\n\n         else if(style === \"Link\"){\n            buttonProps['name']         = 'LINK'\n            buttonProps['onClick']      = props.promptLinkIpunt;\n            buttonProps['buttonFormat'] = 'insert_link'; \n            button = <Button  key={style} {...buttonProps}/>\n\n         }\n\n         return button;\n\n      });\n\n      return (\n         <div id='toolbar'>\n            <div>\n            { props.onLinkInput?\n               <LinkInput {...props}/>\n               :\n               <div className='navigation-toolbar'  onMouseDown={(e)=>e.preventDefault()}>\n                  <div className=\"text-btns\">\n                     { buttons }\n                  </div>\n\n                  <div className=\"media-btns\">\n                     {MediaBtns}\n                  </div>\n               </div>\n            }\n            </div>\n         </div>\n      )\n} \n\n\n\n\n\n\nconst ImageButton = props => {\n   \n   return (\n     \n      <label  id=\"fileContainer\" className=\"btn-sm toolbar-button\">\n         <input\n            type=\"file\"\n            accept={props.accept} \n            name={props.name}\n            onChange={props.onChange}\n            className=\"image\"\n            value={ props.urlValue }\n         />\n         <span className='material-icons'>{props.buttonFormat}</span>\n      </label>\n     \n   )\n}\n\n\nconst Button = props => {\n   //console.log(props)\n   const style = props.boldOnClick? props.active:{}; \n   //console.log(style)\n               \n      return (\n\n      <button\n         style={style}\n         onClick={props.onClick} \n         name={props.name} \n         className={props.className}>\n         <span  className='image-icon material-icons'>{props.buttonFormat}</span>\n      </button>\n\n   )\n}\n\n\n\n\n\nexport const TextAreaEditor = props => {\n   return (\n      <div className=\"textarea-form\">\n         <form className=\"\">\n            <div className=\"textarea-box\">\n               <TextareaAutosize\n                     {...props.textAreaProps} \n                        rows={1}/>\n            </div>\n         </form>\n      </div>\n   );\n\n}\n\n\nexport const DraftEditor = props => {\n\treturn (\n\t\t<div>\n         <div className=\"editor-btns-box\">\n            <ToolBar {...props}/>\n         </div>\n    \n         <div className=\"editors-box\">\n            {props.onPost?\n               <div>\n                 <TextareaAutosize   {...props.textAreaProps} rows={1}/>\n            \n               </div>\n              :\n              \"\"\n            }\n         \n            <Editor \n               editorState={props.editorState} \n               blockRendererFn={mediaBlockRenderer}\n               handleKeyCommand={props.handleKeyCommand}\n               onChange={props.onChange}\n               decorators={CompositeDecorator}\n               blockStyleFn={props.blockStyleFn}\n               placeholder={props.editorPlaceHolder}\n            />\n         </div>\n      </div>\n   );\n}\n\n\n\n\n\n\nexport  function mediaBlockRenderer(block) {\n        \n        if (block.getType() === 'atomic') {\n          return {\n            component: Media,\n            editable: false,\n          };\n        }\n        return null;\n      }\n\n\n\nexport  function pageMediaBlockRenderer(block) {\n        \n        if (block.getType() === 'atomic') {\n          return {\n            component: MediaPage,\n            editable: false,\n          };\n        }\n        return null;\n   }   \n\n\nconst Image = (props) => {\n   return <img alt=\"\" src={props.src} style={styles.media}/>\n};\n\nconst Video = (props) => {\n   return <video controls src={props.src} style={styles.media} />;\n};\n\nconst Media = (props) => {\n   const entity = Entity.get(props.block.getEntityAt(0));\n   const {src} = entity.getData();\n   const type = entity.getType();\n   let media;\n       \n   if (type === 'image') {\n      media = <Image src={src} />;\n   }\n   else if (type === 'video') {\n      media = <Video src={src} />;\n   }\n   return media;\n};\n\nconst MediaPage = (props) => {\n   const entity = Entity.get(props.block.getEntityAt(0));\n   const {src} = entity.getData();\n   const type = entity.getType();\n   let media;\n       \n   if (type === 'image') {\n      media = <div style={styles.imageBox}>\n                 <img alt=\"\" src={src} style={styles.mediaPage}/>\n             </div>;\n   }\n   else if (type === 'video') {\n      media = <div style={styles.imageBox}>\n               <video controls src={src} style={styles.mediaPage} />;\n            </div>;\n   }\n   return media;\n};\n    \n\nconst styles = {\n   root: {\n      fontFamily: '\\'Georgia\\', serif',\n      padding: 20,\n      width: 600,\n   },\n   buttons: {\n      marginBottom: 10,\n   },\n   urlInputContainer: {\n      marginBottom: 10,\n   },\n   urlInput: {\n      fontFamily: '\\'Georgia\\', serif',\n      marginRight: 10,\n      padding: 3,\n   },\n   editor: {\n      border: '1px solid #ccc',\n      cursor: 'text',\n      minHeight: 80,\n      padding: 10,\n   },\n\n   button: {\n      marginTop: 10,\n      textAlign: 'center',\n   },\n\n   media: {\n      width     : '100%',\n      height    : 'auto',\n      objectFit : 'cover',\n   },\n\n   mediaPage: {\n      width     : '70%',\n      height    : 'auto',\n      objectFit : 'cover',\n   },\n\n   imageBox: {\n      border    : 'px solid red',\n      margin    : '0 10px',\n   }\n};\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}