{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/authentication/index.js\";\nimport React from 'react';\nimport { DefaultWrongPage } from \"components/partial_components\";\nimport Axios from 'axios_instance';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { FORM_CHANGE, LOGIN_USER, CREATE_USER, PASSWORD_REST } from 'actions/types';\nimport * as action from 'actions/actionCreators';\nimport { store } from 'index';\nimport Api from 'api';\nimport Helper from 'containers/utils/helpers';\nimport { getCurrentUser } from 'dispatch/index';\nconst helper = new Helper();\nconst api = new Api();\nexport function withAuthentication(Component) {\n  var _temp;\n\n  return _temp = class Authentication extends React.Component {\n    constructor(_props) {\n      super(_props);\n\n      this.onStoreUpdate = () => {};\n\n      this.responseTwitter = response => {\n        console.log(response); //var accessToken =  response.accessToken\n        //var apiUrl =  api.twitterLoginApi(this)\n        //this.socialLogin(apiUrl, accessToken)\n      };\n\n      this.responseGoogle = response => {\n        console.log(response); //var accessToken =  response.accessToken\n        //var apiUrl =  api.googleLoginApi(this)\n        //this.socialLogin(apiUrl, accessToken)\n      };\n\n      this.toggleSignUpForm = props => {\n        console.log(props);\n        console.log(props, this.props);\n        this.props.toggleSignUp(props);\n        this.forceUpdate();\n      };\n\n      this.togglePasswordResetForm = props => {\n        console.log(props, this.props);\n        this.props.togglePasswordReset(props);\n        this.forceUpdate();\n      };\n\n      this.getAuthUrl = authType => {\n        let apiUrl = api.logginUser();\n\n        switch (authType) {\n          case '':\n            return apiUrl;\n\n          default:\n            return apiUrl;\n        }\n      };\n\n      this.onSubmit = (values, dispatch) => {\n        const axiosApi = new Axios();\n        var state = this.props.state;\n        let apiUrl = api.logginUser();\n        console.log(values);\n        let tokenKey = null;\n        let with_token = false;\n        const instance = axiosApi.axiosInstance(false);\n        store.dispatch(action.authenticationPending());\n        return instance.post(apiUrl, values).then(response => dispatch(action.authenticationSuccess(response.data))).catch(error => {\n          if (error.response && error.response.data) {\n            dispatch(action.authenticationError(error.response.data));\n          } else if (error.request) {\n            dispatch(action.handleError());\n          }\n        });\n      };\n\n      this.state = {\n        isAuthenticated: false\n      };\n      this.onSubmit = this.onSubmit.bind(this);\n      this.responseFacebook = this.responseFacebook.bind(this);\n      this.responseTwitter = this.responseTwitter.bind(this);\n      this.responseGoogle = this.responseGoogle.bind(this);\n    }\n\n    isAuthenticated() {\n      return localStorage.getItem('auth') ? true : false;\n    }\n\n    responseFacebook(response) {\n      //console.log(response.accessToken);\n      var accessToken = response.accessToken;\n      var formData = new FormData();\n      console.log(accessToken);\n      formData.append(\"access_token\", accessToken);\n      var apiUrl = api.facebookLoginApi(this); //this.sendRequest(apiUrl, formData)\n    }\n\n    componentDidMount() {\n      const onStoreChange = () => {\n        let storeUpdate = store.getState();\n        console.log(storeUpdate);\n      };\n\n      this.unsubscribe = store.subscribe(onStoreChange);\n    }\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    componentWillReceiveProps(nextProps) {\n      //console.log(nextProps) \n      let userAuth = store.getState().userAuth;\n      let currentUser = localStorage.getItem('currentUser') ? true : false;\n\n      if (userAuth.auth.isLoggedIn && !currentUser) {\n        let isOnStorage = localStorage.getItem('auth') ? true : false;\n\n        if (isOnStorage) {\n          let auth = JSON.parse(localStorage.getItem('auth'));\n          store.dispatch(getCurrentUser(auth.tokenKey));\n          currentUser = localStorage.getItem('currentUser') ? true : false;\n\n          if (currentUser) {\n            setTimeout(() => {\n              this.props.history.push('/');\n              this.setState({\n                isAuthenticated: currentUser\n              });\n            }, 100);\n          }\n        }\n      }\n    }\n\n    componentDidUpdate(nextProps, prevState) {}\n\n    getProps() {\n      let props = {\n        onSubmit: this.onSubmit,\n        responseFacebook: this.responseFacebook,\n        responseGoogle: this.responseGoogle,\n        responseTwitter: this.responseTwitter,\n        togglePasswordResetForm: this.togglePasswordResetForm,\n        toggleSignUpForm: this.toggleSignUpForm\n      };\n      let _this$props$state$use = this.props.state.userAuth,\n          isOnSignUpForm = _this$props$state$use.isOnSignUpForm,\n          isOnPasswordResetForm = _this$props$state$use.isOnPasswordResetForm;\n      return Object.assign(props, {\n        isOnSignUpForm,\n        isOnPasswordResetForm\n      });\n    }\n\n    render() {\n      let props = this.getProps(); //console.log(props)\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.isAuthenticated() ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(DefaultWrongPage, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }))));\n    }\n\n  }, _temp;\n} //binds on `props` change\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    togglePasswordReset: (self, props) => dispatch(action.togglePasswordResetForm(self, props)),\n    toggleSignUp: (self, props) => dispatch(action.toggleSignUpForm(self, props))\n  };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    state: state\n  };\n};\n\nconst composedHoc = compose(connect(mapStateToProps, mapDispatchToProps), withAuthentication);\nexport default composedHoc;","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/authentication/index.js"],"names":["React","DefaultWrongPage","Axios","connect","compose","FORM_CHANGE","LOGIN_USER","CREATE_USER","PASSWORD_REST","action","store","Api","Helper","getCurrentUser","helper","api","withAuthentication","Component","Authentication","constructor","props","onStoreUpdate","responseTwitter","response","console","log","responseGoogle","toggleSignUpForm","toggleSignUp","forceUpdate","togglePasswordResetForm","togglePasswordReset","getAuthUrl","authType","apiUrl","logginUser","onSubmit","values","dispatch","axiosApi","state","tokenKey","with_token","instance","axiosInstance","authenticationPending","post","then","authenticationSuccess","data","catch","error","authenticationError","request","handleError","isAuthenticated","bind","responseFacebook","localStorage","getItem","accessToken","formData","FormData","append","facebookLoginApi","componentDidMount","onStoreChange","storeUpdate","getState","unsubscribe","subscribe","componentWillUnmount","componentWillReceiveProps","nextProps","userAuth","currentUser","auth","isLoggedIn","isOnStorage","JSON","parse","setTimeout","history","push","setState","componentDidUpdate","prevState","getProps","isOnSignUpForm","isOnPasswordResetForm","Object","assign","render","mapDispatchToProps","ownProps","self","mapStateToProps","composedHoc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,WAAlC,EAA8CC,aAA9C,QAAmE,eAAnE;AACA,OAAQ,KAAKC,MAAb,MAA0B,wBAA1B;AAEA,SAASC,KAAT,QAAsB,OAAtB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAKA,MAAMC,MAAM,GAAK,IAAIF,MAAJ,EAAjB;AACA,MAAMG,GAAG,GAAG,IAAIJ,GAAJ,EAAZ;AAMA,OAAO,SAASK,kBAAT,CAA4BC,SAA5B,EAAuC;AAAA;;AAE3C,iBAAO,MAAMC,cAAN,SAA6BlB,KAAK,CAACiB,SAAnC,CAA6C;AAEjDE,IAAAA,WAAW,CAACC,MAAD,EAAQ;AAChB,YAAMA,MAAN;;AADgB,WAgCnBC,aAhCmB,GAgCH,MAAK,CAGpB,CAnCkB;;AAAA,WAiFnBC,eAjFmB,GAiFAC,QAAD,IAAc;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAD6B,CAE7B;AAED;AACA;AAGD,OAzFkB;;AAAA,WA4FnBG,cA5FmB,GA4FDH,QAAD,IAAa;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAD2B,CAE3B;AACA;AACA;AACF,OAjGkB;;AAAA,WAmGnBI,gBAnGmB,GAmGCP,KAAD,IAAS;AACzBI,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACCI,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmB,KAAKA,KAAxB;AACD,aAAKA,KAAL,CAAWQ,YAAX,CAAwBR,KAAxB;AACA,aAAKS,WAAL;AACF,OAxGkB;;AAAA,WA0GnBC,uBA1GmB,GA0GQV,KAAD,IAAS;AAChCI,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmB,KAAKA,KAAxB;AACA,aAAKA,KAAL,CAAWW,mBAAX,CAA+BX,KAA/B;AACA,aAAKS,WAAL;AACF,OA9GkB;;AAAA,WAiHnBG,UAjHmB,GAiHLC,QAAD,IAAY;AACtB,YAAIC,MAAM,GAAInB,GAAG,CAACoB,UAAJ,EAAd;;AACD,gBAAQF,QAAR;AACC,eAAK,EAAL;AACA,mBAAOC,MAAP;;AAEA;AACS,mBAAOA,MAAP;AALV;AAOD,OA1HkB;;AAAA,WA4HnBE,QA5HmB,GA4HR,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC9B,cAAMC,QAAQ,GAAG,IAAIrC,KAAJ,EAAjB;AACA,YAAIsC,KAAK,GAAG,KAAKpB,KAAL,CAAWoB,KAAvB;AACA,YAAIN,MAAM,GAAInB,GAAG,CAACoB,UAAJ,EAAd;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYY,MAAZ;AACD,YAAII,QAAQ,GAAK,IAAjB;AACA,YAAIC,UAAU,GAAG,KAAjB;AACA,cAAMC,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB;AAEAlC,QAAAA,KAAK,CAAC4B,QAAN,CAAe7B,MAAM,CAACoC,qBAAP,EAAf;AACA,eAAQF,QAAQ,CAACG,IAAT,CAAcZ,MAAd,EAAsBG,MAAtB,EACDU,IADC,CACIxB,QAAQ,IAAIe,QAAQ,CAAC7B,MAAM,CAACuC,qBAAP,CAA6BzB,QAAQ,CAAC0B,IAAtC,CAAD,CADxB,EAEDC,KAFC,CAEKC,KAAK,IAAG;AACX,cAAIA,KAAK,CAAC5B,QAAN,IAAkB4B,KAAK,CAAC5B,QAAN,CAAe0B,IAArC,EAA2C;AACzCX,YAAAA,QAAQ,CAAC7B,MAAM,CAAC2C,mBAAP,CAA2BD,KAAK,CAAC5B,QAAN,CAAe0B,IAA1C,CAAD,CAAR;AACD,WAFD,MAEM,IAAIE,KAAK,CAACE,OAAV,EAAmB;AACtBf,YAAAA,QAAQ,CAAC7B,MAAM,CAAC6C,WAAP,EAAD,CAAR;AACF;AACH,SARA,CAAR;AASD,OA/IkB;;AAEhB,WAAKd,KAAL,GAAa;AACVe,QAAAA,eAAe,EAAG;AADR,OAAb;AAIA,WAAKnB,QAAL,GAA2B,KAAKA,QAAL,CAAcoB,IAAd,CAAmB,IAAnB,CAA3B;AACA,WAAKC,gBAAL,GAA2B,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAA3B;AACA,WAAKlC,eAAL,GAA2B,KAAKA,eAAL,CAAqBkC,IAArB,CAA0B,IAA1B,CAA3B;AACA,WAAK9B,cAAL,GAA2B,KAAKA,cAAL,CAAoB8B,IAApB,CAAyB,IAAzB,CAA3B;AACF;;AAGDD,IAAAA,eAAe,GAAG;AACf,aAAOG,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA8B,IAA9B,GAAqC,KAA5C;AACF;;AAEDF,IAAAA,gBAAgB,CAAClC,QAAD,EAAW;AACxB;AACA,UAAIqC,WAAW,GAAIrC,QAAQ,CAACqC,WAA5B;AACA,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAtC,MAAAA,OAAO,CAACC,GAAR,CAAYmC,WAAZ;AAEAC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAA+BH,WAA/B;AAEA,UAAI1B,MAAM,GAAInB,GAAG,CAACiD,gBAAJ,CAAqB,IAArB,CAAd,CARwB,CAUxB;AAEF;;AASDC,IAAAA,iBAAiB,GAAG;AACjB,YAAMC,aAAa,GAAG,MAAM;AACzB,YAAIC,WAAW,GAAGzD,KAAK,CAAC0D,QAAN,EAAlB;AACA5C,QAAAA,OAAO,CAACC,GAAR,CAAY0C,WAAZ;AAEF,OAJD;;AAKA,WAAKE,WAAL,GAAmB3D,KAAK,CAAC4D,SAAN,CAAgBJ,aAAhB,CAAnB;AAEF;;AAEDK,IAAAA,oBAAoB,GAAG;AACrB,WAAKF,WAAL;AAED;;AAGDG,IAAAA,yBAAyB,CAACC,SAAD,EAAW;AACjC;AACA,UAAKC,QAAQ,GAAGhE,KAAK,CAAC0D,QAAN,GAAiBM,QAAjC;AACA,UAAIC,WAAW,GAAIjB,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAoC,IAApC,GAAyC,KAA5D;;AAEA,UAAIe,QAAQ,CAACE,IAAT,CAAcC,UAAd,IAA4B,CAACF,WAAjC,EAA8C;AAC3C,YAAIG,WAAW,GAAGpB,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA8B,IAA9B,GAAqC,KAAvD;;AAEA,YAAImB,WAAJ,EAAiB;AACd,cAAIF,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWtB,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACAjD,UAAAA,KAAK,CAAC4B,QAAN,CAAezB,cAAc,CAAC+D,IAAI,CAACnC,QAAN,CAA7B;AACAkC,UAAAA,WAAW,GAAGjB,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAoC,IAApC,GAAyC,KAAvD;;AAEA,cAAIgB,WAAJ,EAAiB;AACdM,YAAAA,UAAU,CAAE,MAAM;AACf,mBAAK7D,KAAL,CAAW8D,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,mBAAKC,QAAL,CAAc;AAAC7B,gBAAAA,eAAe,EAACoB;AAAjB,eAAd;AACF,aAHS,EAGP,GAHO,CAAV;AAIF;AACH;AACH;AACH;;AAEDU,IAAAA,kBAAkB,CAACZ,SAAD,EAAYa,SAAZ,EAAsB,CAEvC;;AAkEDC,IAAAA,QAAQ,GAAG;AACR,UAAKnE,KAAK,GAAG;AACVgB,QAAAA,QAAQ,EAAG,KAAKA,QADN;AAEVqB,QAAAA,gBAAgB,EAAU,KAAKA,gBAFrB;AAGV/B,QAAAA,cAAc,EAAY,KAAKA,cAHrB;AAIVJ,QAAAA,eAAe,EAAW,KAAKA,eAJrB;AAKVQ,QAAAA,uBAAuB,EAAG,KAAKA,uBALrB;AAMVH,QAAAA,gBAAgB,EAAU,KAAKA;AANrB,OAAb;AADQ,kCASuC,KAAKP,KAAL,CAAWoB,KAAX,CAAiBkC,QATxD;AAAA,UASFc,cATE,yBASFA,cATE;AAAA,UAScC,qBATd,yBAScA,qBATd;AAUR,aAAOC,MAAM,CAACC,MAAP,CAAcvE,KAAd,EAAqB;AAAEoE,QAAAA,cAAF;AAAkBC,QAAAA;AAAlB,OAArB,CAAP;AACF;;AAGDG,IAAAA,MAAM,GAAG;AACN,UAAIxE,KAAK,GAAG,KAAKmE,QAAL,EAAZ,CADM,CAEN;;AACA,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKhC,eAAL,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,gBAAD,oBAAsBnC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADH,CADF,GAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADH,CANN,CADH;AAcF;;AAlLgD,GAApD;AAoLF,C,CAGD;;AACA,MAAMyE,kBAAkB,GAAG,CAACvD,QAAD,EAAWwD,QAAX,KAAwB;AAEhD,SAAO;AACL/D,IAAAA,mBAAmB,EAAI,CAACgE,IAAD,EAAQ3E,KAAR,KAAqBkB,QAAQ,CAAC7B,MAAM,CAACqB,uBAAP,CAA+BiE,IAA/B,EAAqC3E,KAArC,CAAD,CAD/C;AAELQ,IAAAA,YAAY,EAAW,CAACmE,IAAD,EAAQ3E,KAAR,KAAqBkB,QAAQ,CAAC7B,MAAM,CAACkB,gBAAP,CAAwBoE,IAAxB,EAA+B3E,KAA/B,CAAD;AAF/C,GAAP;AAMF,CARD;;AAaA,MAAM4E,eAAe,GAAG,CAACxD,KAAD,EAAQsD,QAAR,KAAqB;AAC1C,SAAO;AACJtD,IAAAA,KAAK,EAAEA;AADH,GAAP;AAIF,CALD;;AAOA,MAAMyD,WAAW,GAAG7F,OAAO,CAAED,OAAO,CAAC6F,eAAD,EAAkBH,kBAAlB,CAAT,EAA+C7E,kBAA/C,CAA3B;AAGA,eAAgBiF,WAAhB","sourcesContent":["import React from 'react';\n\nimport {DefaultWrongPage} from \"components/partial_components\"\nimport Axios from 'axios_instance';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { FORM_CHANGE, LOGIN_USER, CREATE_USER,PASSWORD_REST } from 'actions/types';\nimport  * as action  from 'actions/actionCreators';\n\nimport { store } from 'index';\nimport Api from 'api';\nimport Helper from 'containers/utils/helpers';\nimport { getCurrentUser } from 'dispatch/index';\n           \n\n\n\nconst helper   = new Helper();\nconst api = new Api();\n\n\n\n\n\nexport function withAuthentication(Component) {\n\n   return class Authentication extends React.Component {\n\n      constructor(props) {\n         super(props);\n         this.state = {\n            isAuthenticated : false,\n         };\n\n         this.onSubmit            = this.onSubmit.bind(this);\n         this.responseFacebook    = this.responseFacebook.bind(this);\n         this.responseTwitter     = this.responseTwitter.bind(this);\n         this.responseGoogle      = this.responseGoogle.bind(this);     \n      }\n\n\n      isAuthenticated() {\n         return localStorage.getItem('auth' )?true : false;\n      }\n\n      responseFacebook(response) {\n         //console.log(response.accessToken);\n         var accessToken =  response.accessToken\n         var formData = new FormData();\n         console.log(accessToken)\n          \n         formData.append(\"access_token\",accessToken);\n      \n         var apiUrl =  api.facebookLoginApi(this)\n\n         //this.sendRequest(apiUrl, formData)\n              \n      }\n\n\n      onStoreUpdate = () =>{\n         \n         \n      };\n\n\n      componentDidMount() {\n         const onStoreChange = () => {\n            let storeUpdate = store.getState();\n            console.log(storeUpdate)\n           \n         }\n         this.unsubscribe = store.subscribe(onStoreChange);\n                    \n      };\n\n      componentWillUnmount() {\n        this.unsubscribe();\n\n      };\n\n\n      componentWillReceiveProps(nextProps){\n         //console.log(nextProps) \n         let  userAuth = store.getState().userAuth;\n         let currentUser  = localStorage.getItem('currentUser')?true:false;\n\n         if (userAuth.auth.isLoggedIn && !currentUser) {\n            let isOnStorage = localStorage.getItem('auth' )?true : false;\n\n            if (isOnStorage) {\n               let auth = JSON.parse(localStorage.getItem('auth'))\n               store.dispatch(getCurrentUser(auth.tokenKey));\n               currentUser = localStorage.getItem('currentUser')?true:false;\n\n               if (currentUser) {\n                  setTimeout( () => {\n                     this.props.history.push('/');\n                     this.setState({isAuthenticated:currentUser })\n                  }, 100);\n               }\n            }\n         }       \n      };\n\n      componentDidUpdate(nextProps, prevState){\n       \n      };\n\n      responseTwitter = (response) => {\n         console.log(response);\n         //var accessToken =  response.accessToken\n      \n        //var apiUrl =  api.twitterLoginApi(this)\n        //this.socialLogin(apiUrl, accessToken)\n\n               \n      }\n\n\n      responseGoogle = (response)=> {\n         console.log(response);\n         //var accessToken =  response.accessToken\n         //var apiUrl =  api.googleLoginApi(this)\n         //this.socialLogin(apiUrl, accessToken)\n      };\n\n      toggleSignUpForm = (props)=>{\n         console.log(props)\n          console.log(props, this.props)\n         this.props.toggleSignUp(props)\n         this.forceUpdate()\n      }\n\n      togglePasswordResetForm = (props)=>{\n         console.log(props, this.props)\n         this.props.togglePasswordReset(props)\n         this.forceUpdate()\n      }\n      \n      \n      getAuthUrl = (authType)=>{\n        \tlet apiUrl =  api.logginUser();\n      \t\tswitch (authType){\n      \t\t\tcase '':\n      \t\t\treturn apiUrl;\n      \t\t\t\n      \t\t\tdefault:\n                  return apiUrl;\n      \t\t}\n      };\n\n      onSubmit = (values, dispatch) => {\n         const axiosApi = new Axios();\n         var state = this.props.state;\n         let apiUrl =  api.logginUser();\n         console.log(values)\n        let tokenKey   = null;\n        let with_token = false;\n        const instance = axiosApi.axiosInstance(false);\n\n        store.dispatch(action.authenticationPending()) \n        return  instance.post(apiUrl, values)\n              .then(response => dispatch(action.authenticationSuccess(response.data)))\n              .catch(error =>{\n                  if (error.response && error.response.data) {\n                    dispatch(action.authenticationError(error.response.data));\n                  }else if (error.request) {\n                     dispatch(action.handleError())\n                  }\n               }); \n      }\n      \n      getProps() {\n         let  props = {\n            onSubmit : this.onSubmit, \n            responseFacebook        : this.responseFacebook,\n            responseGoogle          : this.responseGoogle,\n            responseTwitter         : this.responseTwitter,\n            togglePasswordResetForm : this.togglePasswordResetForm, \n            toggleSignUpForm        : this.toggleSignUpForm,\n         };\n         let { isOnSignUpForm, isOnPasswordResetForm} = this.props.state.userAuth\n         return Object.assign(props, { isOnSignUpForm, isOnPasswordResetForm});\n      }\n    \n\n      render() {\n         let props = this.getProps(); \n         //console.log(props)\n         return (\n            <div>\n               {this.isAuthenticated()?\n                  <div>\n                     <DefaultWrongPage {...props}/>\n                  </div>\n                  :\n                  <div>\n                     <Component {...props}/>\n                  </div>  \n               }\n\n            </div>\n         );\n      }\n   }\n}\n\n\n//binds on `props` change\nconst mapDispatchToProps = (dispatch, ownProps) => {\n     \n   return {\n     togglePasswordReset  : (self , props)    => dispatch(action.togglePasswordResetForm(self, props)),\n     toggleSignUp         : (self , props)    => dispatch(action.toggleSignUpForm(self , props)),\n     \n   }\n\n};\n\n\n\n\nconst mapStateToProps = (state, ownProps) => {\n   return {\n      state: state,\n      \n   }\n};\n\nconst composedHoc = compose( connect(mapStateToProps, mapDispatchToProps),withAuthentication )\n\n\nexport default  composedHoc;\n  \n\n\n"]},"metadata":{},"sourceType":"module"}