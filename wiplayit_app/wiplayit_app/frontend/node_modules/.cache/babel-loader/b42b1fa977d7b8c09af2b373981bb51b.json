{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_page.js\";\nimport React, { Component } from 'react';\nimport AjaxLoader from \"components/ajax-loader\";\nimport { RepliesComponent, CommentsReplyLink } from \"components/reply_components\";\nimport withReplies from 'containers/replies/main/replies';\nimport withMain from 'containers/higher-order-components/main';\nimport * as action from 'actions/actionCreators';\nimport { store } from \"index\";\n\nclass RepliesBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReplyBox: true\n    };\n  }\n\n  componentDidMount() {\n    let _this$props = this.props,\n        isPostBox = _this$props.isPostBox,\n        isAnswerBox = _this$props.isAnswerBox,\n        comment = _this$props.comment,\n        post = _this$props.post,\n        isPostListBox = _this$props.isPostListBox,\n        isProfileBox = _this$props.isProfileBox;\n    var replies = comment.replies;\n    let byId = '';\n\n    if (replies.length) {\n      if (isAnswerBox) {\n        byId = \"answerReplies\".concat(comment.id);\n      } else {\n        byId = \"postReplies\".concat(comment.id);\n      }\n\n      this.setState({\n        byId\n      });\n      var props = {\n        actionType: 'GET_REPLY_LINK_DATA',\n        replies,\n        byId\n      };\n      store.dispatch(action.getRepliesLindData(props));\n    }\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidUpdate(nextProps, prevState) {}\n\n  getProps() {\n    let props = {\n      isReplyBox: this.state.isReplyBox,\n      replies: this.props.comment.replies,\n      repliesById: this.state.byId\n    };\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    var replyState = props.replyState;\n    var replies = props.entyties.replies;\n    replies = replies.byId[props.repliesById];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, replies ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, replies.showLink ? React.createElement(CommentsReplyLink, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, replies.isLoading ? React.createElement(\"div\", {\n      className: \"spin-loader-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(RepliesComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))))) : \"\");\n  }\n\n}\n\nexport default RepliesBox;","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_page.js"],"names":["React","Component","AjaxLoader","RepliesComponent","CommentsReplyLink","withReplies","withMain","action","store","RepliesBox","constructor","props","state","isReplyBox","componentDidMount","isPostBox","isAnswerBox","comment","post","isPostListBox","isProfileBox","replies","byId","length","id","setState","actionType","dispatch","getRepliesLindData","componentDidCatch","error","info","console","log","componentDidUpdate","nextProps","prevState","getProps","repliesById","Object","assign","render","replyState","entyties","showLink","isLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  AjaxLoader from \"components/ajax-loader\";\nimport { RepliesComponent,CommentsReplyLink } from \"components/reply_components\"\nimport withReplies from 'containers/replies/main/replies'\nimport withMain  from 'containers/higher-order-components/main';\nimport  * as action  from 'actions/actionCreators';\nimport {store} from \"index\";\n\n\n\n\n\n\n\nclass RepliesBox extends Component {\n\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         isReplyBox : true,\n         \n      };\n   };\n\n     \n   componentDidMount() {\n      let {isPostBox, isAnswerBox,comment,post,isPostListBox, isProfileBox} = this.props; \n      var replies  = comment.replies;\n      let byId = '';\n      \n      if (replies.length) {\n         if (isAnswerBox) {\n            byId = `answerReplies${comment.id}`;\n         }else{\n            byId = `postReplies${comment.id}`;\n         }\n\n         this.setState({byId});\n         var props = {\n            actionType : 'GET_REPLY_LINK_DATA',\n            replies,\n            byId,\n         }\n         store.dispatch(action.getRepliesLindData(props)); \n      }\n     \n   };\n\n   componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n   componentDidUpdate(nextProps, prevState) {\n   }; \n   \n\n   getProps() {\n      let props = {\n         isReplyBox  : this.state.isReplyBox,\n         replies     : this.props.comment.replies,\n         repliesById : this.state.byId,\n      } \n      return Object.assign(props, this.props);\n   };\n\n\n   render() { \n      let props  = this.getProps();\n      var replyState = props.replyState;\n      var replies    =   props.entyties.replies;\n      replies        =  replies.byId[props.repliesById];\n                 \n      return (\n         <div>\n         {replies?\n            <div>\n            { replies.showLink?\n               <CommentsReplyLink {...props}/>\n                     :\n                     <div>\n                        { replies.isLoading?\n                           <div className=\"spin-loader-box\">\n                              <AjaxLoader/>\n                           </div>\n                           :\n                           <div>\n                              <RepliesComponent {...props}/>\n                           </div>\n                        }\n                     </div>\n                  }\n            </div>\n         :\n         \"\"\n         }\n         </div>\n      );\n   };\n}\n\n\nexport default RepliesBox;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}