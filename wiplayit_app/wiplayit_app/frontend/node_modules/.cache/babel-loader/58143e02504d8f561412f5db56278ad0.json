{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/components/answer_components.js\";\nimport React from 'react';\nimport { Link, BrowserRouter } from \"react-router-dom\";\nimport { MatchMediaHOC } from 'react-match-media';\nimport { AnswerOptModalBtns, ModalCloseBtn, UpVoteAnswerBtn, DownVoteAnswerBtn, OpenModalButton, UpVoteBtn, QuestionOptDropDownBtn, CommentBtn } from \"components/buttons\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport * as types from 'actions/types';\nimport CommentsBox from \"containers/comment/comment_page\";\nimport { pageMediaBlockRenderer } from 'components/editor_components';\nimport { ButtonsBox, Styles } from \"components/partial_components\";\nimport Api from 'api';\nimport { UserComponentSmall } from \"components/profile_components\";\nconst OptBtnSmallScreen = MatchMediaHOC(OpenModalButton, '(max-width: 500px)');\nconst OptBtnBigScreen = MatchMediaHOC(QuestionOptDropDownBtn, '(min-width: 800px)');\nconst api = new Api();\nexport const AnswersComponent = props => {\n  let pathToProfile = \"/profile/\".concat(props.answer.created_by.slug, \"/\");\n  let pathToUpvoters = \"/answer/\".concat(props.answer.id, \"/upvoters/\");\n  let optionsBtnStyles = {\n    fontSize: '8px',\n    background: 'white',\n    fontFamily: 'Mukta',\n    fontWeight: 'bold',\n    color: '#4A4A4A',\n    margin: '0 0 2px'\n  };\n  let storedState = JSON.parse(props.answer.add_answer);\n  const contentState = convertFromRaw(storedState);\n  const editorState = EditorState.createWithContent(contentState);\n  let state = {\n    currentUser: props.currentUser,\n    answer: props.answer\n  };\n  let modalOptionsProps = {\n    modalProps: {\n      objName: 'answer',\n      actionType: types.UPDATE_ANSWER,\n      isPut: true,\n      obj: props.answer\n    },\n    modalType: 'optionsMenu'\n  };\n  let upvoteBtnProps = {\n    objName: 'answer',\n    actionType: types.UPDATE_ANSWER,\n    isPut: true,\n    obj: props.answer,\n    objId: props.answer.id,\n    objIndex: props.index,\n    apiUrl: api.updateAnswerApi(props.answer.id),\n    byId: props.answerById\n  };\n  let createCommentProps = {\n    modalProps: {\n      objName: 'comment',\n      actionType: types.CREATE_COMMENT,\n      obj: props.answer,\n      objId: props.answer.id,\n      isPost: true,\n      editorPlaceHolder: 'Add Comment...',\n      apiUrl: api.createAnswerCommentApi(props.answer.id)\n    },\n    modalType: 'editor'\n  };\n  let btnsProps = {\n    createCommentProps,\n    upvoteBtnProps,\n    modalOptionsProps,\n    btnStyles: optionsBtnStyles,\n    btnText: React.createElement(\"i\", {\n      className: \"material-icons \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"more_horiz\")\n  };\n  Object.assign(btnsProps, props);\n  let itemsCounter = React.createElement(Link, {\n    to: {\n      pathname: pathToUpvoters,\n      state\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.answer.upvotes, \"  Upvotes\");\n  let btn1 = props.answer.has_upvoted ? React.createElement(DownVoteAnswerBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })) : React.createElement(UpVoteAnswerBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }));\n  let btn2 = React.createElement(CommentBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }));\n  let optionsBtn = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(OptBtnSmallScreen, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(OptBtnBigScreen, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })));\n  const btnsList = {\n    itemsCounter: itemsCounter,\n    btn1: btn1,\n    btn2: btn2,\n    btn3: optionsBtn,\n    Styles: Styles\n  };\n  const userProps = {\n    user: props.answer.created_by,\n    currentUser: props.currentUser\n  };\n  return React.createElement(\"div\", {\n    className: \"answer-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, props.isProfileBox ? \"\" : React.createElement(UserComponentSmall, Object.assign({}, userProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"answer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Editor, {\n    blockRendererFn: pageMediaBlockRenderer,\n    editorState: editorState,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(ButtonsBox, Object.assign({}, btnsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(CommentsBox, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))));\n};\nexport const AnswerDropDownMenu = props => React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  className: \"btn-sm answer-option options-btn \",\n  id: \"questionMenuButton\",\n  \"data-toggle\": \"dropdown\",\n  \"aria-haspopup\": \"false\",\n  \"aria-expanded\": \"true\",\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"material-icons \",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, \"more_horiz\")), React.createElement(\"div\", {\n  className: \"dropdown-menu\",\n  \"aria-labelledby\": \"questionMenuButton\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}, React.createElement(AnswerOptModalBtns, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161\n  },\n  __self: this\n})))));\nexport const PartialAnswerComp = props => {\n  let optionsBtnStyles = {\n    fontSize: '8px',\n    border: '1px solid red',\n    background: 'white',\n    fontFamily: 'Mukta',\n    fontWeight: 'bold',\n    color: '#4A4A4A',\n    margin: '0 0 2px'\n  };\n  let upvoteBtnProps = {\n    upVoteAnswer: props.props.upVoteAnswer,\n    downVoteAnswer: props.props.downVoteAnswer,\n    answer: props.answer,\n    index: props.index\n  };\n  return React.createElement(\"div\", {\n    className: \"answer-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"answer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, props.answer.add_answer)), React.createElement(\"div\", {\n    className: \"answer-relation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"answer-upvotes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, props.answer.upvotes, \"  Upvotes\")), React.createElement(\"div\", {\n    className: \"answer-nav-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"upvote-answer-btn-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, props.answer.user_has_upvoted ? React.createElement(DownVoteAnswerBtn, Object.assign({}, upvoteBtnProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })) : React.createElement(UpVoteAnswerBtn, Object.assign({}, upvoteBtnProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"comment-btn-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(CommentBtn, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"options-box answer-optios-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(OptBtnSmallScreen, Object.assign({\n    modalContents: React.createElement(AnswerModalMenu, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })),\n    props: props,\n    answer: props.answer,\n    btnStyles: optionsBtnStyles,\n    openOptionsModal: props.props.openOptionsModal,\n    btnText: React.createElement(\"i\", {\n      className: \"material-icons \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"more_horiz\")\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })), React.createElement(OptBtnBigScreen, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }))))));\n};\nexport const AnswerModalMenu = props => React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 251\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"modal-menu \",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 252\n  },\n  __self: this\n}, React.createElement(ModalCloseBtn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 253\n  },\n  __self: this\n}), React.createElement(AnswerOptModalBtns, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 254\n  },\n  __self: this\n}))));","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/components/answer_components.js"],"names":["React","Link","BrowserRouter","MatchMediaHOC","AnswerOptModalBtns","ModalCloseBtn","UpVoteAnswerBtn","DownVoteAnswerBtn","OpenModalButton","UpVoteBtn","QuestionOptDropDownBtn","CommentBtn","Editor","EditorState","convertFromRaw","types","CommentsBox","pageMediaBlockRenderer","ButtonsBox","Styles","Api","UserComponentSmall","OptBtnSmallScreen","OptBtnBigScreen","api","AnswersComponent","props","pathToProfile","answer","created_by","slug","pathToUpvoters","id","optionsBtnStyles","fontSize","background","fontFamily","fontWeight","color","margin","storedState","JSON","parse","add_answer","contentState","editorState","createWithContent","state","currentUser","modalOptionsProps","modalProps","objName","actionType","UPDATE_ANSWER","isPut","obj","modalType","upvoteBtnProps","objId","objIndex","index","apiUrl","updateAnswerApi","byId","answerById","createCommentProps","CREATE_COMMENT","isPost","editorPlaceHolder","createAnswerCommentApi","btnsProps","btnStyles","btnText","Object","assign","itemsCounter","pathname","upvotes","btn1","has_upvoted","btn2","optionsBtn","btnsList","btn3","userProps","user","isProfileBox","AnswerDropDownMenu","PartialAnswerComp","border","upVoteAnswer","downVoteAnswer","user_has_upvoted","modalContents","openOptionsModal","AnswerModalMenu"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,aAAf,QAAqC,kBAArC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,kBAAT,EAA4BC,aAA5B,EAA0CC,eAA1C,EACEC,iBADF,EACoBC,eADpB,EACqCC,SADrC,EAC+CC,sBAD/C,EACuEC,UADvE,QAEM,oBAFN;AAIA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,cAA9B,QAAoD,UAApD;AACA,OAAQ,KAAKC,KAAb,MAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAAQC,sBAAR,QAAqC,8BAArC;AAEA,SAAQC,UAAR,EAAoBC,MAApB,QAAkC,+BAAlC;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,SAASC,kBAAT,QAAmC,+BAAnC;AAMA,MAAMC,iBAAiB,GAAGnB,aAAa,CAACK,eAAD,EAAkB,oBAAlB,CAAvC;AACA,MAAMe,eAAe,GAAGpB,aAAa,CAACO,sBAAD,EAAyB,oBAAzB,CAArC;AACA,MAAMc,GAAG,GAAQ,IAAIJ,GAAJ,EAAjB;AAKA,OAAO,MAAMK,gBAAgB,GAAGC,KAAK,IAAI;AAEtC,MAAIC,aAAa,sBAAgBD,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,IAAxC,MAAjB;AACA,MAAIC,cAAc,qBAAeL,KAAK,CAACE,MAAN,CAAaI,EAA5B,eAAlB;AAEA,MAAIC,gBAAgB,GAAG;AACjBC,IAAAA,QAAQ,EAAK,KADI;AAEjBC,IAAAA,UAAU,EAAG,OAFI;AAGjBC,IAAAA,UAAU,EAAG,OAHI;AAIjBC,IAAAA,UAAU,EAAG,MAJI;AAKjBC,IAAAA,KAAK,EAAQ,SALI;AAMjBC,IAAAA,MAAM,EAAO;AANI,GAAvB;AASA,MAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWhB,KAAK,CAACE,MAAN,CAAae,UAAxB,CAAlB;AAEA,QAAMC,YAAY,GAAG9B,cAAc,CAAC0B,WAAD,CAAnC;AACA,QAAMK,WAAW,GAAGhC,WAAW,CAACiC,iBAAZ,CAA8BF,YAA9B,CAApB;AAEA,MAAIG,KAAK,GAAG;AAACC,IAAAA,WAAW,EAAGtB,KAAK,CAACsB,WAArB;AAAiCpB,IAAAA,MAAM,EAAGF,KAAK,CAACE;AAAhD,GAAZ;AAEA,MAAKqB,iBAAiB,GAAG;AACtBC,IAAAA,UAAU,EAAG;AACXC,MAAAA,OAAO,EAAM,QADF;AAEXC,MAAAA,UAAU,EAAGrC,KAAK,CAACsC,aAFR;AAGXC,MAAAA,KAAK,EAAQ,IAHF;AAIXC,MAAAA,GAAG,EAAU7B,KAAK,CAACE;AAJR,KADS;AAQtB4B,IAAAA,SAAS,EAAG;AARU,GAAzB;AAWA,MAAIC,cAAc,GAAG;AAClBN,IAAAA,OAAO,EAAO,QADI;AAElBC,IAAAA,UAAU,EAAIrC,KAAK,CAACsC,aAFF;AAGlBC,IAAAA,KAAK,EAAS,IAHI;AAIlBC,IAAAA,GAAG,EAAW7B,KAAK,CAACE,MAJF;AAKlB8B,IAAAA,KAAK,EAAShC,KAAK,CAACE,MAAN,CAAaI,EALT;AAMlB2B,IAAAA,QAAQ,EAAMjC,KAAK,CAACkC,KANF;AAOlBC,IAAAA,MAAM,EAAQrC,GAAG,CAACsC,eAAJ,CAAoBpC,KAAK,CAACE,MAAN,CAAaI,EAAjC,CAPI;AAQlB+B,IAAAA,IAAI,EAAUrC,KAAK,CAACsC;AARF,GAArB;AAWA,MAAKC,kBAAkB,GAAG;AACvBf,IAAAA,UAAU,EAAG;AACXC,MAAAA,OAAO,EAAa,SADT;AAEXC,MAAAA,UAAU,EAAUrC,KAAK,CAACmD,cAFf;AAGXX,MAAAA,GAAG,EAAiB7B,KAAK,CAACE,MAHf;AAIX8B,MAAAA,KAAK,EAAehC,KAAK,CAACE,MAAN,CAAaI,EAJtB;AAKXmC,MAAAA,MAAM,EAAc,IALT;AAMXC,MAAAA,iBAAiB,EAAG,gBANT;AAOXP,MAAAA,MAAM,EAAcrC,GAAG,CAAC6C,sBAAJ,CAA2B3C,KAAK,CAACE,MAAN,CAAaI,EAAxC;AAPT,KADU;AAWvBwB,IAAAA,SAAS,EAAG;AAXW,GAA1B;AAeA,MAAIc,SAAS,GAAG;AACVL,IAAAA,kBADU;AAEVR,IAAAA,cAFU;AAGVR,IAAAA,iBAHU;AAIVsB,IAAAA,SAAS,EAACtC,gBAJA;AAKVuC,IAAAA,OAAO,EAAG;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA,GAAhB;AAQAC,EAAAA,MAAM,CAACC,MAAP,CAAcJ,SAAd,EAAyB5C,KAAzB;AACA,MAAIiD,YAAY,GAAG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAACC,MAAAA,QAAQ,EAAC7C,cAAV;AAAyBgB,MAAAA;AAAzB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,KAAK,CAACE,MAAN,CAAaiD,OADlB,cAAnB;AAIA,MAAIC,IAAI,GAAIpD,KAAK,CAACE,MAAN,CAAamD,WAAb,GAA0B,oBAAC,iBAAD,oBAAuBT,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1B,GACE,oBAAC,eAAD,oBAAqBA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADd;AAGA,MAAIU,IAAI,GAAI,oBAAC,UAAD,oBAAgBV,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;AAGA,MAAIW,UAAU,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,iBAAD,oBAAuBX,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH,EAEG,oBAAC,eAAD,oBAAqB5C,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFH,CAAlB;AAKA,QAAMwD,QAAQ,GAAK;AACVP,IAAAA,YAAY,EAAGA,YADL;AAEVG,IAAAA,IAAI,EAAKA,IAFC;AAGVE,IAAAA,IAAI,EAAKA,IAHC;AAIVG,IAAAA,IAAI,EAAKF,UAJC;AAKV9D,IAAAA,MAAM,EAAGA;AALC,GAAnB;AAQA,QAAMiE,SAAS,GAAI;AACRC,IAAAA,IAAI,EAAU3D,KAAK,CAACE,MAAN,CAAaC,UADnB;AAERmB,IAAAA,WAAW,EAAGtB,KAAK,CAACsB;AAFZ,GAAnB;AAKA,SAEG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCtB,KAAK,CAAC4D,YAAN,GACE,EADF,GAGG,oBAAC,kBAAD,oBAAwBF,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJJ,CADH,EAUG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,MAAD;AACM,IAAA,eAAe,EAAEnE,sBADvB;AAEM,IAAA,WAAW,EAAE4B,WAFnB;AAGM,IAAA,QAAQ,EAAE,IAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAVH,EAiBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,UAAD,oBAAgBqC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH,EAEG,oBAAC,WAAD,oBAAiBxD,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFH,CAjBN,CAFH;AAyBF,CAxHM;AA4HP,OAAO,MAAM6D,kBAAkB,GAAG7D,KAAK,IACpC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG;AAAQ,EAAA,SAAS,EAAC,mCAAlB;AAAsD,EAAA,EAAE,EAAC,oBAAzD;AACK,iBAAY,UADjB;AAC4B,mBAAc,OAD1C;AACkD,mBAAc,MADhE;AACuE,EAAA,IAAI,EAAC,QAD5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEK;AAAG,EAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL,CADH,EAKJ;AAAK,EAAA,SAAS,EAAC,eAAf;AAA+B,qBAAgB,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,kBAAD,oBAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,CALI,CADH,CADI;AAoBP,OAAO,MAAM8D,iBAAiB,GAAG9D,KAAK,IAAI;AAEvC,MAAIO,gBAAgB,GAAG;AACZC,IAAAA,QAAQ,EAAK,KADD;AAEZuD,IAAAA,MAAM,EAAO,eAFD;AAGZtD,IAAAA,UAAU,EAAG,OAHD;AAIZC,IAAAA,UAAU,EAAG,OAJD;AAKZC,IAAAA,UAAU,EAAG,MALD;AAMZC,IAAAA,KAAK,EAAQ,SAND;AAOZC,IAAAA,MAAM,EAAO;AAPD,GAAvB;AAUA,MAAIkB,cAAc,GAAI;AACnBiC,IAAAA,YAAY,EAAKhE,KAAK,CAACA,KAAN,CAAYgE,YADV;AAEnBC,IAAAA,cAAc,EAAGjE,KAAK,CAACA,KAAN,CAAYiE,cAFV;AAGnB/D,IAAAA,MAAM,EAAWF,KAAK,CAACE,MAHJ;AAInBgC,IAAAA,KAAK,EAAYlC,KAAK,CAACkC;AAJJ,GAAtB;AAOA,SACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlC,KAAK,CAACE,MAAN,CAAae,UAAlB,CADH,CADH,EAKG;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CjB,KAAK,CAACE,MAAN,CAAaiD,OAAvD,cADH,CADH,EAMG;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKnD,KAAK,CAACE,MAAN,CAAagE,gBAAb,GACA,oBAAC,iBAAD,oBAAuBnC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,GAIA,oBAAC,eAAD,oBAAqBA,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANL,CAFH,EAaG;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,UAAD,oBAAgB/B,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH,CAbH,EAmBI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD,gBAAuB;AACRmE,IAAAA,aAAa,EAAG,oBAAC,eAAD,oBAAqBnE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADR;AAEPA,IAAAA,KAAK,EAAOA,KAFL;AAGPE,IAAAA,MAAM,EAAMF,KAAK,CAACE,MAHX;AAIP2C,IAAAA,SAAS,EAAGtC,gBAJL;AAKP6D,IAAAA,gBAAgB,EAAGpE,KAAK,CAACA,KAAN,CAAYoE,gBALxB;AAMPtB,IAAAA,OAAO,EAAE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAYE,oBAAC,eAAD,oBAAqB9C,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZF,CAnBJ,CANH,CALH,CADH;AAsDF,CAzEM;AA6EP,OAAO,MAAMqE,eAAe,GAAGrE,KAAK,IACjC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,kBAAD,oBAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFF,CADD,CADI","sourcesContent":["import React from 'react';\nimport { Link, BrowserRouter  } from \"react-router-dom\";\nimport { MatchMediaHOC } from 'react-match-media';\nimport { AnswerOptModalBtns,ModalCloseBtn,UpVoteAnswerBtn,\n  DownVoteAnswerBtn,OpenModalButton, UpVoteBtn,QuestionOptDropDownBtn, CommentBtn  }\n from \"components/buttons\";\n\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport  * as types  from 'actions/types';\nimport CommentsBox from \"containers/comment/comment_page\";\nimport {pageMediaBlockRenderer} from 'components/editor_components';\n\nimport {ButtonsBox, Styles } from \"components/partial_components\";\nimport Api from 'api';\n\nimport { UserComponentSmall } from \"components/profile_components\";\n\n\n\n\n\nconst OptBtnSmallScreen = MatchMediaHOC(OpenModalButton, '(max-width: 500px)');\nconst OptBtnBigScreen = MatchMediaHOC(QuestionOptDropDownBtn, '(min-width: 800px)');\nconst api      = new Api();\n\n\n\n\nexport const AnswersComponent = props => {\n   \n   let pathToProfile =  `/profile/${props.answer.created_by.slug}/`;\n   let pathToUpvoters =  `/answer/${props.answer.id}/upvoters/`;\n\n   let optionsBtnStyles = {\n         fontSize   : '8px',\n         background : 'white',\n         fontFamily : 'Mukta',\n         fontWeight : 'bold',\n         color      : '#4A4A4A',\n         margin     : '0 0 2px'\n   };\n\n   let storedState = JSON.parse(props.answer.add_answer);\n   \n   const contentState = convertFromRaw(storedState);\n   const editorState = EditorState.createWithContent(contentState);\n   \n   let state = {currentUser : props.currentUser,answer : props.answer,}\n\n   let  modalOptionsProps = {\n      modalProps : {\n        objName    : 'answer',\n        actionType : types.UPDATE_ANSWER,\n        isPut      : true,\n        obj        : props.answer, \n        \n      },\n      modalType : 'optionsMenu', \n   };\n   \n   let upvoteBtnProps = {\n      objName     : 'answer',\n      actionType  : types.UPDATE_ANSWER,\n      isPut       : true,\n      obj         : props.answer, \n      objId       : props.answer.id,\n      objIndex    : props.index,\n      apiUrl      : api.updateAnswerApi(props.answer.id),\n      byId        : props.answerById,\n   };\n   \n   let  createCommentProps = {\n      modalProps : {\n        objName           : 'comment',\n        actionType        : types.CREATE_COMMENT,\n        obj               : props.answer,\n        objId             : props.answer.id,\n        isPost            : true,\n        editorPlaceHolder : 'Add Comment...',\n        apiUrl            : api.createAnswerCommentApi(props.answer.id),\n         \n      },\n      modalType : 'editor', \n          \n   };\n\n   let btnsProps = {\n         createCommentProps,\n         upvoteBtnProps,\n         modalOptionsProps,\n         btnStyles:optionsBtnStyles,\n         btnText : <i className=\"material-icons \">more_horiz</i>, \n      }; \n\n   Object.assign(btnsProps, props)\n   let itemsCounter = <Link to={{pathname:pathToUpvoters,state }}>\n                         { props.answer.upvotes }  Upvotes\n                     </Link>;\n\n   let btn1 =  props.answer.has_upvoted? <DownVoteAnswerBtn {...btnsProps}/>\n               : <UpVoteAnswerBtn {...btnsProps}/>\n\n   let btn2 =  <CommentBtn {...btnsProps}/>;\n                         \n              \n   let optionsBtn =  <div>\n                        <OptBtnSmallScreen {...btnsProps}/> \n                        <OptBtnBigScreen {...props}/>\n                     </div>;\n\n   const btnsList   = { \n            itemsCounter : itemsCounter,\n            btn1   : btn1,\n            btn2   : btn2,\n            btn3   : optionsBtn,\n            Styles : Styles\n         };\n\n   const userProps  = {\n              user        : props.answer.created_by,\n              currentUser : props.currentUser,\n            };\n\n   return (\n\n      <div className=\"answer-box\">     \n         <div className=\"user-box\">\n         {props.isProfileBox?\n            \"\"\n            :\n             <UserComponentSmall {...userProps}/>\n         }\n            \n         </div>\n\n         <div className=\"answer\">\n            <Editor\n                  blockRendererFn={pageMediaBlockRenderer}\n                  editorState={editorState}\n                  readOnly={true}\n            />\n         </div>\n            <div>\n               <ButtonsBox {...btnsList}/>   \n               <CommentsBox {...props}/>\n            </div>\n      </div>\n  )       \n};\n\n\n\nexport const AnswerDropDownMenu = props => (\n   <BrowserRouter>\n      <div>\n         <button className=\"btn-sm answer-option options-btn \" id=\"questionMenuButton\"\n              data-toggle=\"dropdown\" aria-haspopup=\"false\" aria-expanded=\"true\" type=\"button\" >\n              <i className=\"material-icons \">more_horiz</i>\n    </button>\n  <div className=\"dropdown-menu\" aria-labelledby=\"questionMenuButton\">\n    <AnswerOptModalBtns {...props} />\n  </div>\n  </div>\n  </BrowserRouter>\n \n)\n\n\n\n\n\n\nexport const PartialAnswerComp = props => {\n\n   let optionsBtnStyles = {\n              fontSize   : '8px',\n              border     : '1px solid red',\n              background : 'white',\n              fontFamily : 'Mukta',\n              fontWeight : 'bold',\n              color      : '#4A4A4A',\n              margin     : '0 0 2px'\n   }\n\n   let upvoteBtnProps  = {\n      upVoteAnswer   : props.props.upVoteAnswer,\n      downVoteAnswer : props.props.downVoteAnswer,\n      answer         : props.answer,\n      index          : props.index, \n   }\n\n   return (\n      <div className=\"answer-box\" >\n         <div className=\"answer\">\n            <p>{ props.answer.add_answer }</p>\n         </div>\n\n         <div className=\"answer-relation\">\n            <div className=\"inline\">\n               <Link to=\"/\" className=\"answer-upvotes\">{ props.answer.upvotes }  Upvotes\n               </Link>\n            </div>\n\n            <div className=\"answer-nav-box\">\n\n               <div className=\"upvote-answer-btn-box\">\n\n                  { props.answer.user_has_upvoted ? \n                    <DownVoteAnswerBtn {...upvoteBtnProps} />\n\n                     :\n                    <UpVoteAnswerBtn {...upvoteBtnProps}/>\n                  }\n                 \n               </div>\n\n               <div className=\"comment-btn-box\">\n                  <CommentBtn {...props }\n                  />\n              \n                </div>\n\n                <div className=\"options-box answer-optios-box\">\n                  <OptBtnSmallScreen {...{\n                                 modalContents : <AnswerModalMenu {...props}/>,\n                                  props     : props,\n                                  answer    : props.answer,\n                                  btnStyles : optionsBtnStyles,\n                                  openOptionsModal : props.props.openOptionsModal,\n                                  btnText: <i className=\"material-icons \">more_horiz</i>, \n                       }\n                      }\n                  />\n\n                  <OptBtnBigScreen {...props}/>\n\n               </div>\n\n            </div>\n\n               \n         </div>\n\n      </div>    \n   )\n}\n\n\n\nexport const AnswerModalMenu = props => (\n   <BrowserRouter>\n    <div className=\"modal-menu \">\n      <ModalCloseBtn/>\n      <AnswerOptModalBtns {...props} />      \n   </div>\n   </BrowserRouter>\n) \n\n\n"]},"metadata":{},"sourceType":"module"}