{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/profile/edit_profile.js\";\nimport React, { Component } from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport { ModalManager } from 'react-dynamic-modal';\nimport { EditProfileNavBar, NavigationBarBigScreen } from \"components/navBar\";\nimport { ModalCloseBtn } from \"components/buttons\";\nimport withMain from 'containers/higher-order-components/main';\nimport * as types from 'actions/types';\nimport * as action from 'actions/actionCreators';\nimport { store } from \"index\";\nimport AjaxLoader from \"components/ajax-loader\";\nimport Helper from 'containers/utils/helpers';\nimport Api from 'api';\nconst api = new Api();\nconst helper = new Helper();\n\nclass EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userProfile: '',\n      profileById: '',\n      form: {\n        profile_picture: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        credential: \"\",\n        live: \"\",\n        favorite_quote: \"\",\n        phone_number: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleImageAdd = this.handleImageAdd.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.location && this.props.location.state) {\n      let byId = this.props.location.state.byId;\n      var userProfile = this.props.entyties.userProfile.byId[byId];\n\n      if (userProfile) {\n        this.populateEditForm(userProfile.user);\n      } else {\n        userProfile = this.props.location.state.userProfile;\n        store.dispatch(action.getUserProfilePending(userProfile.id));\n        store.dispatch(action.getUserProfileSuccess(userProfile));\n        this.populateEditForm(userProfile);\n      }\n\n      this.setState({\n        profileById: byId\n      });\n    }\n  }\n\n  populateEditForm(userProfile) {\n    console.log(userProfile);\n\n    if (userProfile) {\n      let form = this.state.form;\n      let profile = userProfile.profile;\n      let profile_picture = profile.profile_picture,\n          live = profile.live,\n          credential = profile.credential,\n          favorite_quote = profile.favorite_quote;\n      profile_picture = profile_picture ? profile_picture : '';\n      let first_name = userProfile.first_name,\n          last_name = userProfile.last_name;\n      form = {\n        first_name,\n        last_name,\n        profile_picture,\n        live,\n        credential,\n        favorite_quote\n      };\n      this.setState({\n        form\n      });\n    }\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    let form = this.state.form;\n    form[e.target.name] = e.target.value;\n    this.setState({\n      form\n    });\n  }\n\n  handleImageAdd(params) {\n    let form = this.state.form;\n    form['profile_picture'] = params.file;\n    var submitProps = this.submitProps();\n    this.props.submit(submitProps);\n    let byId = this.state.byId;\n    var userProfile = this.props.entyties.userProfile.byId[byId];\n    this.populateEditForm(userProfile);\n  }\n\n  getProps() {\n    let props = {\n      handleChange: this.handleChange,\n      handleImageAdd: this.handleImageAdd,\n      form: this.state.form,\n      textAreaProps: this.textAreaProps(),\n      submitProps: this.submitProps(),\n      userProfile: this.state.userProfile,\n      profileById: this.state.profileById\n    };\n    return Object.assign(props, this.props);\n  }\n\n  textAreaProps() {\n    return {\n      value: this.state.form.favorite_quote,\n      onChange: this.handleChange,\n      name: \"favorite_quote\",\n      className: \"favorite_quote\"\n    };\n  }\n\n  submitProps() {\n    let props = {};\n    let _this$props$location$ = this.props.location.state,\n        userProfile = _this$props$location$.userProfile,\n        byId = _this$props$location$.byId;\n    let form = this.state.form;\n    form.profile_picture = '';\n    props['formData'] = helper.createFormData(form);\n    props['obj'] = userProfile;\n    props['objId'] = userProfile.id;\n    props['byId'] = byId;\n    props['objName'] = 'userProfile';\n    props['isPut'] = true;\n    props['actionType'] = types.UPDATE_USER_PROFILE;\n    props['apiUrl'] = api.updateProfileApi(userProfile.id);\n    return props;\n  }\n\n  render() {\n    let props = this.getProps();\n    console.log(props);\n    var profileById = props.profileById;\n    var userProfile = props.entyties.userProfile.byId[profileById];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(EditProfileNavBar, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(NavigationBarBigScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, userProfile ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, userProfile.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loder-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })) : React.createElement(ProfileEditComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))) : \"\"));\n  }\n\n}\n\n;\nexport default withMain(EditProfile);\n\nconst ProfileEditComponent = props => {\n  console.log(props);\n  const profileById = props.profileById;\n  let userProfile = props.entyties.userProfile.byId[profileById];\n  console.log(userProfile);\n  userProfile = userProfile.user;\n  return React.createElement(\"div\", {\n    className: \"edit-profile-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"edit-img-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-title-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"item-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Photo\")), React.createElement(\"div\", {\n    className: \"item-title-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image-contain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, userProfile.profile.profile_picture ? React.createElement(\"div\", {\n    className: \"edit-image-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"\",\n    className: \"edit-image\",\n    src: userProfile.profile.profile_picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"avatar-image-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"\",\n    src: require(\"images/user-avatar.png\"),\n    className: \"avatar-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  })), React.createElement(EditBtn, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"edit-name-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-title-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-title-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"item-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \" Name\"))), React.createElement(\"div\", {\n    className: \"name-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"user-profile-name\",\n    name: \"first_name\",\n    value: props.form.first_name,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"user-profile-name\",\n    name: \"last_name\",\n    value: props.form.last_name,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"user-locacion-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-title-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-title-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"item-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"Live\"))), React.createElement(\"div\", {\n    className: \"input-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"\",\n    name: \"live\",\n    value: props.form.live,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"user-credential-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-title-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-title-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"item-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, \"Credentials\"))), React.createElement(\"div\", {\n    className: \"input-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"\",\n    name: \"credential\",\n    value: props.form.credential,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"user-favorite-quote-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-title-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-title-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"item-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, \"Quote\"))), React.createElement(\"div\", {\n    className: \"input-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(TextareaAutosize, Object.assign({}, props.textAreaProps, {\n    rows: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  })))));\n};\n\nexport const NavBarTitle = props => React.createElement(\"div\", {\n  className: \"navbar-title-box\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 317\n  },\n  __self: this\n}, React.createElement(\"b\", {\n  className: \"navbar-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 318\n  },\n  __self: this\n}, \"Edit Profile\"));\nexport const EditContents = props => React.createElement(\"div\", {\n  className: \"navbar-title-box\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 325\n  },\n  __self: this\n}, React.createElement(\"b\", {\n  className: \"navbar-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 326\n  },\n  __self: this\n}, \"Edit Profile\"), React.createElement(ModalCloseBtn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 327\n  },\n  __self: this\n}));\nexport class DropImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: '',\n      imagePreviewUrl: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    var reader = new FileReader();\n    var file = event.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  getProps() {\n    let props = {\n      file: this.state.file,\n      userProfile: this.props.userProfile,\n      isImageDrop: true\n    };\n    return props;\n  }\n\n  render() {\n    let props = this.getProps();\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"upload-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"drop-image-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dismiss-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: ModalManager.close,\n      className: \"btn-sm image-drop-dismiss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"dismiss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"\\xD7\"))), this.state.imagePreviewUrl ? React.createElement(\"div\", {\n      className: \"add-image-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.props.handleImageAdd(props),\n      className: \"btn-sm image-add-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"Add\")) : \"\"), this.state.imagePreviewUrl ? React.createElement(\"div\", {\n      className: \"image-preview-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"edit-image-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"image-preview\",\n      alt: \"\",\n      src: this.state.imagePreviewUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }))) : React.createElement(\"form\", {\n      className: \"image-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"fileBox\",\n      id: \"fileContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"file\",\n      accept: \"image/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }), \"Click Here to Upload\"))));\n  }\n\n}\nexport const EditBtn = props => {\n  console.log(props);\n  let modalOptionsProps = {\n    modalProps: {\n      handleImageAdd: props.handleImageAdd\n    },\n    modalType: 'dropImage'\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-sm edit-img-btn \",\n    onClick: () => props.showModal(modalOptionsProps),\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }, \"Change\"));\n}; //const EditBtnSmallScreen = MatchMediaHOC(EditBtn, '(max-width: 500px)');","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/profile/edit_profile.js"],"names":["React","Component","TextareaAutosize","ModalManager","EditProfileNavBar","NavigationBarBigScreen","ModalCloseBtn","withMain","types","action","store","AjaxLoader","Helper","Api","api","helper","EditProfile","constructor","props","state","userProfile","profileById","form","profile_picture","first_name","last_name","credential","live","favorite_quote","phone_number","handleChange","bind","handleImageAdd","componentDidMount","location","byId","entyties","populateEditForm","user","dispatch","getUserProfilePending","id","getUserProfileSuccess","setState","console","log","profile","e","preventDefault","target","name","value","params","file","submitProps","submit","getProps","textAreaProps","Object","assign","onChange","className","createFormData","UPDATE_USER_PROFILE","updateProfileApi","render","isLoading","ProfileEditComponent","require","NavBarTitle","EditContents","DropImage","imagePreviewUrl","event","reader","FileReader","files","onloadend","result","readAsDataURL","isImageDrop","close","EditBtn","modalOptionsProps","modalProps","modalType","showModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport { ModalManager} from 'react-dynamic-modal';\nimport { EditProfileNavBar, NavigationBarBigScreen } from \"components/navBar\";\nimport {  ModalCloseBtn  } from \"components/buttons\";\nimport withMain  from 'containers/higher-order-components/main';\nimport  * as types  from 'actions/types';\nimport  * as action  from 'actions/actionCreators';\nimport {store} from \"index\";\nimport  AjaxLoader from \"components/ajax-loader\";\n\nimport  Helper from 'containers/utils/helpers';\nimport Api from 'api';\n\n\n\nconst api = new Api();\n\nconst helper   = new Helper();  \n\n  \n\n\nclass EditProfile extends Component{\n\n    constructor(props) {\n       super(props);\n\n        this.state = {\n            userProfile  :  '',\n            profileById  :  '',\n\n            form         : {\n               profile_picture  : \"\",\n               first_name       : \"\",\n               last_name        : \"\",\n               credential       : \"\",\n               live             : \"\",\n               favorite_quote   : \"\",\n               phone_number     : \"\",\n           },\n        };\n     \n        this.handleChange   =  this.handleChange.bind(this)\n        this.handleImageAdd =  this.handleImageAdd.bind(this)\n    }; \n   \n\n    componentDidMount() {\n           \n        if ( this.props.location &&  this.props.location.state) {\n            let { byId } = this.props.location.state;\n            var userProfile = this.props.entyties.userProfile.byId[byId]\n\n            if (userProfile) {\n                this.populateEditForm(userProfile.user);\n\n            }\n\n            else {\n                userProfile  = this.props.location.state.userProfile;\n              \n                store.dispatch(action.getUserProfilePending(userProfile.id));\n                store.dispatch(action.getUserProfileSuccess(userProfile));  \n\n                this.populateEditForm(userProfile);\n            }\n\n            \n            this.setState({profileById : byId });\n        }\n    };\n\n    populateEditForm(userProfile ){\n        console.log(userProfile)\n\n        if (userProfile) {\n            let form        =  this.state.form;\n            let profile     = userProfile.profile;\n\n            let {profile_picture,live,credential,favorite_quote} = profile \n\n            profile_picture = profile_picture?profile_picture:'';\n\n            let {first_name,last_name} = userProfile\n       \n            form    = {first_name,last_name,profile_picture,live,credential,favorite_quote};\n            \n            this.setState({ form });\n        }\n    }\n\n    \n   \n    handleChange(e){\n      e.preventDefault()\n      let form = this.state.form;\n      form[e.target.name] = e.target.value;\n      this.setState({form})\n    }\n\n    handleImageAdd(params){\n\n        let form = this.state.form;\n        form['profile_picture'] = params.file;\n        var submitProps = this.submitProps();\n        this.props.submit(submitProps);\n\n        let { byId } = this.state;\n        var userProfile = this.props.entyties.userProfile.byId[byId];\n\n        this.populateEditForm(userProfile);\n\n    };\n\n\n    getProps(){\n        let props = {\n           handleChange   : this.handleChange, \n           handleImageAdd : this.handleImageAdd,\n           form           : this.state.form,\n           textAreaProps  : this.textAreaProps(),\n           submitProps    : this.submitProps(),\n           userProfile    : this.state.userProfile,\n           profileById    : this.state.profileById,\n        }\n\n        return Object.assign(props, this.props);\n    }\n \n    textAreaProps() {\n        return {\n           value     : this.state.form.favorite_quote,\n           onChange  : this.handleChange,\n           name      : \"favorite_quote\",\n           className : \"favorite_quote\"\n        };\n    };\n\n\n    submitProps() {\n       \n        let props = {};\n        let { userProfile, byId } = this.props.location.state;\n        let form = this.state.form;\n        form.profile_picture = '';\n       \n        props['formData']  = helper.createFormData(form);\n   \n        props['obj']       =   userProfile;\n        props['objId']     =   userProfile.id;\n        props['byId']      =   byId;\n        props['objName']   =  'userProfile';\n        props['isPut']     =   true;\n        props['actionType'] =  types.UPDATE_USER_PROFILE;\n        props['apiUrl']    =   api.updateProfileApi(userProfile.id);\n\n        return props;\n    }\n\n    render() {\n      let props = this.getProps();\n      console.log(props)\n      var profileById = props.profileById;\n      var userProfile = props.entyties.userProfile.byId[profileById]\n\n      return (\n        <div>\n            <EditProfileNavBar {...props}/>\n            <NavigationBarBigScreen {...props} />\n            <div>\n                { userProfile?\n                    <div>\n                       { userProfile.isLoading?\n                            <div className=\"page-spin-loder-box\">\n                               <AjaxLoader/>\n                            </div>\n                            : \n                           <ProfileEditComponent {...props}/>\n                        }\n                    </div>\n\n                    :\n                    \"\"    \n                }           \n            </div>\n                   \n        </div>\n      );\n   };\n};\n\n\n    \n\n\nexport default withMain(EditProfile);\n\nconst ProfileEditComponent = props => {\n    console.log(props)\n    const profileById = props.profileById; \n    let userProfile = props.entyties.userProfile.byId[profileById];\n    console.log(userProfile)\n    userProfile = userProfile.user;\n\n    return(\n\n        <div  className=\"edit-profile-container\" >\n      \n         <div className=\"edit-img-container\">\n            <div className=\"item-title-box\">\n               <b className=\"item-title\">Photo</b>\n            </div>\n\n            <div className=\"item-title-container\">\n               <div className=\"image-contain\">\n                  { userProfile.profile.profile_picture?\n                     <div className=\"edit-image-box\">\n                        <img alt=\"\" className=\"edit-image\" src={ userProfile.profile.profile_picture }/>\n                     </div>\n                     :\n                     <div className=\"avatar-image-box\">\n                        <img alt=\"\" src={require(\"images/user-avatar.png\")} className=\"avatar-image\"/> \n                     </div> \n                  }\n                \n               <EditBtn {...props}/>\n               </div>\n               \n            </div>\n\n         </div>   \n\n            \n         <div className=\"edit-name-box\">\n            <div className=\"item-title-container\">\n               <div className=\"item-title-box\">\n                 <b className=\"item-title\"> Name</b>\n               </div>\n            </div>\n\n            <div className=\"name-box\">\n               <input\n                  type=\"text\" \n                  className=\"user-profile-name\"\n                  name=\"first_name\"\n                  value={props.form.first_name}\n                  onChange={props.handleChange}\n               />\n\n               <input\n                  type=\"text\" \n                  className=\"user-profile-name\"\n                  name=\"last_name\"\n                  value={props.form.last_name}\n                  onChange={props.handleChange}\n               />\n            </div>\n\n         </div>\n\n      \n         <div className=\"user-locacion-box\">\n            <div className=\"item-title-container\">\n               <div className=\"item-title-box\">\n                 <b className=\"item-title\">Live</b>\n               </div>\n       \n            </div>\n            <div className=\"input-box\">\n               <input\n                 type=\"text\" \n                 className=\"\"\n                 name=\"live\"\n                 value={props.form.live}\n                 onChange={props.handleChange}\n               />\n            </div>        \n         </div>\n      \n         <div className=\"user-credential-box\">\n            <div className=\"item-title-container\">\n               <div className=\"item-title-box\">\n                  <b className=\"item-title\">Credentials</b>\n               </div>\n            </div>\n            <div className=\"input-box\">\n            <input\n               type=\"text\" \n               className=\"\"\n               name=\"credential\"\n               value={props.form.credential}\n               onChange={props.handleChange}\n            />\n          </div>\n         </div>\n\n      \n         <div className=\"user-favorite-quote-box\">\n            <div className=\"item-title-container\">\n               <div className=\"item-title-box\">\n                  <b className=\"item-title\">Quote</b>\n               </div>\n            </div>\n\n            <div className=\"input-box\">\n               <TextareaAutosize {...props.textAreaProps}  rows={3}/>  \n            </div>   \n         </div>\n    \n        </div>\n    );\n};\n\n\nexport const NavBarTitle = props  => (\n  <div className=\"navbar-title-box\">\n   <b className=\"navbar-title\">Edit Profile</b>  \n  </div>    \n)\n\n\n\nexport const EditContents = props  => (\n  <div className=\"navbar-title-box\">\n   <b className=\"navbar-title\">Edit Profile</b>  \n   <ModalCloseBtn/>\n  </div>    \n)\n\n\n\n\nexport class DropImage extends React.Component {\n \n   constructor(props) {\n      super(props);\n      this.state = {\n         file: '',\n         imagePreviewUrl: ''\n      };\n\n      this.handleChange = this.handleChange.bind(this);\n\n   }\n \n  \n    \n   handleChange(event) {\n      event.preventDefault();\n      var reader = new FileReader();\n      var file = event.target.files[0];\n\n      reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    }\n\n    reader.readAsDataURL(file)\n  \n    }\n\n\n   getProps() {\n   \n      let props = {\n        file         : this.state.file,\n        userProfile  : this.props.userProfile,\n        isImageDrop  : true,\n                           \n      };\n\n      return props;\n    }\n    \n    render() {\n      let props = this.getProps();\n      console.log(this.props)\n      return (\n         <div>\n            \n               <div className=\"upload-preview\">\n                  <div className=\"drop-image-btns\">\n                     <div className=\"dismiss-box\">\n                     <button  type=\"button\" onClick={ModalManager.close} className=\"btn-sm image-drop-dismiss\">\n                        <span className=\"dismiss\">&times;</span>\n                     </button>\n                     </div>\n\n                  \n                  { this.state.imagePreviewUrl?\n                     <div className=\"add-image-box\">\n                     <button  type=\"button\" onClick={()=>this.props.handleImageAdd(props)} className=\"btn-sm image-add-btn\">\n                       Add\n                     </button>\n                     </div>\n                     :\n                     \"\"\n                  }\n                  </div>\n\n                  { this.state.imagePreviewUrl?\n                     <div className=\"image-preview-box\">\n                        <div className=\"edit-image-box\">\n                            <img className=\"image-preview\" alt=\"\" src={this.state.imagePreviewUrl} />\n                        </div>\n                     </div>\n                     :\n                     <form className=\"image-form\">\n                        <label className=\"fileBox\" id=\"fileContainer\">\n                           <input onChange={this.handleChange} type=\"file\" accept=\"image/*\" />\n                              Click Here to Upload\n                       </label>\n                     </form>\n\n                  }\n\n               </div>\n         </div>  \n      );\n    }\n}\n\n\nexport const EditBtn = props => {\n    console.log(props)\n  \n    let  modalOptionsProps = {\n            modalProps : {handleImageAdd:props.handleImageAdd},\n            modalType : 'dropImage'\n        };\n\n    \n\n    return(\n       <div>\n           <button className=\"btn-sm edit-img-btn \"  onClick={() => props.showModal(modalOptionsProps)} type=\"button\" >\n               Change\n           </button>\n       </div>\n    );\n};\n\n\n//const EditBtnSmallScreen = MatchMediaHOC(EditBtn, '(max-width: 500px)');\n"]},"metadata":{},"sourceType":"module"}