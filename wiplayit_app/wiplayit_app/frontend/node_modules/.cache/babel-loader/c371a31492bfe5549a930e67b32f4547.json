{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/index/index_page.js\";\nimport React, { Component } from 'react';\nimport * as action from 'actions/actionCreators';\nimport { Link } from \"react-router-dom\";\nimport { NavigationBarSmallScreen, NavigationBarBigScreen } from \"components/navBar\";\nimport { store } from \"index\"; //import AnswersBox from \"containers/answer/answer_page\";\n\nimport { QuestionComponent } from \"components/question_components\";\nimport AjaxLoader from \"components/ajax-loader\";\nimport withHigherOrderIndexBox from \"containers/index/higher_order_index\";\n\nclass IndexBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHomeBox: true,\n      questionListById: 'filteredQuestions'\n    };\n  }\n\n  // static getDerivedStateFromError(error) {\n  // Update state so the next render will show the fallback UI.\n  //  return  dispatch => action.handleError(error);\n  // }\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidUpdate(nextProps, prevState) {//console.log(nextProps, this.props)\n  }\n\n  componentDidMount() {\n    let questionList = localStorage.getItem('questionList');\n    questionList = JSON.parse(questionList);\n    var questionListById = this.state.questionListById;\n\n    if (questionList) {\n      store.dispatch(action.getQuestionListPending(questionListById));\n      store.dispatch(action.getQuestionListSuccess(questionListById, questionList));\n    } else {\n      this.props.getIndex();\n    }\n  }\n\n  getProps() {\n    let props = {\n      isHomeBox: this.state.isHomeBox,\n      questionListById: this.state.questionListById\n    };\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    console.log(props);\n    var index = props.entyties.index;\n    return React.createElement(\"div\", {\n      className: \"home-page\",\n      id: \"home-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(NavigationBarBigScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(NavigationBarSmallScreen, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), index ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, index.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loder-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Questions, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })))) : \"\");\n  }\n\n}\n\n;\nexport default withHigherOrderIndexBox(IndexBox);\nexport const Questions = props => {\n  var index = props.entyties.index;\n  let questions = index.questions;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, questions && questions.length ? React.createElement(\"div\", {\n    className: \"home-page-contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, questions.map((question, index) => {\n    let contentsProps = {\n      question,\n      index\n    };\n\n    if (question.answer) {} else {\n      contentsProps['isHomeBox'] = props.isHomeBox;\n    }\n\n    Object.assign(contentsProps, props);\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(QuestionComponent, Object.assign({}, contentsProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })));\n  })) : \"\");\n};\n\nconst HomePageContents = props => {\n  console.log(props);\n  let state = {\n    currentUser: props.currentUser,\n    questionObj: props.questionObj\n  };\n  let questionPath = \"/question/\".concat(props.questionObj.slug, \"/\");\n  return React.createElement(\"div\", {\n    className: \"question-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question-home-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question-home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: questionPath,\n      state: state\n    },\n    className: \"question-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, props.questionObj.add_question)))));\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/index/index_page.js"],"names":["React","Component","action","Link","NavigationBarSmallScreen","NavigationBarBigScreen","store","QuestionComponent","AjaxLoader","withHigherOrderIndexBox","IndexBox","constructor","props","state","isHomeBox","questionListById","componentDidCatch","error","info","console","log","componentDidUpdate","nextProps","prevState","componentDidMount","questionList","localStorage","getItem","JSON","parse","dispatch","getQuestionListPending","getQuestionListSuccess","getIndex","getProps","Object","assign","render","index","entyties","isLoading","Questions","questions","length","map","question","contentsProps","answer","HomePageContents","currentUser","questionObj","questionPath","slug","pathname","add_question"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  * as action  from 'actions/actionCreators';\nimport { Link } from \"react-router-dom\";\n\nimport {NavigationBarSmallScreen,NavigationBarBigScreen } from \"components/navBar\";\nimport {store} from \"index\";\n//import AnswersBox from \"containers/answer/answer_page\";\nimport { QuestionComponent} from \"components/question_components\"\nimport  AjaxLoader from \"components/ajax-loader\";\n\nimport withHigherOrderIndexBox from \"containers/index/higher_order_index\";\n\n\n\n\nclass IndexBox extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isHomeBox        : true,\n            questionListById : 'filteredQuestions',\n        } \n    };\n  \n\n    // static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    //  return  dispatch => action.handleError(error);\n    // }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        console.log(error, info);\n    }\n\n\n    componentDidUpdate(nextProps, prevState) {\n      //console.log(nextProps, this.props)\n    };\n\n         \n   \n    componentDidMount() {\n        let questionList  = localStorage.getItem('questionList');\n        questionList = JSON.parse(questionList)\n        var questionListById = this.state.questionListById;\n        \n        if (questionList) {\n            store.dispatch(action.getQuestionListPending(questionListById));\n            store.dispatch(action.getQuestionListSuccess(questionListById, questionList));\n        }\n        else{\n            this.props.getIndex();                           \n        }\n    };\n\n\n    getProps(){\n        let props = {\n            isHomeBox        : this.state.isHomeBox,\n            questionListById : this.state.questionListById,\n        };\n      \n        return Object.assign(props, this.props );  \n    };\n\n      \n    render() {\n        let props = this.getProps()\n        console.log(props)\n        var index  = props.entyties.index;\n        \n              \n        return (\n\n            <div className=\"home-page\" id=\"home-page\">\n\n                <NavigationBarBigScreen {...props}/>\n                <NavigationBarSmallScreen {...props}/>\n\n                { index?\n\n                    <div>\n                        { index.isLoading?\n\n                            <div  className=\"page-spin-loder-box\">\n                                <AjaxLoader/>\n                            </div>\n\n                            :\n\n                            <div>\n                                <Questions {...props}/> \n                            </div>\n                        }\n\n                    </div>\n\n                    :\n                    \"\"\n                }\n            </div>\n        );\n    };\n};\n\n\n\n\n\nexport default  withHigherOrderIndexBox(IndexBox);\n\n\n\n\n\nexport const Questions = props => {\n   var index  = props.entyties.index;\n   let questions      = index.questions\n  \n   return (\n\n      <div>\n         { questions && questions.length?\n         <div className=\"home-page-contents\">\n\n            { questions.map((question, index) => {\n               let contentsProps = {question, index};\n                            \n               if (question.answer) {\n                  \n               }else{\n                  contentsProps['isHomeBox'] = props.isHomeBox;\n                  \n               }\n\n               Object.assign(contentsProps, props)  \n\n               return (\n\n                  <div key={index} >\n                     <QuestionComponent {...contentsProps}  />\n                  </div>\n               )\n            }\n            )}\n         </div>\n         :\n         \"\"\n\n      }\n       \n      </div>\n   );\n};\n\n\n\n\nconst HomePageContents = props => {\n  console.log(props)\n   let state = {\n      currentUser  : props.currentUser, \n      questionObj  : props.questionObj,\n      };\n\n   let questionPath = `/question/${props.questionObj.slug}/`;\n\n   return (\n      <div className=\"question-content\">\n         <div className=\"question-home-box\">\n            <div className=\"question-home\">  \n               <b className=\"\">\n                  <Link to={{pathname: questionPath, state:state }} className=\"question-link\">\n                     { props.questionObj.add_question }\n                  </Link>\n               </b>\n            </div>\n\n            \n         </div>\n      </div>  \n   );\n\n}; \n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}