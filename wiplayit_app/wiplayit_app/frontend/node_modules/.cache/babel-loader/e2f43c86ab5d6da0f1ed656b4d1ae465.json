{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ModalManager = exports.Modal = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _lodash = require('lodash.assign');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar prefix = require('react-prefixr');\n\nvar defaultStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 99999999,\n    overflow: 'hidden',\n    perspective: 1300,\n    backgroundColor: 'rgba(0, 0, 0, 0.3)'\n  },\n  content: {\n    position: 'relative',\n    margin: '15% auto',\n    width: '60%',\n    border: '1px solid rgba(0, 0, 0, .2)',\n    background: '#fff',\n    overflow: 'auto',\n    borderRadius: '4px',\n    outline: 'none',\n    boxShadow: '0 5px 10px rgba(0, 0, 0, .3)'\n  }\n};\nvar defaultTransition = {\n  property: 'all',\n  duration: 300,\n  timingfunction: 'linear'\n};\n\nvar stopPropagation = function stopPropagation(e) {\n  return e.stopPropagation();\n};\n\nvar onClose = void 0;\n\nvar Modal = exports.Modal = function (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal(props) {\n    _classCallCheck(this, Modal);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Modal).call(this, props));\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: 'close',\n    value: function close() {\n      if (!this.props.onRequestClose || this.props.onRequestClose()) {\n        ModalManager.close();\n      }\n    }\n  }, {\n    key: 'handleKeyDown',\n    value: function handleKeyDown(event) {\n      if (event.keyCode == 27\n      /*esc*/\n      ) this.close();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var transitionTimeMS = this.getTransitionDuration();\n      setTimeout(function () {\n        return _this2.setState({\n          open: true\n        });\n      }, 0);\n\n      onClose = function onClose(callback) {\n        _this2.setState({\n          open: false\n        }, function () {\n          _this2.closeTimer = setTimeout(callback, transitionTimeMS);\n        });\n      };\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      onClose = null;\n      clearTimeout(this.closeTimer);\n    }\n  }, {\n    key: 'getTransitionDuration',\n    value: function getTransitionDuration() {\n      var effect = this.props.effect;\n\n      if (!effect.transition) {\n        return defaultTransition.duration;\n      }\n\n      return effect.transition.duration || defaultTransition.duration;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props;\n      var style = _props.style;\n      var effect = _props.effect;\n      var open = this.state.open;\n      var transition = effect.transition;\n\n      if (!transition) {\n        transition = defaultTransition;\n      } else {\n        transition = (0, _lodash2.default)({}, defaultTransition, transition);\n      }\n\n      var transition_style = {\n        'transition': transition.property + ' ' + transition.duration / 1000 + 's' + ' ' + transition.timingfunction\n      };\n      return _react2.default.createElement('div', {\n        ref: 'overlay',\n        style: prefix((0, _lodash2.default)({}, defaultStyles.overlay, style ? style.overlay ? style.overlay : {} : {}, {\n          transition: 'opacity ' + transition.duration / 1000 + 's' + ' linear',\n          opacity: open ? 1 : 0\n        })),\n        onClick: this.close.bind(this)\n      }, _react2.default.createElement('div', {\n        ref: 'content',\n        style: prefix((0, _lodash2.default)({}, defaultStyles.content, style ? style.content ? style.content : {} : {}, transition_style, open ? effect.end : effect.begin)),\n        onClick: stopPropagation,\n        onKeyDown: this.handleKeyDown.bind(this)\n      }, this.props.children));\n    }\n  }]);\n\n  return Modal;\n}(_react.Component);\n\nvar node;\nvar modals = [];\n\nvar renderModal = function renderModal() {\n  if (modals.length == 0) return;\n  var component = modals.shift();\n\n  if (!node) {\n    node = document.createElement('div');\n    document.body.appendChild(node);\n  }\n\n  _reactDom2.default.render(component, node);\n};\n\nvar ModalManager = exports.ModalManager = {\n  open: function open(component) {\n    modals.push(component);\n\n    if (modals.length == 1) {\n      // render the modal only if there is no other showing modals\n      renderModal();\n    }\n  },\n  close: function close() {\n    onClose && onClose(function () {\n      _reactDom2.default.unmountComponentAtNode(node);\n\n      renderModal(); // render the other modals which are waiting.\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}