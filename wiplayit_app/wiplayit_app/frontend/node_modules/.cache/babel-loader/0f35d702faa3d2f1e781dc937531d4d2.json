{"ast":null,"code":"import { convertToRaw } from 'draft-js';\nexport default class Helper {\n  downVote(self, context) {\n    let upvotes = context.obj.upvotes - 1;\n    var formData = this.createFormData({\n      upvotes\n    });\n    return formData;\n  }\n\n  upVote(self, context) {\n    let upvotes = context.obj.upvotes + 1;\n    context['formData'] = this.createFormData({\n      upvotes\n    });\n    return this.sendRequest(self, context);\n  }\n\n  unFollow(self, context) {\n    let followers = context.obj.followers - 1;\n    context['formData'] = this.createFormData({\n      followers\n    });\n    this.sendRequest(self, context);\n  }\n\n  follow(self, context) {\n    let followers = context.obj.followers + 1;\n    context['formData'] = this.createFormData({\n      followers\n    });\n    this.sendRequest(self, context);\n  }\n\n  updateReducerListEntynties(listItems, obj) {\n    listItems.map((item, index) => {\n      if (item.id === obj.id) {\n        Object.assign(listItems[index], obj);\n      }\n\n      return listItems;\n    });\n    return listItems;\n  }\n\n  createFormData(data) {\n    var formData = new FormData();\n\n    for (var key in data) {\n      console.log(key, data[key]);\n      formData.append(key, data[key]);\n    }\n\n    return formData;\n  }\n\n  blockText(form) {\n    let blocks = form.blocks;\n    let blockText = \"\";\n\n    for (var i = blocks.length - 1; i >= 0; i--) {\n      console.log(blocks[i].text);\n      let text = blocks[i].text;\n\n      if (!/^ *$/.test(text)) {\n        console.log(text);\n        blockText = text;\n      } else {\n        console.log(blocks[i].text);\n        blockText = \"\";\n      }\n    }\n\n    return blockText;\n  }\n\n  validateForm(params) {\n    let validatedForm = {};\n    console.log(params.form);\n\n    if (params.editorContents) {\n      let form = convertToRaw(params.editorContents);\n      let entityMap = Object.keys(form.entityMap);\n      let blockText = this.blockText(form);\n\n      if (blockText !== \"\" || entityMap.length) {\n        validatedForm = {\n          data: JSON.stringify(form),\n          formIsValid: true\n        };\n      } else {\n        validatedForm = {\n          formHasErrors: true,\n          formIsValid: false,\n          errors: \"Form is Empty\"\n        };\n      }\n    } else if (params.form) {\n      let textarea = params.form.textarea;\n\n      if (/^ *$/.test(textarea)) {\n        //If textarea field is empty? Return form errors\n        validatedForm = {\n          formHasErrors: true,\n          formIsValid: false,\n          errors: \"Form is Empty\"\n        };\n      } else {\n        validatedForm = {\n          data: params.form.textarea,\n          formIsValid: true,\n          formHasErrors: false\n        };\n      }\n    }\n\n    return validatedForm;\n  }\n\n}\n;","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/utils/helpers.js"],"names":["convertToRaw","Helper","downVote","self","context","upvotes","obj","formData","createFormData","upVote","sendRequest","unFollow","followers","follow","updateReducerListEntynties","listItems","map","item","index","id","Object","assign","data","FormData","key","console","log","append","blockText","form","blocks","i","length","text","test","validateForm","params","validatedForm","editorContents","entityMap","keys","JSON","stringify","formIsValid","formHasErrors","errors","textarea"],"mappings":"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","sourcesContent":["\nimport {convertToRaw} from 'draft-js';\n\n\n\nexport default class Helper {\n\n   downVote(self,context ) {\n      let upvotes     =   context.obj.upvotes  - 1;\n      var formData    =   this.createFormData({upvotes});\n      return formData;\n   }\n\n\n   upVote(self , context ) {\n      let upvotes         =   context.obj.upvotes + 1;\n      context['formData'] =  this.createFormData({upvotes});\n      return this.sendRequest(self, context);\n   }\n\n\n   unFollow(self, context) {\n      let followers       =  context.obj.followers - 1;\n      context['formData'] =  this.createFormData({followers});\n      this.sendRequest(self, context); \n   }\n\n\n   follow(self,context) {\n      let followers = context.obj.followers + 1;\n      context['formData'] =  this.createFormData({followers});\n      this.sendRequest(self, context); \n   }\n\n\n\n   updateReducerListEntynties(listItems, obj) {\n      \n      listItems.map(( item, index) => {\n         if (item.id  === obj.id) {\n            Object.assign(listItems[index], obj)\n         }\n\n         return listItems;\n      });\n\n      return listItems;\n   }\n      \n   createFormData(data ) {\n      var formData    =   new FormData();\n      \n      for (var key in data){\n         console.log(key, data[key])\n         formData.append(key, data[key]);\n      }\n\n      return formData;\n   }\n\n   blockText(form) {\n      let blocks    =  form.blocks;\n      let blockText     =  \"\";          \n      for (var i = blocks.length - 1; i >= 0; i--) {\n         console.log(blocks[i].text)\n         let text = blocks[i].text;\n         if (! /^ *$/.test(text)) {\n                  console.log(text)\n                  blockText = text;  \n         } else{\n            console.log(blocks[i].text)\n            blockText = \"\";\n         }\n      }\n      return blockText;\n   };\n\n   validateForm(params){\n      let validatedForm = {};\n      console.log(params.form)\n      if (params.editorContents) {\n         let form      = convertToRaw(params.editorContents);\n         let entityMap = Object.keys(form.entityMap);\n         let blockText =   this.blockText(form);\n                  \n         if (blockText !== \"\" || entityMap.length) {\n            validatedForm = {data: JSON.stringify(form),formIsValid : true,}\n         }\n         else{\n            validatedForm = {\n               formHasErrors : true,\n               formIsValid   : false,\n               errors        : \"Form is Empty\",\n            }\n         } \n      }\n      else if(params.form){\n         let textarea = params.form.textarea;\n         if (/^ *$/.test(textarea)) {\n            //If textarea field is empty? Return form errors\n            validatedForm = {\n               formHasErrors : true,\n               formIsValid   : false,\n               errors        : \"Form is Empty\",\n            }\n         }\n         else{\n            validatedForm = {\n               data          : params.form.textarea,\n               formIsValid   : true,\n               formHasErrors : false\n            }\n         }\n      }\n\n      return validatedForm; \n   }\n\n  \n};\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}