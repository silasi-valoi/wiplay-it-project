{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_children_page.js\";\nimport React, { Component } from 'react';\nimport AjaxLoader from \"components/ajax-loader\";\nimport { ReplyChildernComponent, ChildRepliesLink } from \"components/reply_components\";\nimport * as action from 'actions/actionCreators';\nimport { store } from \"index\";\n\nclass ReplyChildrenBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReplyChildBox: true,\n      byId: ''\n    };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidMount() {\n    var reply = this.props.reply;\n\n    if (reply) {\n      var byId = \"replyChild\".concat(reply.id);\n      this.setState({\n        byId\n      });\n      var props = {\n        actionType: 'GET_REPLY_CHILD_LINK_DATA',\n        reply,\n        byId\n      };\n      store.dispatch(action.getReplyChildLindData(props));\n    }\n  }\n\n  componentDidUpdate(nextProps, prevState) {}\n\n  getProps() {\n    let props = {\n      isReplyChildBox: this.state.isReplyChildBox,\n      childParent: this.props.reply,\n      replyChildrenById: this.state.byId\n    };\n    return Object.assign(props, this.props.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    var replies = props.entyties.replies;\n    replies = replies.byId[props.replyChildrenById];\n    console.log(replies);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, replies ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, replies.showLink ? React.createElement(ChildRepliesLink, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, replies.isLoading ? React.createElement(\"div\", {\n      className: \"spin-loader-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(ReplyChildernComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))))) : \"\");\n  }\n\n}\n\n;\nexport default ReplyChildrenBox;","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_children_page.js"],"names":["React","Component","AjaxLoader","ReplyChildernComponent","ChildRepliesLink","action","store","ReplyChildrenBox","constructor","props","state","isReplyChildBox","byId","componentDidCatch","error","info","console","log","componentDidMount","reply","id","setState","actionType","dispatch","getReplyChildLindData","componentDidUpdate","nextProps","prevState","getProps","childParent","replyChildrenById","Object","assign","render","replies","entyties","showLink","isLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAQC,UAAR,MAAwB,wBAAxB;AACA,SAAQC,sBAAR,EAA+BC,gBAA/B,QAAuD,6BAAvD;AACA,OAAQ,KAAKC,MAAb,MAA0B,wBAA1B;AACA,SAAQC,KAAR,QAAoB,OAApB;;AAKA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AAEvCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACVC,MAAAA,eAAe,EAAG,IADR;AAEVC,MAAAA,IAAI,EAAc;AAFR,KAAb;AAIF;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,IAAR,EAAc;AAC9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,IAAnB;AACD;;AAEAG,EAAAA,iBAAiB,GAAG;AACjB,QAAIC,KAAK,GAAG,KAAKV,KAAL,CAAWU,KAAvB;;AAEA,QAAIA,KAAJ,EAAW;AACR,UAAIP,IAAI,uBAAgBO,KAAK,CAACC,EAAtB,CAAR;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA;AAAD,OAAd;AACA,UAAIH,KAAK,GAAG;AACTa,QAAAA,UAAU,EAAG,2BADJ;AAETH,QAAAA,KAFS;AAGTP,QAAAA;AAHS,OAAZ;AAKAN,MAAAA,KAAK,CAACiB,QAAN,CAAelB,MAAM,CAACmB,qBAAP,CAA6Bf,KAA7B,CAAf;AACF;AAEH;;AAEDgB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAExC;;AAEDC,EAAAA,QAAQ,GAAG;AACR,QAAInB,KAAK,GAAG;AACTE,MAAAA,eAAe,EAAO,KAAKD,KAAL,CAAWC,eADxB;AAETkB,MAAAA,WAAW,EAAU,KAAKpB,KAAL,CAAWU,KAFvB;AAGTW,MAAAA,iBAAiB,EAAI,KAAKpB,KAAL,CAAWE;AAHvB,KAAZ;AAKA,WAAOmB,MAAM,CAACC,MAAP,CAAcvB,KAAd,EAAqB,KAAKA,KAAL,CAAWA,KAAhC,CAAP;AACF;;AAIDwB,EAAAA,MAAM,GAAG;AACN,QAAIxB,KAAK,GAAQ,KAAKmB,QAAL,EAAjB;AACA,QAAIM,OAAO,GAAQzB,KAAK,CAAC0B,QAAN,CAAeD,OAAlC;AACAA,IAAAA,OAAO,GAAWA,OAAO,CAACtB,IAAR,CAAaH,KAAK,CAACqB,iBAAnB,CAAlB;AACCd,IAAAA,OAAO,CAACC,GAAR,CAAYiB,OAAZ;AACD,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,OAAO,CAACE,QAAR,GACC,oBAAC,gBAAD,oBAAsB3B,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKyB,OAAO,CAACG,SAAR,GACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,sBAAD,oBAA4B5B,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADH,CANN,CAJN,CADK,GAmBL,EApBH,CADH;AAyBF;;AA7EqC;;AA8ExC;AAGD,eAAeF,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport  AjaxLoader from \"components/ajax-loader\";\nimport {ReplyChildernComponent,ChildRepliesLink } from \"components/reply_components\";\nimport  * as action  from 'actions/actionCreators';\nimport {store} from \"index\";\n\n\n\n\nclass ReplyChildrenBox extends Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n         isReplyChildBox : true,\n         byId            : '',\n      };\n   };\n\n   componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n   componentDidMount() {\n      var reply = this.props.reply; \n      \n      if (reply) {\n         var byId = `replyChild${reply.id}`\n         this.setState({byId});\n         var props = {\n            actionType : 'GET_REPLY_CHILD_LINK_DATA',\n            reply,\n            byId,\n         }\n         store.dispatch(action.getReplyChildLindData(props)); \n      }\n     \n   };\n   \n   componentDidUpdate(nextProps, prevState) {\n      \n   }; \n  \n   getProps() {\n      let props = {\n         isReplyChildBox     : this.state.isReplyChildBox,\n         childParent        : this.props.reply,\n         replyChildrenById  : this.state.byId,\n      } \n      return Object.assign(props, this.props.props);\n   };\n\n\n\n   render() { \n      let props      = this.getProps();\n      var replies    =   props.entyties.replies;\n      replies        =  replies.byId[props.replyChildrenById];\n       console.log(replies)         \n      return (\n         <div>\n         {replies?\n            <div>\n               { replies.showLink?\n                  <ChildRepliesLink {...props}/>\n                  :\n                  <div>\n                     { replies.isLoading?\n                        <div className=\"spin-loader-box\">\n                           <AjaxLoader/>\n                        </div>\n                     :\n                        <div>\n                           <ReplyChildernComponent {...props}/>\n                        </div>\n                     }\n                  </div>\n               }\n            </div>\n            :\n            \"\"\n         }\n         </div>\n      );\n   };\n};\n\n\nexport default ReplyChildrenBox;\n\n\n\n"]},"metadata":{},"sourceType":"module"}