{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/users/user_list_page.js\";\nimport React, { Component } from 'react';\nimport withMain from 'containers/higher-order-components/main';\nimport { UserList } from \"components/profile_components\";\nimport { PartalNavigationBar } from \"components/navBar\";\nimport AjaxLoader from \"components/ajax-loader\";\nimport * as action from 'actions/actionCreators';\nimport { store } from \"index\";\nimport Api from 'api';\nconst api = new Api();\n\nclass UserListBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersById: \"allUsersList\",\n      pageName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    var usersById = \"\";\n    let pageName = 'Upvoters';\n    var apiUrl = '';\n    let state = this.props.location.state;\n    let usersProps = {};\n    usersProps['pageName'] = 'Upvoters';\n    usersProps['apiUrl'] = api.getUserListApi();\n    usersProps['usersById'] = this.state.usersById;\n    console.log(state);\n\n    switch (state) {\n      case state.userProfile:\n        usersProps = this.prepareUserFollowersProps(usersProps);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      case state.question:\n        usersProps = this.prepareQuestionFollowersProps(usersProps);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      case state.post:\n        usersProps = this.preparePostUpVotersProps(usersProps);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      case state.answer:\n        usersProps = this.prepareAnswerUpVotersProps(usersProps);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      case state.comment:\n        usersProps = this.prepareCommentUpVotersProps(state);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      case state.reply:\n        usersProps = this.prepareUserFollowersProps(state);\n        this.updateLocalstate(usersProps);\n        return this.props.getUserList(usersProps);\n\n      default:\n        state['pageName'] = 'users';\n        alert('hi');\n        this.updateLocalstate(state);\n        return this.props.getUserList(state);\n    }\n  }\n\n  updateLocalstate(state) {\n    this.setState(state);\n  }\n\n  prepareUserFollowersProps(params) {\n    var userProfile = params.userProfile,\n        isUserFollowers = params.isUserFollowers,\n        isUserFollowings = params.isUserFollowings,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl,\n        pageName = params.pageName;\n\n    if (isUserFollowers) {\n      pageName = 'Followers';\n      usersById = \"userProfileFollowers\".concat(userProfile.id);\n      apiUrl = api.getUserFollowersListApi(userProfile.id);\n    } else {\n      pageName = 'Followings';\n      usersById = \"answerReplyUpVoters\".concat(userProfile.id);\n      apiUrl = api.getUserFollowingsListApi(userProfile.id);\n    }\n\n    return {\n      usersById,\n      apiUrl,\n      pageName\n    };\n  }\n\n  prepareQuestionFollowersProps(params) {\n    var question = params.question,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl,\n        pageName = params.pageName;\n    var pageName = 'Followers';\n    usersById = \"questionFollowers\".concat(question.id);\n    apiUrl = api.getQuestionFollowersListApi(question.id);\n    return {\n      usersById,\n      apiUrl,\n      pageName\n    };\n  }\n\n  preparePostUpVotersProps(params) {\n    var post = params.post,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n    usersById = \"postUpVoters\".concat(post.id);\n    apiUrl = api.getPostUpVotersListApi(post.id);\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  prepareAnswerUpVotersProps(params) {\n    var answer = params.answer,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n    usersById = \"postUpVoters\".concat(answer.id);\n    apiUrl = api.getAnswerUpVotersListApi(answer.id);\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  prepareCommentUpVotersProps(params) {\n    var comment = params.comment,\n        isAnswerBox = params.isAnswerBox,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n\n    if (isAnswerBox) {\n      usersById = \"answerCommentUpVoters\".concat(comment.id);\n      apiUrl = api.getAnswerCommentUpVotersListApi(comment.id);\n    } else {\n      usersById = \"postCommentUpVoters\".concat(comment.id);\n      apiUrl = api.getPostCommentUpVotersListApi(comment.id);\n    }\n\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  prepareReplyUpVotersProps(params) {\n    var reply = params.reply,\n        isAnswerBox = params.isAnswerBox,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n\n    if (isAnswerBox) {\n      usersById = \"answerReplyUpVoters\".concat(reply.id);\n      apiUrl = api.getAnswerReplyUpVotersListApi(reply.id);\n    } else {\n      usersById = \"postReplyUpVoters\".concat(reply.id);\n      apiUrl = api.getPostReplyUpVotersListApi(reply.id);\n    }\n\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  getProps() {\n    let props = {\n      pageName: this.state.pageName,\n      usersById: this.state.usersById\n    };\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    var props = this.getProps();\n    console.log(props);\n    var usersById = props.usersById;\n    const users = props.entyties.users.byId[usersById]; //userProfile = userProfile.user;\n\n    console.log(users);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(PartalNavigationBar, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })), users ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, users.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loder-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      style: {\n        paddingTop: '70px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(UserList, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })))) : \"\");\n  }\n\n}\n\n;\nexport default withMain(UserListBox);","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/users/user_list_page.js"],"names":["React","Component","withMain","UserList","PartalNavigationBar","AjaxLoader","action","store","Api","api","UserListBox","constructor","props","state","usersById","pageName","componentDidMount","console","log","apiUrl","location","usersProps","getUserListApi","userProfile","prepareUserFollowersProps","updateLocalstate","getUserList","question","prepareQuestionFollowersProps","post","preparePostUpVotersProps","answer","prepareAnswerUpVotersProps","comment","prepareCommentUpVotersProps","reply","alert","setState","params","isUserFollowers","isUserFollowings","id","getUserFollowersListApi","getUserFollowingsListApi","getQuestionFollowersListApi","getPostUpVotersListApi","getAnswerUpVotersListApi","isAnswerBox","getAnswerCommentUpVotersListApi","getPostCommentUpVotersListApi","prepareReplyUpVotersProps","getAnswerReplyUpVotersListApi","getPostReplyUpVotersListApi","getProps","Object","assign","render","users","entyties","byId","isLoading","paddingTop"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport withMain  from 'containers/higher-order-components/main';\nimport { UserList } from \"components/profile_components\";\nimport {PartalNavigationBar} from \"components/navBar\";\nimport  AjaxLoader from \"components/ajax-loader\";\nimport  * as action  from 'actions/actionCreators';\nimport {store} from \"index\";\n\n\nimport Api from 'api';\n\nconst api = new Api();\n\n\n  \n\nclass UserListBox extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n         usersById : `allUsersList`,\n         pageName       : \"\",\n      }\n   };\n  \n  \n    componentDidMount() {\n        console.log(this.props)\n        var usersById  = ``;\n        let  pageName  = 'Upvoters';\n        var apiUrl     =   ''; \n\n         \n        let { state }      = this.props.location;\n        let usersProps = {};\n\n        usersProps['pageName']  = 'Upvoters'; \n        usersProps['apiUrl']    = api.getUserListApi();\n        usersProps['usersById'] = this.state.usersById;\n\n        \n        console.log(state)\n\n        switch(state){\n            case state.userProfile:\n\n                usersProps = this.prepareUserFollowersProps(usersProps);\n                this.updateLocalstate(usersProps);\n                return this.props.getUserList(usersProps);\n\n\n            case state.question:\n\n                usersProps = this.prepareQuestionFollowersProps(usersProps);\n                this.updateLocalstate(usersProps);\n                return this.props.getUserList(usersProps);\n\n\n            case state.post:\n\n                usersProps = this.preparePostUpVotersProps(usersProps);\n                this.updateLocalstate(usersProps);\n\n                return this.props.getUserList(usersProps); \n\n\n            case state.answer:\n\n                usersProps = this.prepareAnswerUpVotersProps(usersProps);\n                this.updateLocalstate(usersProps);\n                return this.props.getUserList(usersProps);\n\n\n            case state.comment:\n\n                usersProps = this.prepareCommentUpVotersProps(state);\n                this.updateLocalstate(usersProps);\n                return this.props.getUserList(usersProps);\n\n\n            case state.reply:\n\n                usersProps = this.prepareUserFollowersProps(state);\n                this.updateLocalstate(usersProps);\n                return this.props.getUserList(usersProps);\n\n\n            default:\n                state['pageName'] = 'users';\n                alert('hi')\n\n                this.updateLocalstate(state);\n                return this.props.getUserList(state);\n                \n        }\n\n    };\n\n    updateLocalstate(state){\n       this.setState(state);\n    }\n\n    prepareUserFollowersProps(params ){\n        var {\n            userProfile, \n            isUserFollowers, \n            isUserFollowings,\n            usersById,\n            apiUrl, \n            pageName,\n\n        } = params;\n\n        if (isUserFollowers) {\n\n            pageName  = 'Followers';\n            usersById = `userProfileFollowers${userProfile.id}`;\n            apiUrl     = api.getUserFollowersListApi(userProfile.id)\n        }\n        else {\n\n            pageName  = 'Followings';\n            usersById = `answerReplyUpVoters${userProfile.id}`;\n            apiUrl    = api.getUserFollowingsListApi(userProfile.id);\n        }\n\n        return { usersById, apiUrl, pageName};\n    };\n      \n   \n\n    prepareQuestionFollowersProps( params ) {\n\n       var  { question, usersById, apiUrl, pageName } = params\n\n        var pageName = 'Followers';\n        usersById = `questionFollowers${question.id}`;\n        apiUrl  = api.getQuestionFollowersListApi(question.id);\n\n        return { usersById, apiUrl, pageName };\n    };\n\n\n    preparePostUpVotersProps( params ){\n\n        var { post, usersById, apiUrl } = params;\n\n        usersById = `postUpVoters${post.id}`;\n        apiUrl   = api.getPostUpVotersListApi(post.id);\n       \n        return { usersById, apiUrl };\n    };\n\n    prepareAnswerUpVotersProps(params){\n\n        var {answer, usersById, apiUrl } = params;\n\n        usersById = `postUpVoters${answer.id}`;\n        apiUrl   = api.getAnswerUpVotersListApi(answer.id);\n\n        return { usersById, apiUrl};\n      \n    };\n\n    prepareCommentUpVotersProps(params){\n\n        var {comment, isAnswerBox, usersById, apiUrl} = params;\n        if (isAnswerBox) {\n\n            usersById  = `answerCommentUpVoters${comment.id}`;\n            apiUrl     = api.getAnswerCommentUpVotersListApi(comment.id)\n\n        }\n        else{\n\n            usersById = `postCommentUpVoters${comment.id}`;\n            apiUrl    = api.getPostCommentUpVotersListApi(comment.id)\n        }\n\n        return { usersById, apiUrl};\n    };\n\n    prepareReplyUpVotersProps(params){\n        var {reply, isAnswerBox, usersById, apiUrl} = params;\n\n        if (isAnswerBox) {\n\n            usersById = `answerReplyUpVoters${reply.id}`;\n            apiUrl = api.getAnswerReplyUpVotersListApi(reply.id);\n\n        }\n        else {\n\n            usersById = `postReplyUpVoters${reply.id}`;\n            apiUrl = api.getPostReplyUpVotersListApi(reply.id);\n        }\n\n        return { usersById, apiUrl};\n      \n    }\n\n\n\n\n     \n           \n   getProps(){\n      let props = {\n         pageName       : this.state.pageName,\n         usersById      : this.state.usersById,\n      };\n      return Object.assign(props, this.props);\n   };\n\n   render() {\n      var props = this.getProps()\n      console.log(props)\n      var usersById = props.usersById;\n      const users = props.entyties.users.byId[usersById];\n      //userProfile = userProfile.user;\n      console.log(users)\n   \n      return (\n          <div>\n            <PartalNavigationBar {...props}/>\n            {users?\n               <div>\n                  {users.isLoading?\n                     <div className=\"page-spin-loder-box\">\n                        <AjaxLoader/>\n                     </div>\n                    :\n                    <div style={{ paddingTop : '70px'}}>\n                     <UserList {...props}/>\n                     </div>\n                  }\n               </div>\n               :\n               \"\"\n            }\n          </div>\n      )\n   };\n};\n\n\n\nexport default withMain(UserListBox);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}