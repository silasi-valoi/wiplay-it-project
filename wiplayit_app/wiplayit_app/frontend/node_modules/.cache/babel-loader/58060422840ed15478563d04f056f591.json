{"ast":null,"code":"import * as types from 'actions/types';\nconst InitialState = {\n  questions: {\n    byId: {},\n    allIds: []\n  },\n  posts: {\n    byId: {},\n    allIds: []\n  },\n  question: {\n    byId: {},\n    allIds: []\n  },\n  post: {\n    byId: {},\n    allIds: []\n  },\n  answers: {\n    byId: {},\n    allIds: []\n  },\n  comments: {\n    byId: {},\n    allIds: []\n  },\n  replies: {\n    byId: {},\n    allIds: []\n  },\n  userProfile: {\n    byId: {},\n    allIds: []\n  },\n  users: {\n    byId: {},\n    allIds: []\n  }\n};\nexport function entyties(state = InitialState, action) {\n  switch (action.type) {\n    case types.GET_USER_PROFILE.PENDING:\n      if (!state.userProfile.byId[action.profileById]) {\n        Object.defineProperty(state.userProfile.byId, action.profileById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_USER_PROFILE.SUCCESS:\n      Object.assign(state.userProfile.byId[action.profileById], action.payload);\n      return state;\n\n    case types.GET_USER_PROFILE.ERROR:\n      Object.assign(state.userProfile.byId[action.profileById], action.payload);\n      return state;\n\n    case types.GET_USER_LIST.PENDING:\n      console.log(state, action);\n\n      if (!state.users.byId[action.byId]) {\n        Object.defineProperty(state.users.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_USER_LIST.SUCCESS:\n      Object.assign(state.users.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_USER_LIST.ERROR:\n      Object.assign(state.users.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_QUESTION_LIST.PENDING:\n      console.log(state, action);\n\n      if (!state.questions.byId[action.byId]) {\n        Object.defineProperty(state.questions.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION_LIST.SUCCESS:\n      Object.assign(state.questions.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_QUESTION_LIST.ERROR:\n      Object.assign(state.questions.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_QUESTION.PENDING:\n      if (!state.question.byId[action.questionById]) {\n        Object.defineProperty(state.question.byId, action.questionById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION.SUCCESS:\n      var questionObj = action.payload.questionObj;\n      var answerById = \"answer\".concat(questionObj.id);\n      var answerState = {\n        answerList: questionObj.answers,\n        newObject: \"\",\n        isLoading: false,\n        visited: false,\n        error: ''\n      };\n      Object.assign(state.question.byId[action.questionById], action.payload);\n\n      if (questionObj.answers.length) {\n        Object.defineProperty(state.answers.byId, answerById, {\n          value: answerState\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION.ERROR:\n      if (state.question.byId[action.questionById]) {\n        Object.assign(state.question.byId[action.questionById], action.payload);\n      }\n\n      return state;\n\n    case types.GET_POST_LIST.PENDING:\n      console.log(state, action);\n\n      if (!state.posts.byId[action.byId]) {\n        Object.defineProperty(state.posts.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_POST_LIST.SUCCESS:\n      console.log(state, action);\n      Object.assign(state.posts.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_POST_LIST.ERROR:\n      Object.assign(state.posts.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_POST.PENDING:\n      if (!state.post.byId[action.postById]) {\n        Object.defineProperty(state.post.byId, action.postById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_POST.SUCCESS:\n      var post = action.payload.post;\n      var commentById = \"commentsPost\".concat(post.id);\n      console.log(state, post);\n      var commentsState = {\n        commentList: post.comments,\n        showLink: post.comments.length ? true : false,\n        isLoading: false,\n        error: '',\n        linkData: {\n          comment: post.comments[0],\n          numOfComments: post.comments.length\n        }\n      };\n      Object.assign(state.post.byId[action.postById], action.payload);\n\n      if (post.comments.length) {//Object.defineProperty(state.comments.byId, commentById, {value : commentsState});\n      }\n\n      return state;\n\n    case types.GET_POST.ERROR:\n      Object.assign(state.post.byId[action.postById], action.payload);\n      return state;\n\n    case types.GET_ANSWER_LIST.PENDING:\n      if (!state.answers.byId[action.byId]) {\n        Object.defineProperty(state.answers.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_ANSWER_LIST.SUCCESS:\n      console.log(state.answers, action);\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_ANSWER_LIST.ERROR:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case 'GET_COMMENT_LINK_DATA':\n      if (!state.comments.byId[action.byId]) {\n        Object.defineProperty(state.comments.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.comments.allIds, action.byId, {\n          value: state.comments.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case 'GET_REPLY_LINK_DATA':\n      console.log(action);\n\n      if (!state.replies.byId[action.byId]) {\n        Object.defineProperty(state.replies.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.replies.allIds, action.byId, {\n          value: state.replies.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case 'GET_REPLY_CHILD_LINK_DATA':\n      console.log(action, state.replies);\n\n      if (!state.replies.byId[action.byId]) {\n        Object.defineProperty(state.replies.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.replies.allIds, action.byId, {\n          value: state.replies.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case types.CREATE_QUESTION.PENDING:\n      Object.assign(state.question.byId[action.questionById], action.payload);\n      return state;\n\n    case types.CREATE_QUESTION.SUCCESS:\n      Object.assign(state.question.byId[action.questionById], state, action.payload);\n      return state;\n\n    case types.CREATE_QUESTION.ERROR:\n      Object.assign(state.question.byId[action.questionById], action.payload);\n      return state;\n\n    case 'VIEW_NEW_QUESTION':\n      Object.assign(state.question.byId[action.questionById], action.payload);\n      return state;\n\n    case types.CREATE_ANSWER.PENDING:\n      Object.assign(state.answers.byId[action.answerById], action.payload);\n      return state;\n\n    case types.CREATE_ANSWER.SUCCESS:\n      Object.assign(state.answers.byId[action.answerById], action.payload);\n      return state;\n\n    case types.CREATE_ANSWER.ERROR:\n      Object.assign(state.question.byId[action.answerById], action.payload);\n      return state;\n\n    /* \n     case types.CREATE_COMMENT.PENDING:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;\n      case types.CREATE_COMMENT.SUCCESS:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;\n     \n     case types.CREATE_COMMENT.ERROR:\n       Object.assign(state.comments.byId[action.commentById], action.payload)\n       return state;  \n       */\n\n    case types.GET_COMMENT_LIST.PENDING:\n      console.log(action);\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_LIST.PENDING:\n      console.log(action);\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.PENDING:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.SUCCESS:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.ERROR:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    /*\n    case types.CREATE_REPLY.PENDING:\n    Object.assign(state.replies.byId[action.replyById], action.payload)\n    return state;\n    case types.CREATE_REPLY.SUCCESS:\n    Object.assign(state.replies.byId[action.replyById], state, action.payload)\n    return state;\n        case types.CREATE_REPLY.ERROR:\n    Object.assign(state.replies.byId[action.replyById], action.payload)\n    return state;  \n    */\n\n    case types.UPDATE_USER_PROFILE.PENDING:\n      if (state.userProfile.byId[action.byId]) {\n        var userProfile = state.userProfile.byId[action.byId];\n        var user = userProfile.user;\n\n        if (user.is_following) {\n          user.is_following = false;\n        } else {\n          user.is_following = true;\n        }\n\n        Object.assign(state.userProfile.byId[action.byId], user);\n      }\n\n      return state;\n\n    case types.UPDATE_USER_PROFILE.SUCCESS:\n      Object.assign(state.userProfile.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_USER_PROFILE.ERROR:\n      var userProfile = state.userProfile.byId[action.byId];\n      var user = userProfile.user;\n\n      if (user.is_following) {\n        user.is_following = false;\n      } else {\n        user.is_following = true;\n      }\n\n      Object.assign(state.userProfile.byId[action.byId], {\n        user,\n        error: action.payload\n      });\n      return state;\n\n    case types.UPDATE_USER_LIST.PENDING:\n      console.log(action, state);\n\n      if (state.users.byId[action.byId]) {\n        var users = state.users.byId[action.byId];\n        Object.assign(state.users.byId[action.byId], action.payload);\n      }\n\n      return state;\n\n    case types.UPDATE_USER_LIST.SUCCESS:\n      var userUpdate = action.payload.user;\n      var users = state.users.byId[action.byId];\n      users.userList.map((user, index) => {\n        if (user.id === userUpdate.id) {\n          users.userList[index] = userUpdate;\n          Object.assign(state.users.byId[action.byId], users);\n          console.log(state.users, action);\n        }\n\n        return users;\n      });\n      return state;\n\n    case types.UPDATE_USER_LIST.ERROR:\n      var users = state.users.byId[action.byId];\n      Object.assign(state.users.byId[action.byId], {\n        error: action.payload\n      });\n      return state;\n\n    case types.UPDATE_QUESTION.PENDING:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_QUESTION.SUCCESS:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_QUESTION.ERROR:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_ANSWER.PENDING:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_ANSWER.SUCCESS:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_ANSWER.ERROR:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_COMMENT.PENDING:\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_COMMENT.SUCCESS:\n      let commentUpdate = action.payload.comment;\n      var comments = state.comments;\n      comments.map((comment, index) => {\n        if (comment.id === commentUpdate.id) {\n          comments[index] = commentUpdate;\n          Object.assign(state.comments.byId[action.byId], comments);\n        }\n\n        return comments;\n      });\n      console.log(state);\n      return state;\n\n    case types.UPDATE_COMMENT.ERROR:\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_REPLY.PENDING:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_REPLY.SUCCESS:\n      let replyUpdate = action.payload.reply;\n      var replies = state.replies.byId[action.byId];\n\n      if (replies && replies.replyList.length) {\n        var replyList = replies.replyList;\n        replyList.map((reply, index) => {\n          if (reply.id === replyUpdate.id) {\n            replyList[index] = replyUpdate;\n            Object.assign(state.replies.byId[action.byId], replyList);\n          }\n\n          return replyList;\n        });\n      }\n\n      console.log(state, replyUpdate);\n      return state;\n\n    case types.UPDATE_REPLY.ERROR:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    default:\n      return state;\n  }\n}\nconst modalState = {\n  isOpen: false,\n  modalType: null,\n  modalProps: {}\n};\nexport function modal(state = modalState, action) {\n  switch (action.type) {\n    case 'SHOW_MODAL':\n      console.log(state, action);\n      let newModal = Object.assign({}, state, action.payload);\n      console.log(newModal, state);\n      return newModal;\n\n    case 'HIDE_MODAL':\n      let hideModal = Object.assign({}, state, action.payload);\n      return hideModal;\n\n    default:\n      return state;\n  }\n}\nconst userAuthState = {\n  isOnSignUpForm: false,\n  isOnPasswordResetForm: false,\n  isLoading: false,\n  auth: {\n    tokenKey: \"\",\n    isLoggedIn: false\n  }\n};\nexport function userAuth(state = userAuthState, action) {\n  switch (action.type) {\n    case types.USER_AUTHENTICATION.PENDING:\n      let authPending = Object.assign(state, action.payload);\n      console.log(state, action);\n      return authPending;\n\n    case types.USER_AUTHENTICATION.SUCCESS:\n      let authSuccess = Object.assign({}, state, action.payload);\n      localStorage.setItem('auth', JSON.stringify(authSuccess.auth));\n      return authSuccess;\n\n    case types.USER_AUTHENTICATION.ERROR:\n      let authError = Object.assign({}, state, action.payload);\n      return authError;\n\n    case types.TOGGLE.SIGNUP_FORM:\n      let toggleSignUp = Object.assign({}, state, action.payload);\n      return toggleSignUp;\n\n    case types.TOGGLE.PASSWORD_RESET_FORM:\n      let togglePasswordReset = Object.assign({}, state, action.payload);\n      return togglePasswordReset;\n\n    default:\n      return state;\n  }\n}\n;\nexport const currentUser = () => {\n  // Initialize current user state, First we check for currentUser from localStorage \n  // And initialze state with it or with empty currentUser if otherwise.\n  var currentUser = \"\";\n  var isCurrentUser = JSON.parse(localStorage.getItem('currentUser')) ? true : false;\n\n  if (isCurrentUser) {\n    currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  return {\n    currentUser,\n    isLoading: false,\n    error: \"\"\n  };\n};\nexport function currentUserState(state = currentUser(), action) {\n  switch (action.type) {\n    case types.GET_CURRENT_USER.SUCCESS:\n      let currentUserSuccess = Object.assign({}, state, action.payload);\n      localStorage.setItem('currentUser', JSON.stringify(currentUserSuccess.currentUser));\n      return currentUserSuccess;\n\n    case types.GET_CURRENT_USER.ERROR:\n      let currentUserError = Object.assign({}, state, action.payload);\n      return currentUserError;\n\n    case types.GET_CURRENT_USER.PENDING:\n      let currentUserPending = Object.assign({}, state, action.payload);\n      return currentUserPending;\n\n    default:\n      return state;\n  }\n\n  ;\n}\n;","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/reducers/lib/appReducers.js"],"names":["types","InitialState","questions","byId","allIds","posts","question","post","answers","comments","replies","userProfile","users","entyties","state","action","type","GET_USER_PROFILE","PENDING","profileById","Object","defineProperty","value","payload","SUCCESS","assign","ERROR","GET_USER_LIST","console","log","GET_QUESTION_LIST","GET_QUESTION","questionById","questionObj","answerById","id","answerState","answerList","newObject","isLoading","visited","error","length","GET_POST_LIST","GET_POST","postById","commentById","commentsState","commentList","showLink","linkData","comment","numOfComments","GET_ANSWER_LIST","CREATE_QUESTION","CREATE_ANSWER","GET_COMMENT_LIST","GET_REPLY_LIST","GET_REPLY_CHILD_LIST","UPDATE_USER_PROFILE","user","is_following","UPDATE_USER_LIST","userUpdate","userList","map","index","UPDATE_QUESTION","UPDATE_ANSWER","UPDATE_COMMENT","commentUpdate","UPDATE_REPLY","replyUpdate","reply","replyList","modalState","isOpen","modalType","modalProps","modal","newModal","hideModal","userAuthState","isOnSignUpForm","isOnPasswordResetForm","auth","tokenKey","isLoggedIn","userAuth","USER_AUTHENTICATION","authPending","authSuccess","localStorage","setItem","JSON","stringify","authError","TOGGLE","SIGNUP_FORM","toggleSignUp","PASSWORD_RESET_FORM","togglePasswordReset","currentUser","isCurrentUser","parse","getItem","currentUserState","GET_CURRENT_USER","currentUserSuccess","currentUserError","currentUserPending"],"mappings":"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","sourcesContent":["\nimport  * as types  from 'actions/types';\n\n\n\n\nconst InitialState = {\n   questions : {\n      byId   : {},\n      allIds : []\n   },\n\n   posts     : {\n      byId   : {},\n      allIds : []\n   },\n\n   question  : {\n      byId   : {},\n      allIds : [],\n   },\n\n   post      : {\n      byId   : {},\n      allIds : []\n   },\n\n   answers  : {\n      byId   : {},\n      allIds : []\n   },\n\n   comments : {\n      byId   : {},\n      allIds : []\n   },\n\n   replies : {\n      byId   : {},\n      allIds : []\n   },\n   userProfile : {\n      byId   : {},\n      allIds : []\n   },\n   users : {\n     byId   : {},\n     allIds : [] \n   },\n}\n\n\nexport function entyties(state=InitialState, action) {\n   switch (action.type){\n      case types.GET_USER_PROFILE.PENDING:\n         if (!state.userProfile.byId[action.profileById]) {\n            Object.defineProperty(state.userProfile.byId, action.profileById, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_USER_PROFILE.SUCCESS:\n         Object.assign(state.userProfile.byId[action.profileById], action.payload);\n         return state;\n\n      case types.GET_USER_PROFILE.ERROR:\n         Object.assign(state.userProfile.byId[action.profileById], action.payload);\n         return state;\n              \n\n      case types.GET_USER_LIST.PENDING:\n         console.log(state, action)\n         if (!state.users.byId[action.byId]) {\n            Object.defineProperty(state.users.byId, action.byId, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_USER_LIST.SUCCESS:\n         Object.assign(state.users.byId[action.byId], action.payload);\n         return state;\n\n      case types.GET_USER_LIST.ERROR:\n         Object.assign(state.users.byId[action.byId], action.payload);\n         return state;\n\n      case types.GET_QUESTION_LIST.PENDING:\n         console.log(state, action)\n         if (!state.questions.byId[action.byId]) {\n            Object.defineProperty(state.questions.byId, action.byId, {value : action.payload});\n         }\n         return state;       \n\n      case types.GET_QUESTION_LIST.SUCCESS:\n         Object.assign(state.questions.byId[action.byId], action.payload);   \n         return state;    \n\n      case types.GET_QUESTION_LIST.ERROR:\n         Object.assign(state.questions.byId[action.byId], action.payload);\n         return state;            \n       \n\n\n\n      case types.GET_QUESTION.PENDING:\n\n         if (!state.question.byId[action.questionById]) {\n            Object.defineProperty(state.question.byId, action.questionById, {value : action.payload});\n         }\n         return state;      \n      \n      case types.GET_QUESTION.SUCCESS:\n         var questionObj = action.payload.questionObj;\n         var answerById = `answer${questionObj.id}`;\n         var answerState = {\n            answerList    : questionObj.answers,\n            newObject     : \"\",\n            isLoading     : false,\n            visited       : false,\n            error         : '',\n         }\n\n         Object.assign(state.question.byId[action.questionById], action.payload);\n         if (questionObj.answers.length) {\n             Object.defineProperty(state.answers.byId, answerById, {value : answerState});\n         }\n         return state; \n\n      case types.GET_QUESTION.ERROR:\n         if (state.question.byId[action.questionById]) {\n            Object.assign(state.question.byId[action.questionById], action.payload);\n         }\n         return state;\n\n\n      case types.GET_POST_LIST.PENDING:\n         console.log(state, action)\n         if (!state.posts.byId[action.byId]) {\n            Object.defineProperty(state.posts.byId, action.byId, {value : action.payload});\n         }\n         return state;       \n\n      case types.GET_POST_LIST.SUCCESS:\n         console.log(state, action)\n         Object.assign(state.posts.byId[action.byId], action.payload);   \n         return state;    \n\n      case types.GET_POST_LIST.ERROR:\n         Object.assign(state.posts.byId[action.byId], action.payload);\n         return state;              \n\n\n      case types.GET_POST.PENDING:\n         if (!state.post.byId[action.postById]) {\n            Object.defineProperty(state.post.byId, action.postById, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_POST.SUCCESS:\n         var post = action.payload.post;\n         var commentById = `commentsPost${post.id}`;\n         console.log(state, post)\n         var commentsState = {\n            commentList      : post.comments,\n            showLink         : post.comments.length?true:false,\n            isLoading        : false,\n            error            : '',\n            linkData : {\n               comment       : post.comments[0],\n               numOfComments : post.comments.length,\n            },\n         };\n\n         Object.assign(state.post.byId[action.postById], action.payload);\n         if (post.comments.length) {\n            //Object.defineProperty(state.comments.byId, commentById, {value : commentsState});\n         }\n         return state;\n\n      case types.GET_POST.ERROR:\n         Object.assign(state.post.byId[action.postById], action.payload);\n         return state; \n\n\n      case types.GET_ANSWER_LIST.PENDING:\n         if (!state.answers.byId[action.byId]) {\n            Object.defineProperty(state.answers.byId, action.byId, {value : action.payload});\n         }\n         return state;\n\n\n      case types.GET_ANSWER_LIST.SUCCESS:\n         console.log(state.answers, action)\n         Object.assign(state.answers.byId[action.byId],action.payload);\n         return state; \n\n      case types.GET_ANSWER_LIST.ERROR:\n         Object.assign(state.answers.byId[action.byId],action.payload);\n         return state;     \n\n      case 'GET_COMMENT_LINK_DATA':\n         if (!state.comments.byId[action.byId]) {\n            Object.defineProperty(state.comments.byId, action.byId,\n                                                           { value :action.payload});\n             Object.defineProperty(state.comments.allIds, action.byId ,\n                       { value : state.comments.byId[action.byId] });   \n         } \n         return state; \n\n      case 'GET_REPLY_LINK_DATA':\n         console.log(action)\n         if (!state.replies.byId[action.byId]) {\n            Object.defineProperty(state.replies.byId, action.byId, { value :action.payload});  \n            Object.defineProperty(state.replies.allIds, action.byId,\n                         { value : state.replies.byId[action.byId] });\n         }\n\n         return state; \n\n      case 'GET_REPLY_CHILD_LINK_DATA':\n         console.log(action, state.replies)\n         if (!state.replies.byId[action.byId]) {\n           Object.defineProperty(state.replies.byId, action.byId, {value : action.payload});\n           Object.defineProperty(state.replies.allIds, action.byId,\n                                   { value : state.replies.byId[action.byId] });\n         }\n         return state;\n\n      case types.CREATE_QUESTION.PENDING:\n         Object.assign(state.question.byId[action.questionById], action.payload);\n         return state;\n\n      case types.CREATE_QUESTION.SUCCESS:\n         Object.assign(state.question.byId[action.questionById], state, action.payload);\n         return state;\n      \n      case types.CREATE_QUESTION.ERROR:\n        Object.assign(state.question.byId[action.questionById], action.payload);\n        return state;  \n\n      case 'VIEW_NEW_QUESTION':\n         Object.assign(state.question.byId[action.questionById], action.payload);\n         return state;  \n\n      case types.CREATE_ANSWER.PENDING:\n         Object.assign(state.answers.byId[action.answerById], action.payload)\n         return state;\n\n      case types.CREATE_ANSWER.SUCCESS:\n         Object.assign(state.answers.byId[action.answerById], action.payload)\n         return state;\n      \n      case types.CREATE_ANSWER.ERROR:\n        Object.assign(state.question.byId[action.answerById], action.payload)\n        return state;     \n     /* \n      case types.CREATE_COMMENT.PENDING:\n         Object.assign(state.comments.byId[action.commentById], action.payload)\n         return state;\n\n      case types.CREATE_COMMENT.SUCCESS:\n         Object.assign(state.comments.byId[action.commentById], action.payload)\n         return state;\n      \n      case types.CREATE_COMMENT.ERROR:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;  \n        */\n\n      case types.GET_COMMENT_LIST.PENDING:\n         console.log(action)\n         Object.assign(state.comments.byId[action.byId], action.payload)\n         return state;    \n\n      case types.GET_REPLY_LIST.PENDING:\n         console.log(action)\n         Object.assign(state.replies.byId[action.byId], action.payload)\n         return state;    \n\n      case  types.GET_REPLY_CHILD_LIST.PENDING:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state; \n\n      case  types.GET_REPLY_CHILD_LIST.SUCCESS:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state;\n      \n      case  types.GET_REPLY_CHILD_LIST.ERROR:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state;     \n         /*\n      case types.CREATE_REPLY.PENDING:\n         Object.assign(state.replies.byId[action.replyById], action.payload)\n         return state;\n\n      case types.CREATE_REPLY.SUCCESS:\n         Object.assign(state.replies.byId[action.replyById], state, action.payload)\n         return state;\n      \n      case types.CREATE_REPLY.ERROR:\n         Object.assign(state.replies.byId[action.replyById], action.payload)\n         return state;  \n      */\n      case types.UPDATE_USER_PROFILE.PENDING:\n      if (state.userProfile.byId[action.byId]) {\n            var userProfile =state.userProfile.byId[action.byId];\n            var user = userProfile.user\n            if (user.is_following) {\n               user.is_following = false\n            }else{\n               user.is_following = true\n            }\n           \n            Object.assign(state.userProfile.byId[action.byId], user);\n         }\n        return state;\n\n      case types.UPDATE_USER_PROFILE.SUCCESS:\n         Object.assign(state.userProfile.byId[action.byId], action.payload);\n        return state;  \n\n      case types.UPDATE_USER_PROFILE.ERROR:\n         var userProfile =state.userProfile.byId[action.byId];\n            var user = userProfile.user\n            if (user.is_following) {\n               user.is_following = false\n            }else{\n               user.is_following = true\n            }\n        Object.assign(state.userProfile.byId[action.byId], {user, error: action.payload});\n        return state;  \n\n\n      case types.UPDATE_USER_LIST.PENDING:\n         console.log(action, state)\n         if (state.users.byId[action.byId]) {\n            var users =state.users.byId[action.byId];\n            Object.assign(state.users.byId[action.byId], action.payload);\n         }\n        return state;\n\n      case types.UPDATE_USER_LIST.SUCCESS:\n         var userUpdate = action.payload.user;\n         var users =state.users.byId[action.byId];\n\n         users.userList.map((user, index) => {\n            \n            if (user.id === userUpdate.id) {\n               users.userList[index] = userUpdate; \n               Object.assign(state.users.byId[action.byId], users );\n               console.log(state.users, action)\n            }\n            return users;\n         })\n         \n         return state;  \n\n      case types.UPDATE_USER_LIST.ERROR:\n        var users =state.users.byId[action.byId];\n        Object.assign(state.users.byId[action.byId], {error: action.payload});\n        return state;  \n\n\n      case types.UPDATE_QUESTION.PENDING:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;\n\n      case types.UPDATE_QUESTION.SUCCESS:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;                  \n      \n\n      case types.UPDATE_QUESTION.ERROR:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;   \n\n\n      case types.UPDATE_ANSWER.PENDING:\n         Object.assign(state.answers.byId[action.byId], action.payload);\n         return state;\n\n      case types.UPDATE_ANSWER.SUCCESS:\n         Object.assign(state.answers.byId[action.byId], action.payload);\n         return state;                  \n      \n\n      case types.UPDATE_ANSWER.ERROR:\n         Object.assign(state.answers.byId[action.byId], action.payload);\n         return state;     \n                      \n      \n      case types.UPDATE_COMMENT.PENDING:\n         Object.assign(state.comments.byId[action.byId], action.payload );\n         return state\n\n      case types.UPDATE_COMMENT.SUCCESS:\n         let commentUpdate = action.payload.comment;\n         var comments = state.comments;\n\n         comments.map((comment, index) => {\n            if (comment.id === commentUpdate.id) {\n               comments[index] = commentUpdate; \n               Object.assign(state.comments.byId[action.byId], comments );\n            }\n            return comments;\n         })\n\n         console.log(state)\n         return state\n      \n      case types.UPDATE_COMMENT.ERROR:\n         Object.assign(state.comments.byId[action.byId], action.payload );\n         return state       \n      \n\n\n      case types.UPDATE_REPLY.PENDING:\n         Object.assign(state.replies.byId[action.byId], action.payload );\n         return state\n\n      case types.UPDATE_REPLY.SUCCESS:\n         let replyUpdate = action.payload.reply;\n                 \n         var replies = state.replies.byId[action.byId]; \n\n         if (replies && replies.replyList.length) {\n            var replyList = replies.replyList;\n\n            replyList.map((reply, index) => {\n               if (reply.id === replyUpdate.id) {\n                  replyList[index] = replyUpdate; \n                  Object.assign(state.replies.byId[action.byId], replyList );\n               }\n               return replyList;\n            })\n         }\n         console.log(state, replyUpdate)\n         return state\n    \n      case types.UPDATE_REPLY.ERROR:\n         Object.assign(state.replies.byId[action.byId], action.payload );\n         return state\n       \n\n      default:\n         return state; \n   }\n}\n\n   \n\nconst modalState = {\n   isOpen     : false,\n   modalType  : null,\n   modalProps : {},  \n};\n\n\n\nexport  function modal(state=modalState, action) {\n   switch (action.type){\n      case 'SHOW_MODAL':\n      console.log(state, action)\n          let newModal  = Object.assign({}, state, action.payload)\n         console.log(newModal, state);   \n         return newModal;  \n\n       case 'HIDE_MODAL':\n          let hideModal  = Object.assign({}, state, action.payload)\n          return hideModal;    \n         \n      default:\n         return state;\n   }\n}\n\n\n\n\n\n\n const userAuthState = {\n   isOnSignUpForm         : false,\n   isOnPasswordResetForm  : false,\n   isLoading              : false,\n   \n   auth : {\n      tokenKey    : \"\",\n      isLoggedIn  : false,\n   },\n   \n};\n\n\nexport function userAuth(state=userAuthState, action) {\n   switch (action.type){\n      case types.USER_AUTHENTICATION.PENDING :\n        let authPending = Object.assign(state, action.payload)\n         console.log(state, action)\n         return authPending; \n      case types.USER_AUTHENTICATION.SUCCESS:\n         let authSuccess  = Object.assign({}, state, action.payload)\n         localStorage.setItem('auth',JSON.stringify(authSuccess.auth));\n         return authSuccess;              \n\n      case types.USER_AUTHENTICATION.ERROR:\n        let authError = Object.assign({}, state, action.payload)\n         return authError\n          \n\n      case types.TOGGLE.SIGNUP_FORM:\n         let toggleSignUp  = Object.assign({}, state, action.payload)\n         return toggleSignUp;   \n\n      case types.TOGGLE.PASSWORD_RESET_FORM:\n         let togglePasswordReset  = Object.assign({}, state, action.payload)\n         return togglePasswordReset;      \n\n      default:\n         return state; \n   }\n};\n\n\n\n\n\n\nexport const currentUser = () => {\n   // Initialize current user state, First we check for currentUser from localStorage \n   // And initialze state with it or with empty currentUser if otherwise.\n   var currentUser   = \"\";\n   var isCurrentUser = JSON.parse(localStorage.getItem('currentUser'))?true:false;\n   \n   if (isCurrentUser) {\n      currentUser = JSON.parse(localStorage.getItem('currentUser'));\n   }\n\n   return{\n      currentUser, \n      isLoading : false,\n      error       : \"\",\n   }\n}\n\n\nexport function currentUserState(state=currentUser(), action) {\n\n   switch (action.type){\n      case types.GET_CURRENT_USER.SUCCESS:\n         let currentUserSuccess  = Object.assign({}, state, action.payload)\n         localStorage.setItem('currentUser',JSON.stringify(currentUserSuccess.currentUser));\n         return currentUserSuccess;   \n                  \n\n      case types.GET_CURRENT_USER.ERROR:\n        let currentUserError = Object.assign({}, state, action.payload)\n         return currentUserError;    \n\n      case types.GET_CURRENT_USER.PENDING:\n        let currentUserPending  = Object.assign({}, state, action.payload)\n        return currentUserPending;    \n\n      default:\n         return state;  \n          \n\n   };\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}