{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/python_projects/wiplay-it-project/wiplayit_app/frontend/src/components/reply_components.js\";\nimport React from 'react';\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { MatchMediaHOC } from 'react-match-media';\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport { pageMediaBlockRenderer } from 'components/editor_components';\nimport { ReplyBtn, ReplyOptModalBtns, DownVoteReplytBtn, UpVoteReplyBtn, OpenModalButton, QuestionOptDropDownBtn, ModalCloseBtn } from \"components/buttons\";\nimport { ButtonsBox } from \"components/partial_components\";\nimport Api from 'api';\nimport * as types from 'actions/types';\nimport ReplyChildrenBox from \"containers/replies/reply_children_page\";\nimport ReplyGrandChildrenBox from \"containers/replies/reply_grand_children_page\";\nimport ReplyGreatGrandChildBox from \"containers/replies/reply_great_grand_child_page\";\nimport { UserComponentSmall } from \"components/profile_components\";\nconst OptBtnSmallScreen = MatchMediaHOC(OpenModalButton, '(max-width: 500px)');\nconst OptBtnBigScreen = MatchMediaHOC(QuestionOptDropDownBtn, '(min-width: 800px)');\nconst api = new Api();\nexport const RepliesComponent = props => {\n  // console.log(props.replyState)\n  let replyStyles = {\n    border: 'px solid black',\n    margin: '15px 22px'\n  };\n  var replies = props.entyties.replies;\n  replies = replies.byId[props.repliesById];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, replies.replyList.map((reply, index) => {\n    let replyProps = {\n      reply,\n      byId: props.repliesById,\n      index,\n      replyStyles,\n      props\n    };\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, props.comment.id === reply.comment ? React.createElement(\"div\", {\n      className: \"reply-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reply-contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Reply, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), reply.has_children ? React.createElement(ReplyChildrenBox, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })) : \"\")) : \"\");\n  }));\n};\nexport const ReplyChildernComponent = props => {\n  //console.log(props)\n  let replyStyles = {\n    border: 'px solid blue',\n    margin: '15px 22px 10px  38px'\n  };\n  var replies = props.entyties.replies;\n  replies = replies.byId[props.replyChildrenById];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, replies.replyList.map((reply, index) => {\n    let replyProps = {\n      reply,\n      byId: props.replyChildrenById,\n      index,\n      replyStyles,\n      props\n    };\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, props.childParent.id === reply.parent ? React.createElement(\"div\", {\n      className: \"reply-child-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reply-child-contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Reply, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), reply.has_children ? React.createElement(ReplyGrandChildrenBox, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })) : '') : \"\");\n  }));\n};\nexport const ReplyGrandChildernComponent = props => {\n  let replyStyles = {\n    border: 'px solid red',\n    margin: '15px 22px 10px 60px'\n  };\n  var replies = props.entyties.replies;\n  replies = replies.byId[props.grandChildById];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, replies.replyList.map((reply, index) => {\n    let replyProps = {\n      reply,\n      byId: props.grandChildById,\n      index,\n      replyStyles,\n      props\n    };\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, props.grandChildParent.id === reply.parent ? React.createElement(\"div\", {\n      className: \"reply-grand-child-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reply-grand-child-contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Reply, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), reply.has_children ? React.createElement(ReplyGreatGrandChildBox, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })) : '') : \"\");\n  }));\n};\nexport const ReplyGreatGrandChildComponent = props => {\n  console.log(props);\n  let replyStyles = {\n    border: 'px solid green',\n    margin: '15px 22px 10px 75px'\n  };\n  var replies = props.entyties.replies;\n  replies = replies.byId[props.byId];\n  var replyList = replies.replyList;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, replyList.map((reply, index) => {\n    let replyProps = {\n      reply,\n      index,\n      replyStyles,\n      props\n    };\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, props.greatGrandChildParent.id === reply.parent ? React.createElement(\"div\", {\n      className: \"reply-great-grand-child-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reply-great-grand-child-contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Reply, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }))), reply.has_children ? \"\" : '') : \"\");\n  }));\n};\nexport const Reply = props => {\n  console.log(props);\n  let optionsBtnStyles = {\n    fontSize: '11px',\n    background: ' #F5F5F5',\n    fontWeight: 'bold',\n    width: '40px',\n    color: '#4A4A4A',\n    margin: '0 0 2px'\n  };\n  let _props$props = props.props,\n      answer = _props$props.answer,\n      post = _props$props.post;\n  var reply = props.reply;\n  let storedState = JSON.parse(reply.reply);\n  const contentState = convertFromRaw(storedState);\n  const editorState = EditorState.createWithContent(contentState);\n  let state = {\n    reply,\n    usersIsFor: answer ? 'answerReplyUpVoters' : 'postReplyUpVoters'\n  };\n  let pathToUpvoters = \"/reply/\".concat(reply.id, \"/upvoters/\");\n  var createApiUrl = '';\n  var updateUrl = '';\n\n  if (answer) {\n    updateUrl = api.updateAnswerReplyApi(reply.id);\n    createApiUrl = api.createAnswerReplyChildApi(reply.id);\n  } else if (post) {\n    updateUrl = api.updatePostReplyApi(reply.id);\n    createApiUrl = api.createPostReplyChildApi(reply.id);\n  }\n\n  let modalOptionsProps = {\n    modalProps: {\n      objName: 'reply',\n      actionType: types.UPDATE_REPLY,\n      isPut: true,\n      obj: reply,\n      apiUrl: updateUrl,\n      objIndex: props.index,\n      objId: reply.id,\n      byId: props.byId\n    },\n    modalType: 'optionsMenu'\n  };\n  let upvoteBtnProps = {\n    objName: 'reply',\n    actionType: types.UPDATE_REPLY,\n    isPut: true,\n    obj: reply,\n    objId: reply.id,\n    objIndex: props.index,\n    apiUrl: updateUrl,\n    byId: props.byId\n  };\n  let createReplyProps = {\n    modalProps: {\n      objName: 'reply',\n      actionType: types.CREATE_REPLY,\n      obj: reply,\n      objId: reply.id,\n      isPost: true,\n      editorPlaceHolder: 'Add Reply...',\n      apiUrl: createApiUrl,\n      byId: props.byId\n    },\n    modalType: 'editor'\n  };\n  let btnsProps = {\n    createReplyProps,\n    upvoteBtnProps,\n    modalOptionsProps,\n    btnStyles: optionsBtnStyles,\n    btnText: 'More'\n  };\n  Object.assign(btnsProps, props.props);\n  let itemsCounter = React.createElement(Link, {\n    to: {\n      pathname: pathToUpvoters,\n      state\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, reply.upvotes, \"  Upvotes\");\n  let upvoteBtn = reply.upvoted ? React.createElement(DownVoteReplytBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  })) : React.createElement(UpVoteReplyBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }));\n  let replyBtn = React.createElement(ReplyBtn, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }));\n  let optionsBtn = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }, React.createElement(OptBtnSmallScreen, Object.assign({}, btnsProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  })), React.createElement(OptBtnBigScreen, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  })));\n  const btnsList = {\n    itemsCounter: itemsCounter,\n    btn1: upvoteBtn,\n    btn2: replyBtn,\n    btn3: optionsBtn\n  };\n  return React.createElement(\"div\", {\n    style: props.replyStyles,\n    className: \"reply-box\",\n    id: \"reply-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, React.createElement(UserComponentSmall, Object.assign({\n    user: reply.created_by,\n    currentUser: props.props.currentUser\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"reply\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, React.createElement(Editor, {\n    blockRendererFn: pageMediaBlockRenderer,\n    editorState: editorState,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  })), React.createElement(ButtonsBox, Object.assign({}, btnsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  })));\n};\nexport const RepliesLink = props => {\n  //console.log(props)\n  let styles = {\n    border: \"px solid #D5D7D5\",\n    display: 'flex',\n    flexDirection: 'row',\n    margin: '10px 60px',\n    padding: '2px 2px 2px 7px',\n    borderRadius: '20px',\n    background: '#EEEEEE'\n  };\n  let userStyles = {\n    display: 'flex',\n    border: 'px solid blue',\n    padding: '2px',\n    listStyleType: 'none',\n    margin: '0'\n  };\n  let itemStyles = {\n    display: 'flex',\n    border: 'px solid blue',\n    listStyleType: 'none',\n    margin: '0',\n    padding: '0'\n  };\n  let imgStiles = {\n    borderRadius: '50%',\n    width: '17px',\n    height: '19px'\n  };\n  let userNameStyles = {\n    border: 'px solid blue',\n    fontSize: '11px',\n    color: '#2C2D2D',\n    fontFamily: 'Mukta',\n    lineHeight: '1.8',\n    margin: '0 0 0 3px'\n  };\n  let totalRepliesStyles = {\n    border: 'px solid red',\n    fontSize: '9px',\n    margin: '2px 0 0 10px',\n    lineHeight: '1.8'\n  };\n  let textStyles = {\n    color: 'black',\n    fontSize: '9px',\n    border: 'px solid black',\n    lineHeight: '1.8',\n    margin: '2px 0 0 4px'\n  };\n  return React.createElement(\"div\", {\n    style: styles,\n    className: \"comments-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    style: userStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    style: imgStiles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }, props.reply.created_by.profile.profile_picture === null ? React.createElement(\"img\", {\n    alt: \"\",\n    src: require(\"images/user-avatar.png\"),\n    className: \"profile-photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    alt: \"\",\n    src: props.reply.created_by.profile.profile_picture,\n    className: \"profile-photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    style: userNameStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491\n    },\n    __self: this\n  }, props.reply.created_by.first_name, \"   \", props.reply.created_by.last_name, \" ...\")), React.createElement(\"ul\", {\n    style: itemStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    style: textStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  }, \" Replied \"), React.createElement(\"li\", {\n    style: totalRepliesStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498\n    },\n    __self: this\n  }, \" \", props.totalReplies, \" Reply\")));\n};\nexport const CommentsReplyLink = props => {\n  var byId = props.repliesById;\n  var replies = props.entyties.replies;\n  var linkData = replies.byId[byId].linkData;\n  var reply = linkData.reply;\n  var apiUrl = '';\n\n  if (props.isAnswerBox) {\n    apiUrl = api.getAnswerReplyListApi(reply.comment);\n  } else {\n    apiUrl = api.getPostReplyListApi(reply.comment);\n  }\n\n  var replyProps = {\n    actionType: types.GET_REPLY_LIST,\n    apiUrl: apiUrl,\n    byId\n  };\n  return React.createElement(\"div\", {\n    className: \"reply-link-box\",\n    onClick: () => props.getReplyList(replyProps),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525\n    },\n    __self: this\n  }, React.createElement(RepliesLink, Object.assign({}, linkData, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527\n    },\n    __self: this\n  })));\n};\nexport const ChildRepliesLink = props => {\n  var byId = props.replyChildrenById;\n  var replyState = props.entyties.replies.byId[byId];\n  var linkData = replyState.linkData;\n  var reply = props.childParent;\n  var apiUrl = '';\n\n  if (props.isAnswerBox) {\n    apiUrl = api.getAnswerReplyChildrenListApi(reply.id);\n  } else {\n    apiUrl = api.getPostReplyChildrenListApi(reply.id);\n  }\n\n  var replyProps = {\n    actionType: types.GET_REPLY_CHILD_LIST,\n    apiUrl: apiUrl,\n    byId,\n    children: reply.children\n  };\n  return React.createElement(\"div\", {\n    onClick: () => props.getReplyChildrenList(replyProps, reply.children),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558\n    },\n    __self: this\n  }, \"Click to view More\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559\n    },\n    __self: this\n  }, linkData.totalReplies)));\n};\nexport const GrandChildRepliesLink = props => {\n  var reply = props.grandChildParent;\n  var byId = props.grandChildById;\n  var replies = props.entyties.replies.byId[byId];\n  var linkData = replies.linkData;\n  var apiUrl = '';\n\n  if (props.isAnswerBox) {\n    apiUrl = api.getAnswerReplyChildrenListApi(reply.id);\n  } else {\n    apiUrl = api.getPostReplyChildrenListApi(reply.id);\n  }\n\n  var replyProps = {\n    actionType: types.GET_REPLY_CHILD_LIST,\n    apiUrl: apiUrl,\n    byId,\n    children: reply.children\n  };\n  return React.createElement(\"div\", {\n    onClick: () => props.getReplyChildrenList(replyProps),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590\n    },\n    __self: this\n  }, \"Click to view More\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591\n    },\n    __self: this\n  }, linkData.totalReplies)));\n};\nexport const GreatGrandChildRepliesLink = props => {\n  var byId = props.byId;\n  var replyState = props.entyties.replies.byId[byId];\n  var linkData = replyState.linkData;\n  var reply = props.greatGrandChildParent;\n  var apiUrl = '';\n\n  if (props.isAnswerBox) {\n    apiUrl = api.getAnswerReplyChildrenListApi(reply.id);\n  } else {\n    apiUrl = api.getPostReplyChildrenListApi(reply.id);\n  }\n\n  var replyProps = {\n    actionType: types.GET_REPLY_CHILD_LIST,\n    apiUrl: apiUrl,\n    byId\n  };\n  return React.createElement(\"div\", {\n    onClick: () => props.getReplyChildrenList(replyProps),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622\n    },\n    __self: this\n  }, \"Click to view More\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623\n    },\n    __self: this\n  }, linkData.totalReplies)));\n};\nexport const ReplyDropDownMenu = props => React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 632\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 633\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  className: \"btn-sm answer-option options-btn \",\n  id: \"questionMenuButton\",\n  \"data-toggle\": \"dropdown\",\n  \"aria-haspopup\": \"false\",\n  \"aria-expanded\": \"true\",\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 634\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"material-icons \",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 636\n  },\n  __self: this\n}, \"more_horiz\")), React.createElement(\"div\", {\n  className: \"dropdown-menu\",\n  \"aria-labelledby\": \"questionMenuButton\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 638\n  },\n  __self: this\n}, React.createElement(ReplyOptModalBtns, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 639\n  },\n  __self: this\n})))));\nexport const ReplyModalMenu = props => React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 649\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"modal-menu \",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 650\n  },\n  __self: this\n}, React.createElement(ModalCloseBtn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 651\n  },\n  __self: this\n}), React.createElement(ReplyOptModalBtns, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 652\n  },\n  __self: this\n}))));","map":{"version":3,"sources":["/home/silasi/Deprojectos/python_projects/wiplay-it-project/wiplayit_app/frontend/src/components/reply_components.js"],"names":["React","BrowserRouter","Link","MatchMediaHOC","Editor","EditorState","convertFromRaw","pageMediaBlockRenderer","ReplyBtn","ReplyOptModalBtns","DownVoteReplytBtn","UpVoteReplyBtn","OpenModalButton","QuestionOptDropDownBtn","ModalCloseBtn","ButtonsBox","Api","types","ReplyChildrenBox","ReplyGrandChildrenBox","ReplyGreatGrandChildBox","UserComponentSmall","OptBtnSmallScreen","OptBtnBigScreen","api","RepliesComponent","props","replyStyles","border","margin","replies","entyties","byId","repliesById","replyList","map","reply","index","replyProps","comment","id","has_children","ReplyChildernComponent","replyChildrenById","childParent","parent","ReplyGrandChildernComponent","grandChildById","grandChildParent","ReplyGreatGrandChildComponent","console","log","greatGrandChildParent","Reply","optionsBtnStyles","fontSize","background","fontWeight","width","color","answer","post","storedState","JSON","parse","contentState","editorState","createWithContent","state","usersIsFor","pathToUpvoters","createApiUrl","updateUrl","updateAnswerReplyApi","createAnswerReplyChildApi","updatePostReplyApi","createPostReplyChildApi","modalOptionsProps","modalProps","objName","actionType","UPDATE_REPLY","isPut","obj","apiUrl","objIndex","objId","modalType","upvoteBtnProps","createReplyProps","CREATE_REPLY","isPost","editorPlaceHolder","btnsProps","btnStyles","btnText","Object","assign","itemsCounter","pathname","upvotes","upvoteBtn","upvoted","replyBtn","optionsBtn","btnsList","btn1","btn2","btn3","user","created_by","currentUser","RepliesLink","styles","display","flexDirection","padding","borderRadius","userStyles","listStyleType","itemStyles","imgStiles","height","userNameStyles","fontFamily","lineHeight","totalRepliesStyles","textStyles","profile","profile_picture","require","first_name","last_name","totalReplies","CommentsReplyLink","linkData","isAnswerBox","getAnswerReplyListApi","getPostReplyListApi","GET_REPLY_LIST","getReplyList","ChildRepliesLink","replyState","getAnswerReplyChildrenListApi","getPostReplyChildrenListApi","GET_REPLY_CHILD_LIST","children","getReplyChildrenList","GrandChildRepliesLink","GreatGrandChildRepliesLink","ReplyDropDownMenu","ReplyModalMenu"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter,Link } from \"react-router-dom\";\nimport { MatchMediaHOC } from 'react-match-media';\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport {pageMediaBlockRenderer} from 'components/editor_components';\n\nimport { ReplyBtn, ReplyOptModalBtns, DownVoteReplytBtn, UpVoteReplyBtn,\n         OpenModalButton,QuestionOptDropDownBtn, ModalCloseBtn  } from \"components/buttons\";\nimport {ButtonsBox} from \"components/partial_components\";\nimport Api from 'api';\nimport  * as types  from 'actions/types';\nimport ReplyChildrenBox from \"containers/replies/reply_children_page\";\nimport ReplyGrandChildrenBox from \"containers/replies/reply_grand_children_page\";\nimport ReplyGreatGrandChildBox from \"containers/replies/reply_great_grand_child_page\";\n\nimport { UserComponentSmall } from \"components/profile_components\";\n\n\nconst OptBtnSmallScreen = MatchMediaHOC(OpenModalButton, '(max-width: 500px)');\nconst OptBtnBigScreen = MatchMediaHOC(QuestionOptDropDownBtn, '(min-width: 800px)');\nconst api      = new Api();\n\n\n\nexport const RepliesComponent = props => {\n  // console.log(props.replyState)\n\n   let replyStyles = {\n         border     : 'px solid black',\n         margin     : '15px 22px',\n   }\n   \n   var replies   =   props.entyties.replies;\n   replies =  replies.byId[props.repliesById];\n   return(\n      <div>\n   \n         { replies.replyList.map( (reply, index) => { \n            let replyProps = {\n               reply,\n               byId : props.repliesById,\n               index,\n               replyStyles,\n               props\n            }\n                         \n         return (\n            <div key={index} >\n               { props.comment.id === reply.comment?\n                  <div  className=\"reply-container\">\n                     <div  className=\"reply-contents\"> \n                     \n                        <Reply {...replyProps}/>\n                \n                        { reply.has_children?\n                           <ReplyChildrenBox {...replyProps}/>\n       \n                           :\n                           \"\"\n                        }\n\n                     </div>\n\n                  </div>\n\n               :\"\"\n\n               }\n            </div>\n         )\n\n         }\n\n         )}\n\n      </div>\n\n\n   )\n}\n\n\n\n\n\nexport const ReplyChildernComponent = props => {\n  //console.log(props)\n\n  let replyStyles = {\n             \n               border     : 'px solid blue',\n               margin     : '15px 22px 10px  38px',\n   };\n     \n   var replies   =   props.entyties.replies;\n   replies =  replies.byId[props.replyChildrenById];\n\n   return(\n      <div >\n\n         { replies.replyList.map( (reply, index) => {\n            let replyProps = {\n               reply,\n               byId : props.replyChildrenById,\n               index,\n               replyStyles,\n               props\n            }\n            \n            return (\n\n               <div  key={index} >\n                    { props.childParent.id === reply.parent?\n\n                  <div className=\"reply-child-container\">\n                  \n                     <div className=\"reply-child-contents\"> \n                        <Reply {...replyProps}/>\n                     </div>\n\n                     { reply.has_children?\n                           <ReplyGrandChildrenBox {...replyProps}/>\n        \n                           :\n                           ''\n                     }\n\n                  </div>\n\n                  : \"\"\n                  } \n               </div> \n              ) \n            }\n\n         )}\n\n      </div>\n\n   )\n}\n\n\n\n\nexport const ReplyGrandChildernComponent = props => {\n \n  let replyStyles = {\n            border    : 'px solid red',\n            margin    : '15px 22px 10px 60px',\n         }\n\n   var replies   =   props.entyties.replies;\n   replies =  replies.byId[props.grandChildById];\n   return(\n         <div >\n\n            { replies.replyList.map( (reply, index) => {\n               let replyProps = {\n                  reply,\n                  byId : props.grandChildById, \n                  index,\n                  replyStyles,\n                  props\n               }\n               \n            return(  \n               <div  key={index}>\n                  { props.grandChildParent.id === reply.parent?\n                     <div className=\"reply-grand-child-container\">\n                        <div className=\"reply-grand-child-contents\"> \n                           <Reply {...replyProps }/>\n                        </div>\n                        { reply.has_children?\n                           <ReplyGreatGrandChildBox {...replyProps} />\n                              :\n                           ''\n                        }\n\n                     </div>\n                     :\n\n                     \"\"\n                  }\n\n               </div> \n            )\n            }\n\n           )}\n\n         </div>\n\n        \n   )\n}\n\n\n\n\nexport const ReplyGreatGrandChildComponent = props => {\n  console.log(props)\n\n  let replyStyles = {\n             \n              border     : 'px solid green',\n              margin     : '15px 22px 10px 75px'\n            }\n\n   var replies   =  props.entyties.replies;\n   replies =  replies.byId[props.byId];\n   var replyList =  replies.replyList;\n\n   return(\n         <div>\n\n            { replyList.map( (reply, index) => {\n               let replyProps = {reply,index,replyStyles,props}\n                \n                return(\n\n                <div  key={index}>\n                    { props.greatGrandChildParent.id === reply.parent?\n                        <div className=\"reply-great-grand-child-container\">\n                     \n                        <div className=\"reply-great-grand-child-contents\"> \n                          <Reply {...replyProps}/>\n  \n                        </div>\n                        \n                        { reply.has_children?\n                          \"\"\n                         :\n\n                        ''\n                        }\n\n                     </div>\n\n                  : \"\"\n                  }\n\n                 </div>  \n               )\n            }\n\n\n            )}\n\n         </div>\n\n        \n   )\n}\n\n\n\n\nexport const Reply = props => {\n   console.log(props)\n   let optionsBtnStyles = {\n              fontSize   : '11px',\n              background : ' #F5F5F5',\n              fontWeight : 'bold',\n              width      : '40px',\n              color      : '#4A4A4A',\n              margin     : '0 0 2px'\n   }\n\n   let {answer, post } = props.props;\n   var reply = props.reply;\n   let storedState = JSON.parse(reply.reply)\n   const contentState = convertFromRaw(storedState);\n   const editorState = EditorState.createWithContent(contentState);\n  \n   let state = {\n            reply,\n            usersIsFor : answer? 'answerReplyUpVoters' : 'postReplyUpVoters', \n        }\n\n   let pathToUpvoters =  `/reply/${reply.id}/upvoters/`;\n\n   var createApiUrl = '';\n   var updateUrl    = ''; \n   if (answer) {\n      updateUrl    = api.updateAnswerReplyApi(reply.id);\n      createApiUrl = api.createAnswerReplyChildApi(reply.id);\n      \n   }else if(post){\n      updateUrl    = api.updatePostReplyApi(reply.id);\n      createApiUrl = api.createPostReplyChildApi(reply.id);\n      \n   }\n     \n\n   let  modalOptionsProps = {\n      modalProps : {\n         objName    : 'reply',\n         actionType : types.UPDATE_REPLY,\n         isPut      : true,\n         obj        : reply, \n         apiUrl     : updateUrl,\n         objIndex   : props.index,\n         objId      : reply.id,\n         byId       : props.byId,\n      },\n      modalType : 'optionsMenu', \n   };\n   \n\n   let upvoteBtnProps = {\n      objName     : 'reply',\n      actionType  : types.UPDATE_REPLY,\n      isPut       : true,\n      obj         : reply, \n      objId       : reply.id,\n      objIndex    : props.index,\n      apiUrl      : updateUrl,\n      byId        : props.byId,\n   };\n   \n   let  createReplyProps = {\n      modalProps : {\n        objName           : 'reply',\n        actionType        : types.CREATE_REPLY,\n        obj               : reply,\n        objId             : reply.id,\n        isPost            : true,\n        editorPlaceHolder : 'Add Reply...',\n        apiUrl            : createApiUrl,\n        byId        : props.byId,\n        \n         \n      },\n      modalType : 'editor', \n          \n   };\n\n   let btnsProps = {\n         createReplyProps,\n         upvoteBtnProps,\n         modalOptionsProps,\n         btnStyles:optionsBtnStyles,\n         btnText : 'More', \n      }; \n\n   Object.assign(btnsProps, props.props)\n   let itemsCounter = <Link to={{pathname:pathToUpvoters,state }}>\n                         { reply.upvotes }  Upvotes\n                     </Link>;\n\n   let upvoteBtn =  reply.upvoted? <DownVoteReplytBtn {...btnsProps}/>\n               : <UpVoteReplyBtn {...btnsProps}/>\n\n   let replyBtn =  <ReplyBtn {...btnsProps}/>;\n                         \n              \n   let optionsBtn =  <div>\n                        <OptBtnSmallScreen {...btnsProps}/> \n                        <OptBtnBigScreen {...props}/>\n                     </div>;\n\n\n   const btnsList  = {\n        itemsCounter :  itemsCounter,\n        btn1         :  upvoteBtn,\n        btn2         :  replyBtn,\n        btn3         :  optionsBtn,\n      } \n \n\n\n   return (\n         <div style={ props.replyStyles}  className=\"reply-box\" id=\"reply-box\">\n            <div className=\"user-box\">\n\n              <UserComponentSmall {...\n                     {\n                        user         : reply.created_by,\n                        currentUser : props.props.currentUser, \n\n                     }\n                  }\n            />\n               \n            </div>\n\n\n            \n            <div className=\"reply\">\n               <Editor\n                 blockRendererFn={pageMediaBlockRenderer}\n                 editorState={editorState} \n                 readOnly={true} />\n            </div>\n            \n            \n          <ButtonsBox {...btnsList}/>\n\n\n         </div>\n    \n   )\n}\n\n\n\n\n\n\n\n\nexport const RepliesLink = props => {\n   //console.log(props)\n\n\n\n   let styles ={\n      border        : \"px solid #D5D7D5\",\n      display       : 'flex',\n      flexDirection : 'row',\n      margin        : '10px 60px',\n      padding       : '2px 2px 2px 7px',\n      borderRadius  : '20px',\n      background    : '#EEEEEE'\n   }\n  \n   let userStyles = {\n      display       : 'flex',\n      border        : 'px solid blue',\n      padding       : '2px',\n      listStyleType : 'none',\n      margin        : '0',\n   }\n\n\n  let itemStyles = {\n   display       : 'flex',\n   border        : 'px solid blue',\n   listStyleType : 'none',\n   margin        : '0',\n   padding       : '0',\n        \n  }\n\n   let imgStiles = {\n      borderRadius  : '50%',\n      width         : '17px',\n      height        : '19px',\n      \n       \n   }\n\n   let userNameStyles = {\n       border      : 'px solid blue',\n       fontSize    : '11px',\n       color       : '#2C2D2D',\n       fontFamily  : 'Mukta',\n       lineHeight  : '1.8',\n       margin      : '0 0 0 3px',\n   } \n\n   let totalRepliesStyles = {\n      border      : 'px solid red',\n      fontSize    : '9px',\n      margin      : '2px 0 0 10px',\n      lineHeight  : '1.8',\n   }\n\n   let textStyles = {\n      color       : 'black',\n      fontSize    : '9px',\n      border      : 'px solid black',\n      lineHeight  : '1.8',\n      margin      : '2px 0 0 4px',\n   }\n   \n   return (\n      <div style={styles} className=\"comments-link\">\n\n         <ul style={ userStyles}>\n            <li style={ imgStiles }>\n               { props.reply.created_by.profile.profile_picture === null?\n                  <img alt=\"\" src={require(\"images/user-avatar.png\")} className=\"profile-photo\"/>\n               :  \n                  <img alt=\"\" src={props.reply.created_by.profile.profile_picture}\n                         className=\"profile-photo\"/> \n               }\n\n            </li>\n            <li style={ userNameStyles } >\n               { props.reply.created_by.first_name }   { props.reply.created_by.last_name } ...\n            </li>\n         </ul>\n\n         <ul style={ itemStyles} >\n            <li style={ textStyles } > Replied </li>\n            <li style={totalRepliesStyles}> { props.totalReplies } Reply</li>\n         </ul>\n      </div>\n   )\n}\n\n\nexport const CommentsReplyLink = props => {\n   var byId = props.repliesById;\n   var replies   =  props.entyties.replies;\n   var linkData  =  replies.byId[byId].linkData;\n   var reply     =  linkData.reply;\n  \n   var apiUrl = '';\n   if (props.isAnswerBox) { \n     apiUrl = api.getAnswerReplyListApi(reply.comment);\n   }else{\n      apiUrl = api.getPostReplyListApi(reply.comment);\n   }\n\n   var replyProps = {\n      actionType: types.GET_REPLY_LIST,\n      apiUrl    : apiUrl,\n      byId,\n\n   }; \n   return(\n      <div  className=\"reply-link-box\"\n                  onClick={ () => props.getReplyList(replyProps) }> \n         <RepliesLink {...linkData}/>\n      </div> \n   );\n};\n\n\n\nexport const ChildRepliesLink = props => {\n   var byId = props.replyChildrenById;\n   var replyState = props.entyties.replies.byId[byId]\n   \n   var linkData  = replyState.linkData;\n   var reply =   props.childParent;\n    \n   var apiUrl = '';\n   if (props.isAnswerBox) { \n      apiUrl = api.getAnswerReplyChildrenListApi(reply.id);\n   }else{\n      apiUrl = api.getPostReplyChildrenListApi(reply.id);\n   }\n\n   var replyProps = {\n      actionType : types.GET_REPLY_CHILD_LIST,\n      apiUrl     : apiUrl,\n      byId,\n      children   : reply.children,\n   };\n\n   return(\n      <div onClick={ () => props.getReplyChildrenList(replyProps, reply.children) }> \n         <ul>\n            <li>Click to view More</li>\n            <li>{ linkData.totalReplies }</li>\n         </ul>\n      </div> \n   );\n};\n\n\nexport const GrandChildRepliesLink = props => {\n   var reply = props.grandChildParent;\n   var byId = props.grandChildById ;\n   var replies   = props.entyties.replies.byId[byId]\n   var linkData  = replies.linkData;\n  \n   var apiUrl    = '';\n\n   if (props.isAnswerBox) { \n      apiUrl = api.getAnswerReplyChildrenListApi(reply.id);\n   }else{\n      apiUrl = api.getPostReplyChildrenListApi(reply.id);\n   }\n\n   var replyProps = {\n      actionType : types.GET_REPLY_CHILD_LIST,\n      apiUrl     : apiUrl,\n      byId,\n      children  : reply.children,\n   }; \n\n   return(\n      <div onClick={ () => props.getReplyChildrenList(replyProps) }> \n           <ul>\n            <li>Click to view More</li>\n            <li>{ linkData.totalReplies }</li>\n         </ul>\n      </div> \n   );\n};\n\n\n\nexport const GreatGrandChildRepliesLink = props => {\n   var byId = props.byId;\n   var replyState = props.entyties.replies.byId[byId];\n\n   var linkData  = replyState.linkData;\n   var reply     = props.greatGrandChildParent;\n   var apiUrl = '';\n   \n   if (props.isAnswerBox) { \n      apiUrl = api.getAnswerReplyChildrenListApi(reply.id);\n   }else{\n      apiUrl = api.getPostReplyChildrenListApi(reply.id);\n   }\n\n   var replyProps = {\n      actionType: types.GET_REPLY_CHILD_LIST,\n      apiUrl    : apiUrl,\n      byId,\n      \n   }; \n   return(\n      <div onClick={ () => props.getReplyChildrenList(replyProps) }> \n         <ul>\n            <li>Click to view More</li>\n            <li>{ linkData.totalReplies }</li>\n         </ul>\n      </div> \n   );\n};\n\n\n\nexport const ReplyDropDownMenu = props => (\n   <BrowserRouter>\n      <div>\n         <button className=\"btn-sm answer-option options-btn \" id=\"questionMenuButton\"\n              data-toggle=\"dropdown\" aria-haspopup=\"false\" aria-expanded=\"true\" type=\"button\" >\n              <i className=\"material-icons \">more_horiz</i>\n         </button>\n         <div className=\"dropdown-menu\" aria-labelledby=\"questionMenuButton\">\n            <ReplyOptModalBtns {...props} />\n         </div>\n      </div>\n  </BrowserRouter>\n \n)\n\n\n\nexport const ReplyModalMenu = props => (\n   <BrowserRouter>\n    <div className=\"modal-menu \">\n      <ModalCloseBtn/>\n      <ReplyOptModalBtns {...props} />      \n   </div>\n   </BrowserRouter>\n) \n\n\n\n\n"]},"metadata":{},"sourceType":"module"}