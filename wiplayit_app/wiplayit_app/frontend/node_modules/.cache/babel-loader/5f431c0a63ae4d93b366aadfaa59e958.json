{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/users/user_list_page.js\";\nimport React, { Component } from 'react';\nimport withMain from 'containers/higher-order-components/main';\nimport { UserList } from \"components/profile_components\";\nimport { PartalNavigationBar } from \"components/navBar\";\nimport AjaxLoader from \"components/ajax-loader\";\nimport * as action from 'actions/actionCreators';\nimport { store } from \"index\";\nimport Api from 'api';\nconst api = new Api();\n\nclass UserListBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersById: \"allUsersList\",\n      pageName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    var usersById = \"\";\n    let pageName = 'Upvoters';\n    var apiUrl = ''; //api.getQuestionFollowersListApi(question.id)\n\n    if (this.props.location && this.props.location.state) {\n      var _this$props$location$ = this.props.location.state,\n          questionObj = _this$props$location$.questionObj,\n          post = _this$props$location$.post,\n          answer = _this$props$location$.answer,\n          comment = _this$props$location$.comment,\n          reply = _this$props$location$.reply,\n          userProfile = _this$props$location$.userProfile,\n          isAnswerBox = _this$props$location$.isAnswerBox,\n          isPostBox = _this$props$location$.isPostBox,\n          isPostListBox = _this$props$location$.isPostListBox,\n          isUsersList = _this$props$location$.isUsersList,\n          isUserFollowers = _this$props$location$.isUserFollowers,\n          isUserFollowings = _this$props$location$.isUserFollowings;\n\n      if (answer) {\n        apiUrl = api.getAnswerUpVotersListApi(answer.id);\n      } else if (comment) {\n        if (isAnswerBox) {\n          usersById = \"answerCommentUpVoters\".concat(comment.id);\n          apiUrl = api.getAnswerCommentUpVotersListApi(comment.id);\n        } else {\n          usersById = \"postCommentUpVoters\".concat(comment.id);\n          apiUrl = api.getPostCommentUpVotersListApi(comment.id);\n        }\n      } else if (reply) {\n        if (isAnswerBox) {\n          usersById = \"answerReplyUpVoters\".concat(reply.id);\n          apiUrl = api.getAnswerReplyUpVotersListApi(reply.id);\n        } else if (isPostBox || isPostListBox) {\n          usersById = \"postReplyUpVoters\".concat(reply.id);\n          apiUrl = api.getPostReplyUpVotersListApi(reply.id);\n        }\n      } else if (post) {\n        usersById = \"postUpVoters\".concat(post.id);\n        apiUrl = api.getPostUpVotersListApi(post.id);\n      } else if (questionObj) {\n        pageName = 'Followers';\n        usersById = \"questionFollowers\".concat(questionObj.id);\n        apiUrl = api.getQuestionFollowersListApi(questionObj.id);\n      } else if (userProfile) {\n        if (isUserFollowers) {\n          pageName = 'Followers';\n          usersById = \"userProfileFollowers\".concat(userProfile.id);\n          apiUrl = api.getUserFollowersListApi(userProfile.id);\n        } else if (isUserFollowings) {\n          pageName = 'Followings';\n          usersById = \"answerReplyUpVoters\".concat(userProfile.id);\n          apiUrl = api.getUserFollowingsListApi(userProfile.id);\n        }\n      } else if (isUsersList) {\n        pageName = 'Users';\n        apiUrl = api.getUserListApi();\n      }\n\n      usersById = usersById ? usersById : this.state.usersById;\n      this.setState({\n        usersById,\n        pageName\n      });\n      this.props.getUserList({\n        usersById,\n        apiUrl\n      });\n    } else {\n      if (this.props.isUserFollowers) {\n        usersById = \"userFollowers\".concat(this.props.userProfile.id);\n      } else {\n        usersById = \"userFollowings\".concat(this.props.userProfile.id);\n      }\n\n      store.dispatch(action.getUserListPending(usersById));\n      store.dispatch(action.getUserListSuccess(usersById, this.props.userList));\n    }\n  }\n\n  prepareUserFollowersProps(userProfile, params) {\n    var _this$props$location$2 = this.props.location.state,\n        isUserFollowings = _this$props$location$2.isUserFollowings,\n        isUserFollowers = _this$props$location$2.isUserFollowers;\n\n    if (isUserFollowers) {\n      params.pageName = 'Followers';\n      params.usersById = \"userProfileFollowers\".concat(userProfile.id);\n      params.piUrl = api.getUserFollowersListApi(userProfile.id);\n    } else if (isUserFollowings) {\n      params.pageName = 'Followings';\n      params.usersById = \"answerReplyUpVoters\".concat(userProfile.id);\n      params.apiUrl = api.getUserFollowingsListApi(userProfile.id);\n    }\n\n    return params;\n  }\n\n  prepareQuestionFollowersProps(params) {\n    var question = params.question,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n    var pageName = 'Followers';\n    usersById = \"questionFollowers\".concat(question.id);\n    apiUrl = api.getQuestionFollowersListApi(question.id);\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  preparePostUpVotersProps(params) {\n    var post = params.post,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n    usersById = \"postUpVoters\".concat(post.id);\n    apiUrl = api.getPostUpVotersListApi(post.id);\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  prepareAnswerUpVotersProps(params) {\n    var answer = params.answer,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n    usersById = \"postUpVoters\".concat(answer.id);\n    apiUrl = api.getAnswerUpVotersListApi(answer.id);\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  prepareCommentUpVotersProps(params) {\n    var comment = params.comment,\n        isAnswerBox = params.isAnswerBox,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n\n    if (isAnswerBox) {\n      usersById = \"answerCommentUpVoters\".concat(comment.id);\n      apiUrl = api.getAnswerCommentUpVotersListApi(comment.id);\n    } else {\n      usersById = \"postCommentUpVoters\".concat(comment.id);\n      apiUrl = api.getPostCommentUpVotersListApi(comment.id);\n    }\n\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  prepareReplyUpVotersProps(params) {\n    var reply = params.reply,\n        isAnswerBox = params.isAnswerBox,\n        usersById = params.usersById,\n        apiUrl = params.apiUrl;\n\n    if (isAnswerBox) {\n      usersById = \"answerReplyUpVoters\".concat(reply.id);\n      apiUrl = api.getAnswerReplyUpVotersListApi(reply.id);\n    } else {\n      usersById = \"postReplyUpVoters\".concat(reply.id);\n      apiUrl = api.getPostReplyUpVotersListApi(reply.id);\n    }\n\n    return {\n      usersById,\n      apiUrl\n    };\n  }\n\n  getProps() {\n    let props = {\n      pageName: this.state.pageName,\n      usersById: this.state.usersById\n    };\n    return Object.assign(props, this.props);\n  }\n\n  render() {\n    var props = this.getProps();\n    console.log(props);\n    var usersById = props.usersById;\n    const users = props.entyties.users.byId[usersById]; //userProfile = userProfile.user;\n\n    console.log(users);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(PartalNavigationBar, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), users ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, users.isLoading ? React.createElement(\"div\", {\n      className: \"page-spin-loder-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(AjaxLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      style: {\n        paddingTop: '70px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(UserList, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })))) : \"\");\n  }\n\n}\n\n;\nexport default withMain(UserListBox);","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/users/user_list_page.js"],"names":["React","Component","withMain","UserList","PartalNavigationBar","AjaxLoader","action","store","Api","api","UserListBox","constructor","props","state","usersById","pageName","componentDidMount","console","log","apiUrl","location","questionObj","post","answer","comment","reply","userProfile","isAnswerBox","isPostBox","isPostListBox","isUsersList","isUserFollowers","isUserFollowings","getAnswerUpVotersListApi","id","getAnswerCommentUpVotersListApi","getPostCommentUpVotersListApi","getAnswerReplyUpVotersListApi","getPostReplyUpVotersListApi","getPostUpVotersListApi","getQuestionFollowersListApi","getUserFollowersListApi","getUserFollowingsListApi","getUserListApi","setState","getUserList","dispatch","getUserListPending","getUserListSuccess","userList","prepareUserFollowersProps","params","piUrl","prepareQuestionFollowersProps","question","preparePostUpVotersProps","prepareAnswerUpVotersProps","prepareCommentUpVotersProps","prepareReplyUpVotersProps","getProps","Object","assign","render","users","entyties","byId","isLoading","paddingTop"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport withMain  from 'containers/higher-order-components/main';\nimport { UserList } from \"components/profile_components\";\nimport {PartalNavigationBar} from \"components/navBar\";\nimport  AjaxLoader from \"components/ajax-loader\";\nimport  * as action  from 'actions/actionCreators';\nimport {store} from \"index\";\n\n\nimport Api from 'api';\n\nconst api = new Api();\n\n\n  \n\nclass UserListBox extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n         usersById : `allUsersList`,\n         pageName       : \"\",\n      }\n   };\n  \n  \n   componentDidMount() {\n      console.log(this.props)\n      var usersById = ``;\n      let  pageName  = 'Upvoters';\n      var apiUrl = ''; //api.getQuestionFollowersListApi(question.id)\n         \n\n      if (this.props.location && this.props.location.state) {\n         var {\n               questionObj,\n               post,\n               answer,\n               comment,\n               reply,\n               userProfile,\n               isAnswerBox,\n               isPostBox,\n               isPostListBox,\n               isUsersList,\n               isUserFollowers,\n               isUserFollowings,\n\n            } = this.props.location.state;\n\n         if (answer) {\n            apiUrl = api.getAnswerUpVotersListApi(answer.id)\n         }\n\n         else if(comment){\n            if (isAnswerBox) {\n               usersById = `answerCommentUpVoters${comment.id}`;\n               apiUrl = api.getAnswerCommentUpVotersListApi(comment.id)\n            }\n            else{\n               usersById = `postCommentUpVoters${comment.id}`;\n               apiUrl = api.getPostCommentUpVotersListApi(comment.id)\n            }\n\n            }\n\n            else if(reply) {\n               if (isAnswerBox) {\n                  usersById = `answerReplyUpVoters${reply.id}`;\n                  apiUrl = api.getAnswerReplyUpVotersListApi(reply.id)\n               }\n               else if(isPostBox || isPostListBox) {\n                  usersById = `postReplyUpVoters${reply.id}`;\n                  apiUrl = api.getPostReplyUpVotersListApi(reply.id);\n               }\n            }\n\n            else if(post){\n               usersById = `postUpVoters${post.id}`;\n               apiUrl   = api.getPostUpVotersListApi(post.id)\n            }\n            else if(questionObj){\n               pageName = 'Followers';\n               usersById = `questionFollowers${questionObj.id}`;\n               apiUrl  = api.getQuestionFollowersListApi(questionObj.id)\n            }\n\n            else if(userProfile){\n               if (isUserFollowers) {\n                  pageName = 'Followers';\n                  usersById = `userProfileFollowers${userProfile.id}`;\n                  apiUrl   = api.getUserFollowersListApi(userProfile.id)\n               }\n               else if(isUserFollowings){\n                  pageName = 'Followings';\n                  usersById = `answerReplyUpVoters${userProfile.id}`;\n                  apiUrl   = api.getUserFollowingsListApi(userProfile.id)\n               }\n            }\n\n\n            else if(isUsersList) {\n               pageName = 'Users';\n               apiUrl   = api.getUserListApi()\n            }\n\n            usersById = usersById? usersById : this.state.usersById;\n \n            this.setState({usersById, pageName })\n            this.props.getUserList({usersById, apiUrl})\n         }\n\n         else{\n            \n            \n            if (this.props.isUserFollowers) {\n               usersById = `userFollowers${this.props.userProfile.id}`;\n            }else{\n               usersById =  `userFollowings${this.props.userProfile.id}`;\n            }\n\n            store.dispatch(action.getUserListPending(usersById));\n            store.dispatch(action.getUserListSuccess(usersById, this.props.userList));\n         }\n\n      };\n\n    prepareUserFollowersProps(userProfile, params ){\n        var { isUserFollowings, isUserFollowers } = this.props.location.state;\n\n        if (isUserFollowers) {\n\n            params.pageName  = 'Followers';\n            params.usersById = `userProfileFollowers${userProfile.id}`;\n            params.piUrl     = api.getUserFollowersListApi(userProfile.id)\n        }\n\n        else if(isUserFollowings){\n\n            params.pageName  = 'Followings';\n            params.usersById = `answerReplyUpVoters${userProfile.id}`;\n            params.apiUrl    = api.getUserFollowingsListApi(userProfile.id);\n\n        }\n        return params;\n    };\n      \n   \n\n    prepareQuestionFollowersProps( params ) {\n\n       var  {question, usersById, apiUrl } = params\n\n        var pageName = 'Followers';\n        usersById = `questionFollowers${question.id}`;\n        apiUrl  = api.getQuestionFollowersListApi(question.id);\n\n        return { usersById, apiUrl };\n    }\n\n    preparePostUpVotersProps( params ){\n\n        var { post, usersById, apiUrl } = params;\n\n        usersById = `postUpVoters${post.id}`;\n        apiUrl   = api.getPostUpVotersListApi(post.id);\n       \n        return { usersById, apiUrl };\n    }\n\n    prepareAnswerUpVotersProps(params){\n\n        var {answer, usersById, apiUrl } = params;\n\n        usersById = `postUpVoters${answer.id}`;\n        apiUrl   = api.getAnswerUpVotersListApi(answer.id)\n\n        return {usersById, apiUrl};\n      \n    }\n\n    prepareCommentUpVotersProps(params){\n\n        var {comment, isAnswerBox, usersById, apiUrl} = params;\n        if (isAnswerBox) {\n\n            usersById  = `answerCommentUpVoters${comment.id}`;\n            apiUrl     = api.getAnswerCommentUpVotersListApi(comment.id)\n\n        }\n        else{\n\n            usersById = `postCommentUpVoters${comment.id}`;\n            apiUrl    = api.getPostCommentUpVotersListApi(comment.id)\n        }\n\n        return { usersById, apiUrl};\n    };\n\n    prepareReplyUpVotersProps(params){\n        var {reply, isAnswerBox, usersById, apiUrl} = params;\n\n        if (isAnswerBox) {\n\n            usersById = `answerReplyUpVoters${reply.id}`;\n            apiUrl = api.getAnswerReplyUpVotersListApi(reply.id);\n\n        }\n        else {\n\n            usersById = `postReplyUpVoters${reply.id}`;\n            apiUrl = api.getPostReplyUpVotersListApi(reply.id);\n        }\n\n        return { usersById, apiUrl};\n      \n    }\n\n\n\n\n     \n           \n   getProps(){\n      let props = {\n         pageName       : this.state.pageName,\n         usersById      : this.state.usersById,\n      };\n      return Object.assign(props, this.props);\n   };\n\n   render() {\n      var props = this.getProps()\n      console.log(props)\n      var usersById = props.usersById;\n      const users = props.entyties.users.byId[usersById];\n      //userProfile = userProfile.user;\n      console.log(users)\n   \n      return (\n          <div>\n            <PartalNavigationBar {...props}/>\n            {users?\n               <div>\n                  {users.isLoading?\n                     <div className=\"page-spin-loder-box\">\n                        <AjaxLoader/>\n                     </div>\n                    :\n                    <div style={{ paddingTop : '70px'}}>\n                     <UserList {...props}/>\n                     </div>\n                  }\n               </div>\n               :\n               \"\"\n            }\n          </div>\n      )\n   };\n};\n\n\n\nexport default withMain(UserListBox);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}