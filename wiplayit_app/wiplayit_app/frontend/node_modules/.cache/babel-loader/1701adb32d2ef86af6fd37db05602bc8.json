{"ast":null,"code":"var _jsxFileName = \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_great_grand_child_page.js\";\nimport React, { Component } from 'react';\nimport AjaxLoader from \"components/ajax-loader\";\nimport * as action from 'actions/actionCreators';\nimport * as types from 'actions/types';\nimport { store } from \"index\";\nimport { Reply } from \"components/reply_components\";\nimport Api from 'api';\nconst api = new Api();\n\nclass ReplyGreatGrandChildBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReplyGreatGrandChildBox: true,\n      byId: ''\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    var reply = this.props.reply;\n\n    if (reply) {\n      var byId = \"replyGreateGrandChild\".concat(reply.id);\n      this.setState({\n        byId\n      });\n      var props = {\n        actionType: 'GET_REPLY_CHILD_LINK_DATA',\n        reply,\n        byId\n      };\n      store.dispatch(action.getReplyChildLindData(props));\n    }\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  componentDidUpdate(nextProps, prevState) {}\n\n  getProps() {\n    let props = {\n      isReplyGreatGrandChildBox: this.state.isReplyGreatGrandChildBox,\n      greatGrandChildParent: this.props.reply,\n      byId: this.state.byId\n    };\n    return Object.assign(props, this.props.props);\n  }\n\n  render() {\n    let props = this.getProps();\n    var replyParent = this.props.reply;\n    let byId = this.state.byId;\n    var replies = props.entyties.replies;\n    replies = replies.byId[byId];\n    console.log(replies);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\nexport default ReplyGreatGrandChildBox;\n\nconst ChildrenLinkComponent = props => {\n  var replyParent = this.props.reply;\n  var byId = \"replyGreateGrandChild\".concat(replyParent.id);\n  var replies = props.entyties.replies;\n  replies = replies.byId[byId];\n  var apiUrl = '';\n\n  if (props.isAnswerBox && replies) {\n    apiUrl = api.getAnswerReplyChildrenListApi(replyParent.id);\n  } else {\n    apiUrl = api.getPostReplyChildrenListApi(replyParent.id);\n  }\n\n  var replyProps = {\n    actionType: types.GET_REPLY_CHILD_LIST,\n    apiUrl: apiUrl,\n    byId: props.byId\n  };\n  return React.createElement(\"div\", {\n    onClick: () => props.getReplyChildrenList(replyProps),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Click to view More\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, replies.linkData.totalReplies)));\n};\n\nconst GraetGrandChildComponent = props => {\n  let replyStyles = {\n    border: 'px solid green',\n    margin: '15px 22px 10px 75px'\n  };\n  var replyParent = this.props.reply;\n  var byId = \"replyGreateGrandChild\".concat(replyParent.id);\n  var replies = props.entyties.replies;\n  replies = replies.byId[byId];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, replies.replyList.map((reply, index) => {\n    let replyProps = {\n      reply,\n      index,\n      replyStyles,\n      props\n    };\n    console.log(replyProps);\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, replyParent.id === reply.parent ? React.createElement(\"div\", {\n      className: \"reply-great-grand-child-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reply-great-grand-child-contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Reply, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))), reply.has_children ? React.createElement(ReplyGreatGrandChildBox, Object.assign({}, replyProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })) : '') : \"\");\n  })));\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/containers/replies/reply_great_grand_child_page.js"],"names":["React","Component","AjaxLoader","action","types","store","Reply","Api","api","ReplyGreatGrandChildBox","constructor","props","state","isReplyGreatGrandChildBox","byId","componentDidMount","console","log","reply","id","setState","actionType","dispatch","getReplyChildLindData","componentDidCatch","error","info","componentDidUpdate","nextProps","prevState","getProps","greatGrandChildParent","Object","assign","render","replyParent","replies","entyties","ChildrenLinkComponent","apiUrl","isAnswerBox","getAnswerReplyChildrenListApi","getPostReplyChildrenListApi","replyProps","GET_REPLY_CHILD_LIST","getReplyChildrenList","linkData","totalReplies","GraetGrandChildComponent","replyStyles","border","margin","replyList","map","index","parent","has_children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  AjaxLoader from \"components/ajax-loader\";\nimport  * as action  from 'actions/actionCreators';\nimport  * as types  from 'actions/types';\n\nimport {store} from \"index\";\nimport {Reply } from \"components/reply_components\";\nimport Api from 'api';\n\n\n \nconst api      = new Api();\n\n\n\n\nclass ReplyGreatGrandChildBox extends Component {\n\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         isReplyGreatGrandChildBox : true,\n         byId                     : '',\n      };\n   };\n\n\n   componentDidMount() {\n      console.log(this.props)\n      var reply  = this.props.reply;\n      if (reply) {\n         var byId = `replyGreateGrandChild${reply.id}`;\n         this.setState({byId});\n\n         var props = {\n            actionType : 'GET_REPLY_CHILD_LINK_DATA',\n            reply,\n            byId,\n         }\n         store.dispatch(action.getReplyChildLindData(props)); \n      }\n     \n   };\n\n   componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  } \n\n   componentDidUpdate(nextProps, prevState) {\n      \n   }; \n  \n   getProps() {\n      let props = {\n         isReplyGreatGrandChildBox  : this.state.isReplyGreatGrandChildBox,\n         greatGrandChildParent      : this.props.reply,\n         byId                       : this.state.byId,\n      } \n      return Object.assign(props, this.props.props);\n   };\n\n\n   render() {\n\n      let props       =  this.getProps();\n      var replyParent =  this.props.reply;\n      let byId        =  this.state.byId;\n      var replies     =  props.entyties.replies;\n      replies         =  replies.byId[byId];  \n\n      console.log(replies)   \n      \n      return (\n         <div>\n           \n         </div>   \n      ) \n   };\n  \n};\n\n\nexport default ReplyGreatGrandChildBox;\n\n\n\n\nconst ChildrenLinkComponent = props =>{\n   var replyParent =  this.props.reply;\n   var byId        = `replyGreateGrandChild${replyParent.id}`;\n   \n   var replies     =  props.entyties.replies;\n   replies         =  replies.byId[byId];  \n\n\n\n\n   var apiUrl = '';\n\n   if (props.isAnswerBox && replies) { \n      apiUrl = api.getAnswerReplyChildrenListApi(replyParent.id);\n\n   }\n\n   else{\n      apiUrl = api.getPostReplyChildrenListApi(replyParent.id);\n   }\n\n   var replyProps = {\n      actionType: types.GET_REPLY_CHILD_LIST,\n      apiUrl    : apiUrl,\n      byId      : props.byId,\n   };\n\n   return(\n      <div onClick={ () => props.getReplyChildrenList(replyProps) }> \n         <ul>\n            <li>Click to view More</li>\n            <li>{ replies.linkData.totalReplies }</li>\n         </ul>\n      </div> \n   );\n};\n\n\n\nconst GraetGrandChildComponent = props => {\n\n   let replyStyles = { border     : 'px solid green',\n                          margin     : '15px 22px 10px 75px' };\n                          \n   \n   var replyParent =  this.props.reply;\n   var byId        = `replyGreateGrandChild${replyParent.id}`;\n   \n   var replies     =  props.entyties.replies;\n   replies         =  replies.byId[byId]; \n\n   return(\n\n      <div>\n         <div>\n            { replies.replyList.map( (reply, index) => {\n\n               let replyProps = {reply,index,replyStyles,props}\n               console.log(replyProps)\n\n         \n               return(\n                  <div  key={index}>\n                     { replyParent.id === reply.parent?\n\n                        <div className=\"reply-great-grand-child-container\">\n\n                           <div className=\"reply-great-grand-child-contents\"> \n                              <Reply {...replyProps}/>\n                           </div>\n\n                           { reply.has_children?\n                              <ReplyGreatGrandChildBox {...replyProps}/>\n                              :\n                              ''\n                           }\n\n                        </div>\n\n                        :\n                        \"\"\n                     }\n                  </div>\n               )\n\n            })}\n         </div>\n      </div>\n\n   )\n}"]},"metadata":{},"sourceType":"module"}