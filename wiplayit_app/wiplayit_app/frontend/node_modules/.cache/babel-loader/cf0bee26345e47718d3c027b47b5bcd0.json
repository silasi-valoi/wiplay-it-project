{"ast":null,"code":"import _defineProperty from \"/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Helper from 'containers/utils/helpers';\nimport * as types from 'actions/types';\nconst helper = new Helper();\n/*\nconst populateInitialState = (params)=> {\n    \n\n   var questions = {\n         isLoading          : false,\n         question           : \"\",\n         newObject          : \"\",\n         answerList         : [],\n         answer             : \"\",  \n         questionHasAnswer  : false,\n         userHasAnswer      : false,\n         visited            : false,\n         error              : '',\n      }\n}*/\n\nconst InitialState = () => {\n  return {\n    userAuth: {\n      isOnSignUpForm: false,\n      isOnPasswordResetForm: false,\n      isLoading: false,\n      auth: {\n        tokenKey: \"\",\n        isLoggedIn: false\n      }\n    },\n    currentUser: {\n      user: \"\"\n    },\n    userProfile: {\n      byId: {},\n      allIds: []\n    },\n    users: {\n      byId: {},\n      allIds: []\n    },\n    index: {\n      isLoading: false,\n      error: ''\n    },\n    questions: {\n      byId: {},\n      allIds: []\n    },\n    posts: {\n      byId: {},\n      allIds: []\n    },\n    question: {\n      byId: {},\n      allIds: []\n    },\n    post: {\n      byId: {},\n      allIds: []\n    },\n    answers: {\n      byId: {},\n      allIds: []\n    },\n    comments: {\n      byId: {},\n      allIds: []\n    },\n    replies: {\n      byId: {},\n      allIds: []\n    }\n  };\n};\n\nexport function entyties(state = InitialState(), action) {\n  switch (action.type) {\n    case types.USER_AUTHENTICATION.PENDING:\n      alert(action.type);\n      Object.assign(state, action.payload);\n      return state;\n\n    case types.USER_AUTHENTICATION.SUCCESS:\n      Object.assign(state.userAuth, action.payload);\n      return state;\n\n    case types.USER_AUTHENTICATION.ERROR:\n      Object.assign(state.userAuth, action.payload);\n      return state;\n\n    case types.TOGGLE.SIGNUP_FORM:\n      Object.assign(state.userAuth, action.payload);\n      return state;\n\n    case types.TOGGLE.PASSWORD_RESET_FORM:\n      Object.assign(state.userAuth, action.payload);\n      return state;\n\n    case types.GET_CURRENT_USER.SUCCESS:\n      Object.assign(state.currentUser, action.payload);\n      return state;\n\n    case types.GET_CURRENT_USER.ERROR:\n      Object.assign(state.currentUser, action.payload);\n      return state;\n\n    case types.GET_CURRENT_USER.PENDING:\n      Object.assign(state.currentUser, action.payload);\n      return state;\n\n    case types.GET_USER_PROFILE.PENDING:\n      //console.log(action.payload) \n      if (!state.userProfile.byId[action.profileById]) {\n        Object.defineProperty(state.userProfile.byId, action.profileById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_USER_PROFILE.SUCCESS:\n      //console.log(action.payload) \n      Object.assign(state.userProfile.byId[action.profileById], action.payload);\n      return state;\n\n    case types.GET_USER_PROFILE.ERROR:\n      Object.assign(state.userProfile.byId[action.profileById], action.payload);\n      return state;\n\n    case types.GET_USER_LIST.PENDING:\n      console.log(state, action);\n\n      if (!state.users.byId[action.byId]) {\n        Object.defineProperty(state.users.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_USER_LIST.SUCCESS:\n      Object.assign(state.users.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_USER_LIST.ERROR:\n      Object.assign(state.users.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_INDEX.PENDING:\n      Object.assign(state.index, action.payload);\n      return state;\n\n    case types.GET_INDEX.SUCCESS:\n      //console.log(state, action)\n      Object.assign(state.index, action.payload);\n      return state;\n\n    case types.GET_INDEX.ERROR:\n      Object.assign(state.index, action.payload);\n      return state;\n\n    case types.GET_QUESTION_LIST.PENDING:\n      //console.log(state, action)\n      if (!state.questions.byId[action.byId]) {\n        Object.defineProperty(state.questions.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION_LIST.SUCCESS:\n      Object.assign(state.questions.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_QUESTION_LIST.ERROR:\n      Object.assign(state.questions.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_QUESTION.PENDING:\n      if (!state.question.byId[action.questionById]) {\n        Object.defineProperty(state.question.byId, action.questionById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION.SUCCESS:\n      var question = action.payload.question;\n      var answerById = \"answer\".concat(question.id);\n      var answerState = {\n        answerList: question.answers,\n        newObject: \"\",\n        isLoading: false,\n        visited: false,\n        error: ''\n      };\n      Object.assign(state.question.byId[action.questionById], action.payload);\n\n      if (question.answers.length) {\n        Object.defineProperty(state.answers.byId, answerById, {\n          value: answerState\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION.ERROR:\n      if (state.question.byId[action.questionById]) {\n        Object.assign(state.question.byId[action.questionById], action.payload);\n      }\n\n      return state;\n\n    case types.GET_POST_LIST.PENDING:\n      //console.log(state, action)\n      if (!state.posts.byId[action.byId]) {\n        Object.defineProperty(state.posts.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_POST_LIST.SUCCESS:\n      //console.log(state, action)\n      Object.assign(state.posts.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_POST_LIST.ERROR:\n      Object.assign(state.posts.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_POST.PENDING:\n      if (!state.post.byId[action.postById]) {\n        Object.defineProperty(state.post.byId, action.postById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_POST.SUCCESS:\n      var post = action.payload.post; //var commentById = `commentsPost${post.id}`;\n\n      console.log(state, post);\n      /*\n      var commentsState = {\n         commentList      : post.comments,\n         showLink         : post.comments.length?true:false,\n         isLoading        : false,\n         error            : '',\n         linkData : {\n            comment       : post.comments[0],\n            numOfComments : post.comments.length,\n         },\n      };*/\n\n      Object.assign(state.post.byId[action.postById], action.payload);\n\n      if (post.comments.length) {//Object.defineProperty(state.comments.byId, commentById, {value : commentsState});\n      }\n\n      return state;\n\n    case types.GET_POST.ERROR:\n      Object.assign(state.post.byId[action.postById], action.payload);\n      return state;\n\n    case types.GET_ANSWER_LIST.PENDING:\n      if (!state.answers.byId[action.byId]) {\n        Object.defineProperty(state.answers.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_ANSWER_LIST.SUCCESS:\n      //console.log(state.answers, action)\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_ANSWER_LIST.ERROR:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case 'GET_COMMENT_LINK_DATA':\n      if (!state.comments.byId[action.byId]) {\n        Object.defineProperty(state.comments.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.comments.allIds, action.byId, {\n          value: state.comments.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case 'GET_REPLY_LINK_DATA':\n      //console.log(action)\n      if (!state.replies.byId[action.byId]) {\n        Object.defineProperty(state.replies.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.replies.allIds, action.byId, {\n          value: state.replies.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case 'GET_REPLY_CHILD_LINK_DATA':\n      //console.log(action, state.replies)\n      if (!state.replies.byId[action.byId]) {\n        Object.defineProperty(state.replies.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.replies.allIds, action.byId, {\n          value: state.replies.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case types.CREATE_QUESTION.PENDING:\n      console.log(action);\n      var questionById = action.ById ? action.ById : \"creatingNewQuestion\";\n\n      if (!state.question.byId[questionById]) {\n        Object.defineProperty(state.question.byId, action.ById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.CREATE_QUESTION.SUCCESS:\n      Object.assign(state.question.byId[action.ById], state, action.payload);\n      return state;\n\n    case types.CREATE_QUESTION.ERROR:\n      console.log(action); //Object.assign(state.question.byId[action.ById], action.payload);\n\n      return state;\n\n    case 'VIEW_NEW_QUESTION':\n      Object.assign(state.question.byId[action.questionById], action.payload);\n      return state;\n\n    case types.CREATE_ANSWER.PENDING:\n      if (!state.answers.byId[action.ById]) {\n        Object.defineProperty(state.answers.byId, action.ById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.CREATE_ANSWER.SUCCESS:\n      Object.assign(state.answers.byId[action.ById], action.payload);\n      return state;\n\n    case types.CREATE_ANSWER.ERROR:\n      Object.assign(state.answers.byId[action.ById], action.payload);\n      return state;\n\n    /* \n     case types.CREATE_COMMENT.PENDING:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;\n      case types.CREATE_COMMENT.SUCCESS:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;\n     \n     case types.CREATE_COMMENT.ERROR:\n       Object.assign(state.comments.byId[action.commentById], action.payload)\n       return state;  \n       */\n\n    case types.GET_COMMENT_LIST.PENDING:\n      //console.log(action)\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_LIST.PENDING:\n      //console.log(action)\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.PENDING:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.SUCCESS:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.ERROR:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    /*\n    case types.CREATE_REPLY.PENDING:\n    Object.assign(state.replies.byId[action.replyById], action.payload)\n    return state;\n    case types.CREATE_REPLY.SUCCESS:\n    Object.assign(state.replies.byId[action.replyById], state, action.payload)\n    return state;\n        case types.CREATE_REPLY.ERROR:\n    Object.assign(state.replies.byId[action.replyById], action.payload)\n    return state;  \n    */\n\n    case types.UPDATE_USER_PROFILE.PENDING:\n      if (state.userProfile.byId[action.byId]) {\n        var userProfile = state.userProfile.byId[action.byId];\n\n        if (userProfile.user && userProfile.user.user_is_following) {\n          userProfile.user.user_is_following = false;\n        } else {\n          userProfile.user.user_is_following = true;\n        }\n\n        Object.assign(state.userProfile.byId[action.byId], userProfile);\n      }\n\n      return state;\n\n    case types.UPDATE_USER_PROFILE.SUCCESS:\n      Object.assign(state.userProfile.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_USER_PROFILE.ERROR:\n      var profileToUpdate = state.userProfile.byId[action.byId];\n\n      if (profileToUpdate && profileToUpdate.user && profileToUpdate.user.user_is_following) {\n        profileToUpdate.user.is_following = true;\n      } else {\n        profileToUpdate.user.is_following = false;\n      }\n\n      Object.assign(state.userProfile.byId[action.byId], _objectSpread({}, profileToUpdate, {\n        error: action.payload\n      }));\n      return state;\n\n    case types.UPDATE_USER_LIST.PENDING:\n      if (state.users.byId[action.byId]) {\n        Object.assign(state.users.byId[action.byId], action.payload);\n      }\n\n      return state;\n\n    case types.UPDATE_USER_LIST.SUCCESS:\n      var userUpdate = action.payload.user;\n      var usersToUpdate = state.users.byId[action.byId];\n      helper.updateReducerListEntynties(usersToUpdate.userList, userUpdate);\n      return state;\n\n    case types.UPDATE_USER_LIST.ERROR:\n      Object.assign(state.users.byId[action.byId], {\n        error: action.payload\n      });\n      return state;\n\n    case types.UPDATE_QUESTION.PENDING:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_QUESTION.SUCCESS:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_QUESTION.ERROR:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_ANSWER.PENDING:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_ANSWER.SUCCESS:\n      let updatedAnswer = action.payload.answer;\n      var answers = state.answers.byId[action.byId];\n      helper.updateReducerListEntynties(answers.answerList, updatedAnswer);\n      return state;\n\n    case types.UPDATE_ANSWER.ERROR:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_COMMENT.PENDING:\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_COMMENT.SUCCESS:\n      let updatedComment = action.payload.comment;\n      var comments = state.comments.byId[action.byId];\n      helper.updateReducerListEntynties(comments.commentList, updatedComment);\n      return state;\n\n    case types.UPDATE_COMMENT.ERROR:\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_REPLY.PENDING:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_REPLY.SUCCESS:\n      var repliesToUpdate = state.replies.byId[action.byId];\n      let updatedReply = action.payload.reply;\n      helper.updateReducerListEntynties(repliesToUpdate.replyList, updatedReply);\n      return state;\n\n    case types.UPDATE_REPLY.ERROR:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    default:\n      return state;\n  }\n}\nconst modalState = {\n  isOpen: false,\n  modalType: null,\n  modalProps: {}\n};\nexport function modal(state = modalState, action) {\n  switch (action.type) {\n    case 'SHOW_MODAL':\n      console.log(state, action);\n      let newModal = Object.assign({}, state, action.payload);\n      console.log(newModal, state);\n      return newModal;\n\n    case 'HIDE_MODAL':\n      let hideModal = Object.assign({}, state, action.payload);\n      return hideModal;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/reducers/lib/appReducers.js"],"names":["Helper","types","helper","InitialState","userAuth","isOnSignUpForm","isOnPasswordResetForm","isLoading","auth","tokenKey","isLoggedIn","currentUser","user","userProfile","byId","allIds","users","index","error","questions","posts","question","post","answers","comments","replies","entyties","state","action","type","USER_AUTHENTICATION","PENDING","alert","Object","assign","payload","SUCCESS","ERROR","TOGGLE","SIGNUP_FORM","PASSWORD_RESET_FORM","GET_CURRENT_USER","GET_USER_PROFILE","profileById","defineProperty","value","GET_USER_LIST","console","log","GET_INDEX","GET_QUESTION_LIST","GET_QUESTION","questionById","answerById","id","answerState","answerList","newObject","visited","length","GET_POST_LIST","GET_POST","postById","GET_ANSWER_LIST","CREATE_QUESTION","ById","CREATE_ANSWER","GET_COMMENT_LIST","GET_REPLY_LIST","GET_REPLY_CHILD_LIST","UPDATE_USER_PROFILE","user_is_following","profileToUpdate","is_following","UPDATE_USER_LIST","userUpdate","usersToUpdate","updateReducerListEntynties","userList","UPDATE_QUESTION","UPDATE_ANSWER","updatedAnswer","answer","UPDATE_COMMENT","updatedComment","comment","commentList","UPDATE_REPLY","repliesToUpdate","updatedReply","reply","replyList","modalState","isOpen","modalType","modalProps","modal","newModal","hideModal"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAQ,KAAKC,KAAb,MAAyB,eAAzB;AAGA,MAAMC,MAAM,GAAK,IAAIF,MAAJ,EAAjB;AACA;;;;;;;;;;;;;;;;;AAiBA,MAAMG,YAAY,GAAG,MAAM;AAEvB,SAAO;AAEHC,IAAAA,QAAQ,EAAG;AACPC,MAAAA,cAAc,EAAW,KADlB;AAEPC,MAAAA,qBAAqB,EAAI,KAFlB;AAGPC,MAAAA,SAAS,EAAgB,KAHlB;AAKPC,MAAAA,IAAI,EAAG;AACHC,QAAAA,QAAQ,EAAM,EADX;AAEHC,QAAAA,UAAU,EAAI;AAFX;AALA,KAFR;AAaHC,IAAAA,WAAW,EAAG;AACVC,MAAAA,IAAI,EAAE;AADI,KAbX;AAiBHC,IAAAA,WAAW,EAAG;AACVC,MAAAA,IAAI,EAAK,EADC;AAEVC,MAAAA,MAAM,EAAG;AAFC,KAjBX;AAsBHC,IAAAA,KAAK,EAAG;AACJF,MAAAA,IAAI,EAAK,EADL;AAEJC,MAAAA,MAAM,EAAG;AAFL,KAtBL;AA2BHE,IAAAA,KAAK,EAAG;AACJV,MAAAA,SAAS,EAAG,KADR;AAEJW,MAAAA,KAAK,EAAO;AAFR,KA3BL;AAgCHC,IAAAA,SAAS,EAAG;AACRL,MAAAA,IAAI,EAAK,EADD;AAERC,MAAAA,MAAM,EAAG;AAFD,KAhCT;AAqCHK,IAAAA,KAAK,EAAO;AACRN,MAAAA,IAAI,EAAK,EADD;AAERC,MAAAA,MAAM,EAAG;AAFD,KArCT;AA0CHM,IAAAA,QAAQ,EAAI;AACRP,MAAAA,IAAI,EAAK,EADD;AAERC,MAAAA,MAAM,EAAG;AAFD,KA1CT;AA+CHO,IAAAA,IAAI,EAAQ;AACRR,MAAAA,IAAI,EAAK,EADD;AAERC,MAAAA,MAAM,EAAG;AAFD,KA/CT;AAoDHQ,IAAAA,OAAO,EAAI;AACPT,MAAAA,IAAI,EAAK,EADF;AAEPC,MAAAA,MAAM,EAAG;AAFF,KApDR;AAyDHS,IAAAA,QAAQ,EAAG;AACPV,MAAAA,IAAI,EAAK,EADF;AAEPC,MAAAA,MAAM,EAAG;AAFF,KAzDR;AA8DHU,IAAAA,OAAO,EAAG;AACNX,MAAAA,IAAI,EAAK,EADH;AAENC,MAAAA,MAAM,EAAG;AAFH;AA9DP,GAAP;AAmEH,CArED;;AAwEA,OAAO,SAASW,QAAT,CAAkBC,KAAK,GAACxB,YAAY,EAApC,EAAwCyB,MAAxC,EAAgD;AACpD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK5B,KAAK,CAAC6B,mBAAN,CAA0BC,OAA/B;AACAC,MAAAA,KAAK,CAACJ,MAAM,CAACC,IAAR,CAAL;AACEI,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAd,EAAqBC,MAAM,CAACO,OAA5B;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC6B,mBAAN,CAA0BM,OAA/B;AACGH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACvB,QAApB,EAA8BwB,MAAM,CAACO,OAArC;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC6B,mBAAN,CAA0BO,KAA/B;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACvB,QAApB,EAA8BwB,MAAM,CAACO,OAArC;AACA,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAACqC,MAAN,CAAaC,WAAlB;AACGN,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACvB,QAApB,EAA8BwB,MAAM,CAACO,OAArC;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACqC,MAAN,CAAaE,mBAAlB;AACGP,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACvB,QAApB,EAA8BwB,MAAM,CAACO,OAArC;AACA,aAAOR,KAAP;;AAMH,SAAK1B,KAAK,CAACwC,gBAAN,CAAuBL,OAA5B;AACGH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAAChB,WAApB,EAAiCiB,MAAM,CAACO,OAAxC;AAEA,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAACwC,gBAAN,CAAuBJ,KAA5B;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAAChB,WAApB,EAAiCiB,MAAM,CAACO,OAAxC;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACwC,gBAAN,CAAuBV,OAA5B;AACEE,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAAChB,WAApB,EAAiCiB,MAAM,CAACO,OAAxC;AACA,aAAOR,KAAP;;AAGF,SAAK1B,KAAK,CAACyC,gBAAN,CAAuBX,OAA5B;AACG;AACA,UAAI,CAACJ,KAAK,CAACd,WAAN,CAAkBC,IAAlB,CAAuBc,MAAM,CAACe,WAA9B,CAAL,EAAiD;AAC9CV,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACd,WAAN,CAAkBC,IAAxC,EAA8Cc,MAAM,CAACe,WAArD,EAAkE;AAACE,UAAAA,KAAK,EAAGjB,MAAM,CAACO;AAAhB,SAAlE;AACF;;AACD,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACyC,gBAAN,CAAuBN,OAA5B;AACG;AACAH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACd,WAAN,CAAkBC,IAAlB,CAAuBc,MAAM,CAACe,WAA9B,CAAd,EAA0Df,MAAM,CAACO,OAAjE;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACyC,gBAAN,CAAuBL,KAA5B;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACd,WAAN,CAAkBC,IAAlB,CAAuBc,MAAM,CAACe,WAA9B,CAAd,EAA0Df,MAAM,CAACO,OAAjE;AACA,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAAC6C,aAAN,CAAoBf,OAAzB;AACGgB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ,EAAmBC,MAAnB;;AACA,UAAI,CAACD,KAAK,CAACX,KAAN,CAAYF,IAAZ,CAAiBc,MAAM,CAACd,IAAxB,CAAL,EAAoC;AACjCmB,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACX,KAAN,CAAYF,IAAlC,EAAwCc,MAAM,CAACd,IAA/C,EAAqD;AAAC+B,UAAAA,KAAK,EAAGjB,MAAM,CAACO;AAAhB,SAArD;AACF;;AACD,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC6C,aAAN,CAAoBV,OAAzB;AACGH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACX,KAAN,CAAYF,IAAZ,CAAiBc,MAAM,CAACd,IAAxB,CAAd,EAA6Cc,MAAM,CAACO,OAApD;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC6C,aAAN,CAAoBT,KAAzB;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACX,KAAN,CAAYF,IAAZ,CAAiBc,MAAM,CAACd,IAAxB,CAAd,EAA6Cc,MAAM,CAACO,OAApD;AACA,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAACgD,SAAN,CAAgBlB,OAArB;AACGE,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACV,KAApB,EAA2BW,MAAM,CAACO,OAAlC;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACgD,SAAN,CAAgBb,OAArB;AACG;AACAH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACV,KAApB,EAA2BW,MAAM,CAACO,OAAlC;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACgD,SAAN,CAAgBZ,KAArB;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACV,KAApB,EAA2BW,MAAM,CAACO,OAAlC;AACA,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAACiD,iBAAN,CAAwBnB,OAA7B;AACG;AACA,UAAI,CAACJ,KAAK,CAACR,SAAN,CAAgBL,IAAhB,CAAqBc,MAAM,CAACd,IAA5B,CAAL,EAAwC;AACrCmB,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACR,SAAN,CAAgBL,IAAtC,EAA4Cc,MAAM,CAACd,IAAnD,EAAyD;AAAC+B,UAAAA,KAAK,EAAGjB,MAAM,CAACO;AAAhB,SAAzD;AACF;;AACD,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACiD,iBAAN,CAAwBd,OAA7B;AACGH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACR,SAAN,CAAgBL,IAAhB,CAAqBc,MAAM,CAACd,IAA5B,CAAd,EAAiDc,MAAM,CAACO,OAAxD;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACiD,iBAAN,CAAwBb,KAA7B;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACR,SAAN,CAAgBL,IAAhB,CAAqBc,MAAM,CAACd,IAA5B,CAAd,EAAiDc,MAAM,CAACO,OAAxD;AACA,aAAOR,KAAP;;AAKH,SAAK1B,KAAK,CAACkD,YAAN,CAAmBpB,OAAxB;AAEG,UAAI,CAACJ,KAAK,CAACN,QAAN,CAAeP,IAAf,CAAoBc,MAAM,CAACwB,YAA3B,CAAL,EAA+C;AAC5CnB,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACN,QAAN,CAAeP,IAArC,EAA2Cc,MAAM,CAACwB,YAAlD,EAAgE;AAACP,UAAAA,KAAK,EAAGjB,MAAM,CAACO;AAAhB,SAAhE;AACF;;AACD,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACkD,YAAN,CAAmBf,OAAxB;AACG,UAAIf,QAAQ,GAAGO,MAAM,CAACO,OAAP,CAAed,QAA9B;AACA,UAAIgC,UAAU,mBAAYhC,QAAQ,CAACiC,EAArB,CAAd;AACA,UAAIC,WAAW,GAAG;AACfC,QAAAA,UAAU,EAAMnC,QAAQ,CAACE,OADV;AAEfkC,QAAAA,SAAS,EAAO,EAFD;AAGflD,QAAAA,SAAS,EAAO,KAHD;AAIfmD,QAAAA,OAAO,EAAS,KAJD;AAKfxC,QAAAA,KAAK,EAAW;AALD,OAAlB;AAQAe,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACN,QAAN,CAAeP,IAAf,CAAoBc,MAAM,CAACwB,YAA3B,CAAd,EAAwDxB,MAAM,CAACO,OAA/D;;AACA,UAAId,QAAQ,CAACE,OAAT,CAAiBoC,MAArB,EAA6B;AACzB1B,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACJ,OAAN,CAAcT,IAApC,EAA0CuC,UAA1C,EAAsD;AAACR,UAAAA,KAAK,EAAGU;AAAT,SAAtD;AACH;;AACD,aAAO5B,KAAP;;AAEH,SAAK1B,KAAK,CAACkD,YAAN,CAAmBd,KAAxB;AACG,UAAIV,KAAK,CAACN,QAAN,CAAeP,IAAf,CAAoBc,MAAM,CAACwB,YAA3B,CAAJ,EAA8C;AAC3CnB,QAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACN,QAAN,CAAeP,IAAf,CAAoBc,MAAM,CAACwB,YAA3B,CAAd,EAAwDxB,MAAM,CAACO,OAA/D;AACF;;AACD,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAAC2D,aAAN,CAAoB7B,OAAzB;AACG;AACA,UAAI,CAACJ,KAAK,CAACP,KAAN,CAAYN,IAAZ,CAAiBc,MAAM,CAACd,IAAxB,CAAL,EAAoC;AACjCmB,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACP,KAAN,CAAYN,IAAlC,EAAwCc,MAAM,CAACd,IAA/C,EAAqD;AAAC+B,UAAAA,KAAK,EAAGjB,MAAM,CAACO;AAAhB,SAArD;AACF;;AACD,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC2D,aAAN,CAAoBxB,OAAzB;AACG;AACAH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACP,KAAN,CAAYN,IAAZ,CAAiBc,MAAM,CAACd,IAAxB,CAAd,EAA6Cc,MAAM,CAACO,OAApD;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC2D,aAAN,CAAoBvB,KAAzB;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACP,KAAN,CAAYN,IAAZ,CAAiBc,MAAM,CAACd,IAAxB,CAAd,EAA6Cc,MAAM,CAACO,OAApD;AACA,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAAC4D,QAAN,CAAe9B,OAApB;AACG,UAAI,CAACJ,KAAK,CAACL,IAAN,CAAWR,IAAX,CAAgBc,MAAM,CAACkC,QAAvB,CAAL,EAAuC;AACpC7B,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACL,IAAN,CAAWR,IAAjC,EAAuCc,MAAM,CAACkC,QAA9C,EAAwD;AAACjB,UAAAA,KAAK,EAAGjB,MAAM,CAACO;AAAhB,SAAxD;AACF;;AACD,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC4D,QAAN,CAAezB,OAApB;AACG,UAAId,IAAI,GAAGM,MAAM,CAACO,OAAP,CAAeb,IAA1B,CADH,CAEG;;AACAyB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ,EAAmBL,IAAnB;AACA;;;;;;;;;;;;AAYAW,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACL,IAAN,CAAWR,IAAX,CAAgBc,MAAM,CAACkC,QAAvB,CAAd,EAAgDlC,MAAM,CAACO,OAAvD;;AACA,UAAIb,IAAI,CAACE,QAAL,CAAcmC,MAAlB,EAA0B,CACvB;AACF;;AACD,aAAOhC,KAAP;;AAEH,SAAK1B,KAAK,CAAC4D,QAAN,CAAexB,KAApB;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACL,IAAN,CAAWR,IAAX,CAAgBc,MAAM,CAACkC,QAAvB,CAAd,EAAgDlC,MAAM,CAACO,OAAvD;AACA,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAAC8D,eAAN,CAAsBhC,OAA3B;AACG,UAAI,CAACJ,KAAK,CAACJ,OAAN,CAAcT,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAL,EAAsC;AACnCmB,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACJ,OAAN,CAAcT,IAApC,EAA0Cc,MAAM,CAACd,IAAjD,EAAuD;AAAC+B,UAAAA,KAAK,EAAGjB,MAAM,CAACO;AAAhB,SAAvD;AACF;;AACD,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAAC8D,eAAN,CAAsB3B,OAA3B;AACG;AACAH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACJ,OAAN,CAAcT,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd,EAA8Cc,MAAM,CAACO,OAArD;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC8D,eAAN,CAAsB1B,KAA3B;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACJ,OAAN,CAAcT,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd,EAA8Cc,MAAM,CAACO,OAArD;AACA,aAAOR,KAAP;;AAEH,SAAK,uBAAL;AACG,UAAI,CAACA,KAAK,CAACH,QAAN,CAAeV,IAAf,CAAoBc,MAAM,CAACd,IAA3B,CAAL,EAAuC;AACpCmB,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACH,QAAN,CAAeV,IAArC,EAA2Cc,MAAM,CAACd,IAAlD,EAC+C;AAAE+B,UAAAA,KAAK,EAAEjB,MAAM,CAACO;AAAhB,SAD/C;AAECF,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACH,QAAN,CAAeT,MAArC,EAA6Ca,MAAM,CAACd,IAApD,EACU;AAAE+B,UAAAA,KAAK,EAAGlB,KAAK,CAACH,QAAN,CAAeV,IAAf,CAAoBc,MAAM,CAACd,IAA3B;AAAV,SADV;AAEH;;AACD,aAAOa,KAAP;;AAEH,SAAK,qBAAL;AACG;AACA,UAAI,CAACA,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAL,EAAsC;AACnCmB,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACF,OAAN,CAAcX,IAApC,EAA0Cc,MAAM,CAACd,IAAjD,EAAuD;AAAE+B,UAAAA,KAAK,EAAEjB,MAAM,CAACO;AAAhB,SAAvD;AACAF,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACF,OAAN,CAAcV,MAApC,EAA4Ca,MAAM,CAACd,IAAnD,EACa;AAAE+B,UAAAA,KAAK,EAAGlB,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B;AAAV,SADb;AAEF;;AAED,aAAOa,KAAP;;AAEH,SAAK,2BAAL;AACG;AACA,UAAI,CAACA,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAL,EAAsC;AACpCmB,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACF,OAAN,CAAcX,IAApC,EAA0Cc,MAAM,CAACd,IAAjD,EAAuD;AAAC+B,UAAAA,KAAK,EAAGjB,MAAM,CAACO;AAAhB,SAAvD;AACAF,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACF,OAAN,CAAcV,MAApC,EAA4Ca,MAAM,CAACd,IAAnD,EACwB;AAAE+B,UAAAA,KAAK,EAAGlB,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B;AAAV,SADxB;AAED;;AACD,aAAOa,KAAP;;AAEH,SAAK1B,KAAK,CAAC+D,eAAN,CAAsBjC,OAA3B;AACGgB,MAAAA,OAAO,CAACC,GAAR,CAAYpB,MAAZ;AACA,UAAIwB,YAAY,GAAGxB,MAAM,CAACqC,IAAP,GAAarC,MAAM,CAACqC,IAApB,GACuB,qBAD1C;;AAEA,UAAI,CAACtC,KAAK,CAACN,QAAN,CAAeP,IAAf,CAAoBsC,YAApB,CAAL,EAAwC;AACrCnB,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACN,QAAN,CAAeP,IAArC,EAA2Cc,MAAM,CAACqC,IAAlD,EAAwD;AAACpB,UAAAA,KAAK,EAACjB,MAAM,CAACO;AAAd,SAAxD;AACF;;AAED,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC+D,eAAN,CAAsB5B,OAA3B;AACGH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACN,QAAN,CAAeP,IAAf,CAAoBc,MAAM,CAACqC,IAA3B,CAAd,EAAgDtC,KAAhD,EAAuDC,MAAM,CAACO,OAA9D;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC+D,eAAN,CAAsB3B,KAA3B;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAYpB,MAAZ,EADF,CAEE;;AACA,aAAOD,KAAP;;AAEF,SAAK,mBAAL;AACGM,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACN,QAAN,CAAeP,IAAf,CAAoBc,MAAM,CAACwB,YAA3B,CAAd,EAAwDxB,MAAM,CAACO,OAA/D;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACiE,aAAN,CAAoBnC,OAAzB;AACG,UAAI,CAACJ,KAAK,CAACJ,OAAN,CAAcT,IAAd,CAAmBc,MAAM,CAACqC,IAA1B,CAAL,EAAsC;AACnChC,QAAAA,MAAM,CAACW,cAAP,CAAsBjB,KAAK,CAACJ,OAAN,CAAcT,IAApC,EAA0Cc,MAAM,CAACqC,IAAjD,EAAuD;AAACpB,UAAAA,KAAK,EAACjB,MAAM,CAACO;AAAd,SAAvD;AACF;;AACD,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACiE,aAAN,CAAoB9B,OAAzB;AACGH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACJ,OAAN,CAAcT,IAAd,CAAmBc,MAAM,CAACqC,IAA1B,CAAd,EAA+CrC,MAAM,CAACO,OAAtD;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACiE,aAAN,CAAoB7B,KAAzB;AACEJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACJ,OAAN,CAAcT,IAAd,CAAmBc,MAAM,CAACqC,IAA1B,CAAd,EAA+CrC,MAAM,CAACO,OAAtD;AACA,aAAOR,KAAP;;AACH;;;;;;;;;;;;;AAcC,SAAK1B,KAAK,CAACkE,gBAAN,CAAuBpC,OAA5B;AACG;AACAE,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACH,QAAN,CAAeV,IAAf,CAAoBc,MAAM,CAACd,IAA3B,CAAd,EAAgDc,MAAM,CAACO,OAAvD;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACmE,cAAN,CAAqBrC,OAA1B;AACG;AACAE,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd,EAA+Cc,MAAM,CAACO,OAAtD;AACA,aAAOR,KAAP;;AAEH,SAAM1B,KAAK,CAACoE,oBAAN,CAA2BtC,OAAjC;AACGE,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd,EAA8Cc,MAAM,CAACO,OAArD;AACA,aAAOR,KAAP;;AAEH,SAAM1B,KAAK,CAACoE,oBAAN,CAA2BjC,OAAjC;AACGH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd,EAA8Cc,MAAM,CAACO,OAArD;AACA,aAAOR,KAAP;;AAEH,SAAM1B,KAAK,CAACoE,oBAAN,CAA2BhC,KAAjC;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd,EAA8Cc,MAAM,CAACO,OAArD;AACA,aAAOR,KAAP;;AACA;;;;;;;;;;;;AAaH,SAAK1B,KAAK,CAACqE,mBAAN,CAA0BvC,OAA/B;AACG,UAAIJ,KAAK,CAACd,WAAN,CAAkBC,IAAlB,CAAuBc,MAAM,CAACd,IAA9B,CAAJ,EAAyC;AACtC,YAAID,WAAW,GAAEc,KAAK,CAACd,WAAN,CAAkBC,IAAlB,CAAuBc,MAAM,CAACd,IAA9B,CAAjB;;AAEA,YAAID,WAAW,CAACD,IAAZ,IAAoBC,WAAW,CAACD,IAAZ,CAAiB2D,iBAAzC,EAA4D;AACzD1D,UAAAA,WAAW,CAACD,IAAZ,CAAiB2D,iBAAjB,GAAqC,KAArC;AACF,SAFD,MAEK;AACF1D,UAAAA,WAAW,CAACD,IAAZ,CAAiB2D,iBAAjB,GAAqC,IAArC;AACF;;AAEDtC,QAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACd,WAAN,CAAkBC,IAAlB,CAAuBc,MAAM,CAACd,IAA9B,CAAd,EAAmDD,WAAnD;AACF;;AACF,aAAOc,KAAP;;AAEF,SAAK1B,KAAK,CAACqE,mBAAN,CAA0BlC,OAA/B;AACGH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACd,WAAN,CAAkBC,IAAlB,CAAuBc,MAAM,CAACd,IAA9B,CAAd,EAAmDc,MAAM,CAACO,OAA1D;AACD,aAAOR,KAAP;;AAEF,SAAK1B,KAAK,CAACqE,mBAAN,CAA0BjC,KAA/B;AACG,UAAImC,eAAe,GAAE7C,KAAK,CAACd,WAAN,CAAkBC,IAAlB,CAAuBc,MAAM,CAACd,IAA9B,CAArB;;AAEA,UAAI0D,eAAe,IAAIA,eAAe,CAAC5D,IAAnC,IAA2C4D,eAAe,CAAC5D,IAAhB,CAAqB2D,iBAApE,EAAuF;AACpFC,QAAAA,eAAe,CAAC5D,IAAhB,CAAqB6D,YAArB,GAAoC,IAApC;AAEF,OAHD,MAGK;AACFD,QAAAA,eAAe,CAAC5D,IAAhB,CAAqB6D,YAArB,GAAoC,KAApC;AACF;;AAEFxC,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACd,WAAN,CAAkBC,IAAlB,CAAuBc,MAAM,CAACd,IAA9B,CAAd,oBAAwD0D,eAAxD;AAAyEtD,QAAAA,KAAK,EAAEU,MAAM,CAACO;AAAvF;AACA,aAAOR,KAAP;;AAGF,SAAK1B,KAAK,CAACyE,gBAAN,CAAuB3C,OAA5B;AACG,UAAIJ,KAAK,CAACX,KAAN,CAAYF,IAAZ,CAAiBc,MAAM,CAACd,IAAxB,CAAJ,EAAmC;AAChCmB,QAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACX,KAAN,CAAYF,IAAZ,CAAiBc,MAAM,CAACd,IAAxB,CAAd,EAA6Cc,MAAM,CAACO,OAApD;AACF;;AACF,aAAOR,KAAP;;AAEF,SAAK1B,KAAK,CAACyE,gBAAN,CAAuBtC,OAA5B;AACG,UAAIuC,UAAU,GAAM/C,MAAM,CAACO,OAAP,CAAevB,IAAnC;AACA,UAAIgE,aAAa,GAAEjD,KAAK,CAACX,KAAN,CAAYF,IAAZ,CAAiBc,MAAM,CAACd,IAAxB,CAAnB;AACAZ,MAAAA,MAAM,CAAC2E,0BAAP,CAAkCD,aAAa,CAACE,QAAhD,EAA0DH,UAA1D;AAEA,aAAOhD,KAAP;;AAEH,SAAK1B,KAAK,CAACyE,gBAAN,CAAuBrC,KAA5B;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACX,KAAN,CAAYF,IAAZ,CAAiBc,MAAM,CAACd,IAAxB,CAAd,EAA6C;AAACI,QAAAA,KAAK,EAAEU,MAAM,CAACO;AAAf,OAA7C;AACD,aAAOR,KAAP;;AAGF,SAAK1B,KAAK,CAAC8E,eAAN,CAAsBhD,OAA3B;AACGE,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACN,QAAN,CAAeP,IAAf,CAAoBc,MAAM,CAACd,IAA3B,CAAd,EAAgDc,MAAM,CAACO,OAAvD;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC8E,eAAN,CAAsB3C,OAA3B;AACGH,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACN,QAAN,CAAeP,IAAf,CAAoBc,MAAM,CAACd,IAA3B,CAAd,EAAgDc,MAAM,CAACO,OAAvD;AACA,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAAC8E,eAAN,CAAsB1C,KAA3B;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACN,QAAN,CAAeP,IAAf,CAAoBc,MAAM,CAACd,IAA3B,CAAd,EAAgDc,MAAM,CAACO,OAAvD;AACA,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAAC+E,aAAN,CAAoBjD,OAAzB;AACGE,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACJ,OAAN,CAAcT,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd,EAA+Cc,MAAM,CAACO,OAAtD;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAAC+E,aAAN,CAAoB5C,OAAzB;AACG,UAAI6C,aAAa,GAAGrD,MAAM,CAACO,OAAP,CAAe+C,MAAnC;AACA,UAAI3D,OAAO,GAAGI,KAAK,CAACJ,OAAN,CAAcT,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd;AACAZ,MAAAA,MAAM,CAAC2E,0BAAP,CAAkCtD,OAAO,CAACiC,UAA1C,EAAsDyB,aAAtD;AAEA,aAAOtD,KAAP;;AAGH,SAAK1B,KAAK,CAAC+E,aAAN,CAAoB3C,KAAzB;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACJ,OAAN,CAAcT,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd,EAA+Cc,MAAM,CAACO,OAAtD;AACA,aAAOR,KAAP;;AAGH,SAAK1B,KAAK,CAACkF,cAAN,CAAqBpD,OAA1B;AACGE,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACH,QAAN,CAAeV,IAAf,CAAoBc,MAAM,CAACd,IAA3B,CAAd,EAAgDc,MAAM,CAACO,OAAvD;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACkF,cAAN,CAAqB/C,OAA1B;AACG,UAAIgD,cAAc,GAAGxD,MAAM,CAACO,OAAP,CAAekD,OAApC;AACA,UAAI7D,QAAQ,GAAGG,KAAK,CAACH,QAAN,CAAeV,IAAf,CAAoBc,MAAM,CAACd,IAA3B,CAAf;AAEAZ,MAAAA,MAAM,CAAC2E,0BAAP,CAAkCrD,QAAQ,CAAC8D,WAA3C,EAAwDF,cAAxD;AACA,aAAOzD,KAAP;;AAEH,SAAK1B,KAAK,CAACkF,cAAN,CAAqB9C,KAA1B;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACH,QAAN,CAAeV,IAAf,CAAoBc,MAAM,CAACd,IAA3B,CAAd,EAAgDc,MAAM,CAACO,OAAvD;AACA,aAAOR,KAAP;;AAIH,SAAK1B,KAAK,CAACsF,YAAN,CAAmBxD,OAAxB;AACGE,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd,EAA+Cc,MAAM,CAACO,OAAtD;AACA,aAAOR,KAAP;;AAEH,SAAK1B,KAAK,CAACsF,YAAN,CAAmBnD,OAAxB;AACG,UAAIoD,eAAe,GAAG7D,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAtB;AACA,UAAI2E,YAAY,GAAG7D,MAAM,CAACO,OAAP,CAAeuD,KAAlC;AAEAxF,MAAAA,MAAM,CAAC2E,0BAAP,CAAkCW,eAAe,CAACG,SAAlD,EAA6DF,YAA7D;AACA,aAAO9D,KAAP;;AAEH,SAAK1B,KAAK,CAACsF,YAAN,CAAmBlD,KAAxB;AACGJ,MAAAA,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACF,OAAN,CAAcX,IAAd,CAAmBc,MAAM,CAACd,IAA1B,CAAd,EAA+Cc,MAAM,CAACO,OAAtD;AACA,aAAOR,KAAP;;AAGH;AACG,aAAOA,KAAP;AAhbN;AAkbF;AAID,MAAMiE,UAAU,GAAG;AAChBC,EAAAA,MAAM,EAAO,KADG;AAEhBC,EAAAA,SAAS,EAAI,IAFG;AAGhBC,EAAAA,UAAU,EAAG;AAHG,CAAnB;AAQA,OAAQ,SAASC,KAAT,CAAerE,KAAK,GAACiE,UAArB,EAAiChE,MAAjC,EAAyC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,YAAL;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ,EAAmBC,MAAnB;AACI,UAAIqE,QAAQ,GAAIhE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyBC,MAAM,CAACO,OAAhC,CAAhB;AACDY,MAAAA,OAAO,CAACC,GAAR,CAAYiD,QAAZ,EAAsBtE,KAAtB;AACA,aAAOsE,QAAP;;AAEF,SAAK,YAAL;AACG,UAAIC,SAAS,GAAIjE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyBC,MAAM,CAACO,OAAhC,CAAjB;AACA,aAAO+D,SAAP;;AAEJ;AACG,aAAOvE,KAAP;AAZN;AAcF","sourcesContent":["import Helper from 'containers/utils/helpers';\nimport  * as types  from 'actions/types';\n\n\nconst helper   = new Helper();\n/*\nconst populateInitialState = (params)=> {\n    \n\n   var questions = {\n         isLoading          : false,\n         question           : \"\",\n         newObject          : \"\",\n         answerList         : [],\n         answer             : \"\",  \n         questionHasAnswer  : false,\n         userHasAnswer      : false,\n         visited            : false,\n         error              : '',\n      }\n}*/\n\nconst InitialState = () => {\n  \n    return {\n    \n        userAuth : {\n            isOnSignUpForm         : false,\n            isOnPasswordResetForm  : false,\n            isLoading              : false,\n\n            auth : {\n                tokenKey    : \"\",\n                isLoggedIn  : false,\n            },\n        },\n\n        currentUser : {\n            user: \"\",\n        },\n\n        userProfile : {\n            byId   : {},\n            allIds : []\n        },\n\n        users : {\n            byId   : {},\n            allIds : [] \n        },\n\n        index : {\n            isLoading : false,\n            error     : '',\n        },\n\n        questions : {\n            byId   : {},\n            allIds : []\n        },\n\n        posts     : {\n            byId   : {},\n            allIds : []\n        },\n\n        question  : {\n            byId   : {},\n            allIds : [],\n        },\n\n        post      : {\n            byId   : {},\n            allIds : []\n        },\n\n        answers  : {\n            byId   : {},\n            allIds : []\n        },\n\n        comments : {\n            byId   : {},\n            allIds : []\n        },\n\n        replies : {\n            byId   : {},\n            allIds : []\n        },\n    };\n};\n\n\nexport function entyties(state=InitialState(), action) {\n   switch (action.type){\n\n       case types.USER_AUTHENTICATION.PENDING :\n       alert(action.type)\n         Object.assign(state, action.payload)\n         return state; \n\n      case types.USER_AUTHENTICATION.SUCCESS:\n         Object.assign(state.userAuth, action.payload);\n         return state;              \n\n      case types.USER_AUTHENTICATION.ERROR:\n         Object.assign(state.userAuth, action.payload)\n         return state;\n          \n\n      case types.TOGGLE.SIGNUP_FORM:\n         Object.assign(state.userAuth, action.payload)\n         return state;   \n\n      case types.TOGGLE.PASSWORD_RESET_FORM:\n         Object.assign(state.userAuth, action.payload)\n         return state;\n\n\n\n\n\n      case types.GET_CURRENT_USER.SUCCESS:\n         Object.assign(state.currentUser, action.payload)\n         \n         return state;   \n                  \n\n      case types.GET_CURRENT_USER.ERROR:\n         Object.assign(state.currentUser, action.payload)\n         return state;    \n\n      case types.GET_CURRENT_USER.PENDING:\n        Object.assign(state.currentUser, action.payload)\n        return state;    \n\n\n      case types.GET_USER_PROFILE.PENDING:\n         //console.log(action.payload) \n         if (!state.userProfile.byId[action.profileById]) {\n            Object.defineProperty(state.userProfile.byId, action.profileById, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_USER_PROFILE.SUCCESS:\n         //console.log(action.payload) \n         Object.assign(state.userProfile.byId[action.profileById], action.payload);\n         return state;\n\n      case types.GET_USER_PROFILE.ERROR:\n         Object.assign(state.userProfile.byId[action.profileById], action.payload);\n         return state;\n              \n\n      case types.GET_USER_LIST.PENDING:\n         console.log(state, action)\n         if (!state.users.byId[action.byId]) {\n            Object.defineProperty(state.users.byId, action.byId, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_USER_LIST.SUCCESS:\n         Object.assign(state.users.byId[action.byId], action.payload);\n         return state;\n\n      case types.GET_USER_LIST.ERROR:\n         Object.assign(state.users.byId[action.byId], action.payload);\n         return state;\n\n\n      case types.GET_INDEX.PENDING:\n         Object.assign(state.index, action.payload);\n         return state;       \n\n      case types.GET_INDEX.SUCCESS:\n         //console.log(state, action)\n         Object.assign(state.index, action.payload);   \n         return state;    \n\n      case types.GET_INDEX.ERROR:\n         Object.assign(state.index, action.payload);\n         return state;           \n\n\n      case types.GET_QUESTION_LIST.PENDING:\n         //console.log(state, action)\n         if (!state.questions.byId[action.byId]) {\n            Object.defineProperty(state.questions.byId, action.byId, {value : action.payload});\n         }\n         return state;       \n\n      case types.GET_QUESTION_LIST.SUCCESS:\n         Object.assign(state.questions.byId[action.byId], action.payload);   \n         return state;    \n\n      case types.GET_QUESTION_LIST.ERROR:\n         Object.assign(state.questions.byId[action.byId], action.payload);\n         return state;            \n       \n\n\n\n      case types.GET_QUESTION.PENDING:\n\n         if (!state.question.byId[action.questionById]) {\n            Object.defineProperty(state.question.byId, action.questionById, {value : action.payload});\n         }\n         return state;      \n      \n      case types.GET_QUESTION.SUCCESS:\n         var question = action.payload.question;\n         var answerById = `answer${question.id}`;\n         var answerState = {\n            answerList    : question.answers,\n            newObject     : \"\",\n            isLoading     : false,\n            visited       : false,\n            error         : '',\n         }\n\n         Object.assign(state.question.byId[action.questionById], action.payload);\n         if (question.answers.length) {\n             Object.defineProperty(state.answers.byId, answerById, {value : answerState});\n         }\n         return state; \n\n      case types.GET_QUESTION.ERROR:\n         if (state.question.byId[action.questionById]) {\n            Object.assign(state.question.byId[action.questionById], action.payload);\n         }\n         return state;\n\n\n      case types.GET_POST_LIST.PENDING:\n         //console.log(state, action)\n         if (!state.posts.byId[action.byId]) {\n            Object.defineProperty(state.posts.byId, action.byId, {value : action.payload});\n         }\n         return state;       \n\n      case types.GET_POST_LIST.SUCCESS:\n         //console.log(state, action)\n         Object.assign(state.posts.byId[action.byId], action.payload);   \n         return state;    \n\n      case types.GET_POST_LIST.ERROR:\n         Object.assign(state.posts.byId[action.byId], action.payload);\n         return state;              \n\n\n      case types.GET_POST.PENDING:\n         if (!state.post.byId[action.postById]) {\n            Object.defineProperty(state.post.byId, action.postById, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_POST.SUCCESS:\n         var post = action.payload.post;\n         //var commentById = `commentsPost${post.id}`;\n         console.log(state, post)\n         /*\n         var commentsState = {\n            commentList      : post.comments,\n            showLink         : post.comments.length?true:false,\n            isLoading        : false,\n            error            : '',\n            linkData : {\n               comment       : post.comments[0],\n               numOfComments : post.comments.length,\n            },\n         };*/\n\n         Object.assign(state.post.byId[action.postById], action.payload);\n         if (post.comments.length) {\n            //Object.defineProperty(state.comments.byId, commentById, {value : commentsState});\n         }\n         return state;\n\n      case types.GET_POST.ERROR:\n         Object.assign(state.post.byId[action.postById], action.payload);\n         return state; \n\n\n      case types.GET_ANSWER_LIST.PENDING:\n         if (!state.answers.byId[action.byId]) {\n            Object.defineProperty(state.answers.byId, action.byId, {value : action.payload});\n         }\n         return state;\n\n\n      case types.GET_ANSWER_LIST.SUCCESS:\n         //console.log(state.answers, action)\n         Object.assign(state.answers.byId[action.byId],action.payload);\n         return state; \n\n      case types.GET_ANSWER_LIST.ERROR:\n         Object.assign(state.answers.byId[action.byId],action.payload);\n         return state;     \n\n      case 'GET_COMMENT_LINK_DATA':\n         if (!state.comments.byId[action.byId]) {\n            Object.defineProperty(state.comments.byId, action.byId,\n                                                           { value :action.payload});\n             Object.defineProperty(state.comments.allIds, action.byId ,\n                       { value : state.comments.byId[action.byId] });   \n         } \n         return state; \n\n      case 'GET_REPLY_LINK_DATA':\n         //console.log(action)\n         if (!state.replies.byId[action.byId]) {\n            Object.defineProperty(state.replies.byId, action.byId, { value :action.payload});  \n            Object.defineProperty(state.replies.allIds, action.byId,\n                         { value : state.replies.byId[action.byId] });\n         }\n\n         return state; \n\n      case 'GET_REPLY_CHILD_LINK_DATA':\n         //console.log(action, state.replies)\n         if (!state.replies.byId[action.byId]) {\n           Object.defineProperty(state.replies.byId, action.byId, {value : action.payload});\n           Object.defineProperty(state.replies.allIds, action.byId,\n                                   { value : state.replies.byId[action.byId] });\n         }\n         return state;\n\n      case types.CREATE_QUESTION.PENDING:\n         console.log(action)\n         var questionById = action.ById? action.ById:\n                                                   \"creatingNewQuestion\";\n         if (!state.question.byId[questionById]) {\n            Object.defineProperty(state.question.byId, action.ById, {value:action.payload} );\n         }\n\n         return state;\n\n      case types.CREATE_QUESTION.SUCCESS:\n         Object.assign(state.question.byId[action.ById], state, action.payload);\n         return state;\n      \n      case types.CREATE_QUESTION.ERROR:\n        console.log(action)\n        //Object.assign(state.question.byId[action.ById], action.payload);\n        return state;  \n\n      case 'VIEW_NEW_QUESTION':\n         Object.assign(state.question.byId[action.questionById], action.payload);\n         return state;  \n\n      case types.CREATE_ANSWER.PENDING:\n         if (!state.answers.byId[action.ById]) {\n            Object.defineProperty(state.answers.byId, action.ById, {value:action.payload} );\n         }\n         return state;\n\n      case types.CREATE_ANSWER.SUCCESS:\n         Object.assign(state.answers.byId[action.ById], action.payload)\n         return state;\n      \n      case types.CREATE_ANSWER.ERROR:\n        Object.assign(state.answers.byId[action.ById], action.payload)\n        return state;     \n     /* \n      case types.CREATE_COMMENT.PENDING:\n         Object.assign(state.comments.byId[action.commentById], action.payload)\n         return state;\n\n      case types.CREATE_COMMENT.SUCCESS:\n         Object.assign(state.comments.byId[action.commentById], action.payload)\n         return state;\n      \n      case types.CREATE_COMMENT.ERROR:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;  \n        */\n\n      case types.GET_COMMENT_LIST.PENDING:\n         //console.log(action)\n         Object.assign(state.comments.byId[action.byId], action.payload)\n         return state;    \n\n      case types.GET_REPLY_LIST.PENDING:\n         //console.log(action)\n         Object.assign(state.replies.byId[action.byId], action.payload)\n         return state;    \n\n      case  types.GET_REPLY_CHILD_LIST.PENDING:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state; \n\n      case  types.GET_REPLY_CHILD_LIST.SUCCESS:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state;\n      \n      case  types.GET_REPLY_CHILD_LIST.ERROR:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state;     \n         /*\n      case types.CREATE_REPLY.PENDING:\n         Object.assign(state.replies.byId[action.replyById], action.payload)\n         return state;\n\n      case types.CREATE_REPLY.SUCCESS:\n         Object.assign(state.replies.byId[action.replyById], state, action.payload)\n         return state;\n      \n      case types.CREATE_REPLY.ERROR:\n         Object.assign(state.replies.byId[action.replyById], action.payload)\n         return state;  \n      */\n      case types.UPDATE_USER_PROFILE.PENDING:\n         if (state.userProfile.byId[action.byId]) {\n            var userProfile =state.userProfile.byId[action.byId];\n           \n            if (userProfile.user && userProfile.user.user_is_following) {\n               userProfile.user.user_is_following = false\n            }else{\n               userProfile.user.user_is_following = true\n            }\n           \n            Object.assign(state.userProfile.byId[action.byId], userProfile);\n         }\n        return state;\n\n      case types.UPDATE_USER_PROFILE.SUCCESS:\n         Object.assign(state.userProfile.byId[action.byId], action.payload);\n        return state;  \n\n      case types.UPDATE_USER_PROFILE.ERROR:\n         var profileToUpdate =state.userProfile.byId[action.byId];\n         \n         if (profileToUpdate && profileToUpdate.user && profileToUpdate.user.user_is_following) {\n            profileToUpdate.user.is_following = true\n\n         }else{\n            profileToUpdate.user.is_following = false\n         }\n\n        Object.assign(state.userProfile.byId[action.byId], { ...profileToUpdate, error: action.payload});\n        return state;  \n\n\n      case types.UPDATE_USER_LIST.PENDING:\n         if (state.users.byId[action.byId]) {\n            Object.assign(state.users.byId[action.byId], action.payload);\n         }\n        return state;\n\n      case types.UPDATE_USER_LIST.SUCCESS:\n         var userUpdate    = action.payload.user;\n         var usersToUpdate =state.users.byId[action.byId];\n         helper.updateReducerListEntynties(usersToUpdate.userList, userUpdate);\n                  \n         return state;  \n\n      case types.UPDATE_USER_LIST.ERROR:\n         Object.assign(state.users.byId[action.byId], {error: action.payload});\n        return state;  \n\n\n      case types.UPDATE_QUESTION.PENDING:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;\n\n      case types.UPDATE_QUESTION.SUCCESS:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;                  \n      \n\n      case types.UPDATE_QUESTION.ERROR:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;   \n\n\n      case types.UPDATE_ANSWER.PENDING:\n         Object.assign(state.answers.byId[action.byId], action.payload);\n         return state;\n\n      case types.UPDATE_ANSWER.SUCCESS:\n         let updatedAnswer = action.payload.answer;\n         var answers = state.answers.byId[action.byId];\n         helper.updateReducerListEntynties(answers.answerList, updatedAnswer);\n         \n         return state;                  \n      \n\n      case types.UPDATE_ANSWER.ERROR:\n         Object.assign(state.answers.byId[action.byId], action.payload);\n         return state;     \n                      \n      \n      case types.UPDATE_COMMENT.PENDING:\n         Object.assign(state.comments.byId[action.byId], action.payload );\n         return state\n\n      case types.UPDATE_COMMENT.SUCCESS:\n         let updatedComment = action.payload.comment;\n         var comments = state.comments.byId[action.byId];\n\n         helper.updateReducerListEntynties(comments.commentList, updatedComment);\n         return state\n      \n      case types.UPDATE_COMMENT.ERROR:\n         Object.assign(state.comments.byId[action.byId], action.payload );\n         return state       \n      \n\n\n      case types.UPDATE_REPLY.PENDING:\n         Object.assign(state.replies.byId[action.byId], action.payload );\n         return state\n\n      case types.UPDATE_REPLY.SUCCESS:\n         var repliesToUpdate = state.replies.byId[action.byId]; \n         let updatedReply = action.payload.reply;\n        \n         helper.updateReducerListEntynties(repliesToUpdate.replyList, updatedReply);\n         return state\n    \n      case types.UPDATE_REPLY.ERROR:\n         Object.assign(state.replies.byId[action.byId], action.payload );\n         return state\n       \n\n      default:\n         return state; \n   }\n}\n\n   \n\nconst modalState = {\n   isOpen     : false,\n   modalType  : null,\n   modalProps : {},  \n};\n\n\n\nexport  function modal(state=modalState, action) {\n   switch (action.type){\n      case 'SHOW_MODAL':\n      console.log(state, action)\n          let newModal  = Object.assign({}, state, action.payload)\n         console.log(newModal, state);   \n         return newModal;  \n\n       case 'HIDE_MODAL':\n          let hideModal  = Object.assign({}, state, action.payload)\n          return hideModal;    \n         \n      default:\n         return state;\n   }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}