{"ast":null,"code":"import * as types from 'actions/types';\nconst InitialState = {\n  userAuth: {\n    isOnSignUpForm: false,\n    isOnPasswordResetForm: false,\n    isLoading: false,\n    auth: {\n      tokenKey: \"\",\n      isLoggedIn: false\n    }\n  },\n  currentUser: {\n    user: \"\"\n  },\n  userProfile: {\n    byId: {},\n    allIds: []\n  },\n  users: {\n    byId: {},\n    allIds: []\n  },\n  index: {\n    posts: [],\n    questions: [],\n    answers: [],\n    isLoading: false,\n    error: ''\n  },\n  questions: {\n    byId: {},\n    allIds: []\n  },\n  posts: {\n    byId: {},\n    allIds: []\n  },\n  question: {\n    byId: {},\n    allIds: []\n  },\n  post: {\n    byId: {},\n    allIds: []\n  },\n  answers: {\n    byId: {},\n    allIds: []\n  },\n  comments: {\n    byId: {},\n    allIds: []\n  },\n  replies: {\n    byId: {},\n    allIds: []\n  }\n};\nexport function entyties(state = InitialState, action) {\n  switch (action.type) {\n    case types.GET_CURRENT_USER.SUCCESS:\n      Object.assign(state.userAuth, action.payload);\n      return state;\n\n    case types.GET_CURRENT_USER.ERROR:\n      Object.assign(state.currentUser, action.payload);\n      return state;\n\n    case types.GET_CURRENT_USER.PENDING:\n      Object.assign(state.currentUser, action.payload);\n      return state;\n\n    case types.GET_USER_PROFILE.PENDING:\n      if (!state.userProfile.byId[action.profileById]) {\n        Object.defineProperty(state.userProfile.byId, action.profileById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_USER_PROFILE.SUCCESS:\n      Object.assign(state.userProfile.byId[action.profileById], action.payload);\n      return state;\n\n    case types.GET_USER_PROFILE.ERROR:\n      Object.assign(state.userProfile.byId[action.profileById], action.payload);\n      return state;\n\n    case types.GET_USER_LIST.PENDING:\n      console.log(state, action);\n\n      if (!state.users.byId[action.byId]) {\n        Object.defineProperty(state.users.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_USER_LIST.SUCCESS:\n      Object.assign(state.users.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_USER_LIST.ERROR:\n      Object.assign(state.users.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_INDEX.PENDING:\n      console.log(types.GET_INDEX, action);\n      Object.assign(state.index, action.payload);\n      return state;\n\n    case types.GET_INDEX.SUCCESS:\n      Object.assign(state.index, action.payload);\n      return state;\n\n    case types.GET_INDEX.ERROR:\n      Object.assign(state.index, action.payload);\n      return state;\n\n    case types.GET_QUESTION_LIST.PENDING:\n      console.log(state, action);\n\n      if (!state.questions.byId[action.byId]) {\n        Object.defineProperty(state.questions.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION_LIST.SUCCESS:\n      Object.assign(state.questions.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_QUESTION_LIST.ERROR:\n      Object.assign(state.questions.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_QUESTION.PENDING:\n      if (!state.question.byId[action.questionById]) {\n        Object.defineProperty(state.question.byId, action.questionById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION.SUCCESS:\n      var questionObj = action.payload.questionObj;\n      var answerById = \"answer\".concat(questionObj.id);\n      var answerState = {\n        answerList: questionObj.answers,\n        newObject: \"\",\n        isLoading: false,\n        visited: false,\n        error: ''\n      };\n      Object.assign(state.question.byId[action.questionById], action.payload);\n\n      if (questionObj.answers.length) {\n        Object.defineProperty(state.answers.byId, answerById, {\n          value: answerState\n        });\n      }\n\n      return state;\n\n    case types.GET_QUESTION.ERROR:\n      if (state.question.byId[action.questionById]) {\n        Object.assign(state.question.byId[action.questionById], action.payload);\n      }\n\n      return state;\n\n    case types.GET_POST_LIST.PENDING:\n      console.log(state, action);\n\n      if (!state.posts.byId[action.byId]) {\n        Object.defineProperty(state.posts.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_POST_LIST.SUCCESS:\n      console.log(state, action);\n      Object.assign(state.posts.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_POST_LIST.ERROR:\n      Object.assign(state.posts.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_POST.PENDING:\n      if (!state.post.byId[action.postById]) {\n        Object.defineProperty(state.post.byId, action.postById, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_POST.SUCCESS:\n      var post = action.payload.post;\n      var commentById = \"commentsPost\".concat(post.id);\n      console.log(state, post);\n      var commentsState = {\n        commentList: post.comments,\n        showLink: post.comments.length ? true : false,\n        isLoading: false,\n        error: '',\n        linkData: {\n          comment: post.comments[0],\n          numOfComments: post.comments.length\n        }\n      };\n      Object.assign(state.post.byId[action.postById], action.payload);\n\n      if (post.comments.length) {//Object.defineProperty(state.comments.byId, commentById, {value : commentsState});\n      }\n\n      return state;\n\n    case types.GET_POST.ERROR:\n      Object.assign(state.post.byId[action.postById], action.payload);\n      return state;\n\n    case types.GET_ANSWER_LIST.PENDING:\n      if (!state.answers.byId[action.byId]) {\n        Object.defineProperty(state.answers.byId, action.byId, {\n          value: action.payload\n        });\n      }\n\n      return state;\n\n    case types.GET_ANSWER_LIST.SUCCESS:\n      console.log(state.answers, action);\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_ANSWER_LIST.ERROR:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case 'GET_COMMENT_LINK_DATA':\n      if (!state.comments.byId[action.byId]) {\n        Object.defineProperty(state.comments.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.comments.allIds, action.byId, {\n          value: state.comments.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case 'GET_REPLY_LINK_DATA':\n      console.log(action);\n\n      if (!state.replies.byId[action.byId]) {\n        Object.defineProperty(state.replies.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.replies.allIds, action.byId, {\n          value: state.replies.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case 'GET_REPLY_CHILD_LINK_DATA':\n      console.log(action, state.replies);\n\n      if (!state.replies.byId[action.byId]) {\n        Object.defineProperty(state.replies.byId, action.byId, {\n          value: action.payload\n        });\n        Object.defineProperty(state.replies.allIds, action.byId, {\n          value: state.replies.byId[action.byId]\n        });\n      }\n\n      return state;\n\n    case types.CREATE_QUESTION.PENDING:\n      Object.assign(state.question.byId[action.questionById], action.payload);\n      return state;\n\n    case types.CREATE_QUESTION.SUCCESS:\n      Object.assign(state.question.byId[action.questionById], state, action.payload);\n      return state;\n\n    case types.CREATE_QUESTION.ERROR:\n      Object.assign(state.question.byId[action.questionById], action.payload);\n      return state;\n\n    case 'VIEW_NEW_QUESTION':\n      Object.assign(state.question.byId[action.questionById], action.payload);\n      return state;\n\n    case types.CREATE_ANSWER.PENDING:\n      Object.assign(state.answers.byId[action.answerById], action.payload);\n      return state;\n\n    case types.CREATE_ANSWER.SUCCESS:\n      Object.assign(state.answers.byId[action.answerById], action.payload);\n      return state;\n\n    case types.CREATE_ANSWER.ERROR:\n      Object.assign(state.question.byId[action.answerById], action.payload);\n      return state;\n\n    /* \n     case types.CREATE_COMMENT.PENDING:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;\n      case types.CREATE_COMMENT.SUCCESS:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;\n     \n     case types.CREATE_COMMENT.ERROR:\n       Object.assign(state.comments.byId[action.commentById], action.payload)\n       return state;  \n       */\n\n    case types.GET_COMMENT_LIST.PENDING:\n      console.log(action);\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_LIST.PENDING:\n      console.log(action);\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.PENDING:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.SUCCESS:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.GET_REPLY_CHILD_LIST.ERROR:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    /*\n    case types.CREATE_REPLY.PENDING:\n    Object.assign(state.replies.byId[action.replyById], action.payload)\n    return state;\n    case types.CREATE_REPLY.SUCCESS:\n    Object.assign(state.replies.byId[action.replyById], state, action.payload)\n    return state;\n        case types.CREATE_REPLY.ERROR:\n    Object.assign(state.replies.byId[action.replyById], action.payload)\n    return state;  \n    */\n\n    case types.UPDATE_USER_PROFILE.PENDING:\n      if (state.userProfile.byId[action.byId]) {\n        var userProfile = state.userProfile.byId[action.byId];\n        var user = userProfile.user;\n\n        if (user.is_following) {\n          user.is_following = false;\n        } else {\n          user.is_following = true;\n        }\n\n        Object.assign(state.userProfile.byId[action.byId], user);\n      }\n\n      return state;\n\n    case types.UPDATE_USER_PROFILE.SUCCESS:\n      Object.assign(state.userProfile.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_USER_PROFILE.ERROR:\n      var userProfile = state.userProfile.byId[action.byId];\n      var user = userProfile.user;\n\n      if (user.is_following) {\n        user.is_following = false;\n      } else {\n        user.is_following = true;\n      }\n\n      Object.assign(state.userProfile.byId[action.byId], {\n        user,\n        error: action.payload\n      });\n      return state;\n\n    case types.UPDATE_USER_LIST.PENDING:\n      console.log(action, state);\n\n      if (state.users.byId[action.byId]) {\n        var users = state.users.byId[action.byId];\n        Object.assign(state.users.byId[action.byId], action.payload);\n      }\n\n      return state;\n\n    case types.UPDATE_USER_LIST.SUCCESS:\n      var userUpdate = action.payload.user;\n      var users = state.users.byId[action.byId];\n      users.userList.map((user, index) => {\n        if (user.id === userUpdate.id) {\n          users.userList[index] = userUpdate;\n          Object.assign(state.users.byId[action.byId], users);\n          console.log(state.users, action);\n        }\n\n        return users;\n      });\n      return state;\n\n    case types.UPDATE_USER_LIST.ERROR:\n      var users = state.users.byId[action.byId];\n      Object.assign(state.users.byId[action.byId], {\n        error: action.payload\n      });\n      return state;\n\n    case types.UPDATE_QUESTION.PENDING:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_QUESTION.SUCCESS:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_QUESTION.ERROR:\n      Object.assign(state.question.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_ANSWER.PENDING:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_ANSWER.SUCCESS:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_ANSWER.ERROR:\n      Object.assign(state.answers.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_COMMENT.PENDING:\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_COMMENT.SUCCESS:\n      let commentUpdate = action.payload.comment;\n      var comments = state.comments;\n      comments.map((comment, index) => {\n        if (comment.id === commentUpdate.id) {\n          comments[index] = commentUpdate;\n          Object.assign(state.comments.byId[action.byId], comments);\n        }\n\n        return comments;\n      });\n      console.log(state);\n      return state;\n\n    case types.UPDATE_COMMENT.ERROR:\n      Object.assign(state.comments.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_REPLY.PENDING:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    case types.UPDATE_REPLY.SUCCESS:\n      let replyUpdate = action.payload.reply;\n      var replies = state.replies.byId[action.byId];\n\n      if (replies && replies.replyList.length) {\n        var replyList = replies.replyList;\n        replyList.map((reply, index) => {\n          if (reply.id === replyUpdate.id) {\n            replyList[index] = replyUpdate;\n            Object.assign(state.replies.byId[action.byId], replyList);\n          }\n\n          return replyList;\n        });\n      }\n\n      console.log(state, replyUpdate);\n      return state;\n\n    case types.UPDATE_REPLY.ERROR:\n      Object.assign(state.replies.byId[action.byId], action.payload);\n      return state;\n\n    default:\n      return state;\n  }\n}\nconst modalState = {\n  isOpen: false,\n  modalType: null,\n  modalProps: {}\n};\nexport function modal(state = modalState, action) {\n  switch (action.type) {\n    case 'SHOW_MODAL':\n      console.log(state, action);\n      let newModal = Object.assign({}, state, action.payload);\n      console.log(newModal, state);\n      return newModal;\n\n    case 'HIDE_MODAL':\n      let hideModal = Object.assign({}, state, action.payload);\n      return hideModal;\n\n    default:\n      return state;\n  }\n}\nconst userAuthState = {\n  isOnSignUpForm: false,\n  isOnPasswordResetForm: false,\n  isLoading: false,\n  auth: {\n    tokenKey: \"\",\n    isLoggedIn: false\n  }\n};\nexport function userAuth(state = userAuthState, action) {\n  switch (action.type) {\n    case types.USER_AUTHENTICATION.PENDING:\n      let authPending = Object.assign(state, action.payload);\n      console.log(state, action);\n      return authPending;\n\n    case types.USER_AUTHENTICATION.SUCCESS:\n      let authSuccess = Object.assign({}, state, action.payload);\n      localStorage.setItem('auth', JSON.stringify(authSuccess.auth));\n      return authSuccess;\n\n    case types.USER_AUTHENTICATION.ERROR:\n      let authError = Object.assign({}, state, action.payload);\n      return authError;\n\n    case types.TOGGLE.SIGNUP_FORM:\n      let toggleSignUp = Object.assign({}, state, action.payload);\n      return toggleSignUp;\n\n    case types.TOGGLE.PASSWORD_RESET_FORM:\n      let togglePasswordReset = Object.assign({}, state, action.payload);\n      return togglePasswordReset;\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/reducers/lib/appReducers.js"],"names":["types","InitialState","userAuth","isOnSignUpForm","isOnPasswordResetForm","isLoading","auth","tokenKey","isLoggedIn","currentUser","user","userProfile","byId","allIds","users","index","posts","questions","answers","error","question","post","comments","replies","entyties","state","action","type","GET_CURRENT_USER","SUCCESS","Object","assign","payload","ERROR","PENDING","GET_USER_PROFILE","profileById","defineProperty","value","GET_USER_LIST","console","log","GET_INDEX","GET_QUESTION_LIST","GET_QUESTION","questionById","questionObj","answerById","id","answerState","answerList","newObject","visited","length","GET_POST_LIST","GET_POST","postById","commentById","commentsState","commentList","showLink","linkData","comment","numOfComments","GET_ANSWER_LIST","CREATE_QUESTION","CREATE_ANSWER","GET_COMMENT_LIST","GET_REPLY_LIST","GET_REPLY_CHILD_LIST","UPDATE_USER_PROFILE","is_following","UPDATE_USER_LIST","userUpdate","userList","map","UPDATE_QUESTION","UPDATE_ANSWER","UPDATE_COMMENT","commentUpdate","UPDATE_REPLY","replyUpdate","reply","replyList","modalState","isOpen","modalType","modalProps","modal","newModal","hideModal","userAuthState","USER_AUTHENTICATION","authPending","authSuccess","localStorage","setItem","JSON","stringify","authError","TOGGLE","SIGNUP_FORM","toggleSignUp","PASSWORD_RESET_FORM","togglePasswordReset"],"mappings":"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","sourcesContent":["\nimport  * as types  from 'actions/types';\n\n\n\n\nconst InitialState = {\n\n   userAuth : {\n      isOnSignUpForm         : false,\n      isOnPasswordResetForm  : false,\n      isLoading              : false,\n\n      auth : {\n         tokenKey    : \"\",\n         isLoggedIn  : false,\n      },\n   \n   },\n\n   currentUser : {\n      user: \"\",\n   },\n\n   userProfile : {\n      byId   : {},\n      allIds : []\n   },\n\n   users : {\n     byId   : {},\n     allIds : [] \n   },\n\n   index : {\n      posts     : [],\n      questions : [],\n      answers   : [],\n      isLoading : false,\n      error     : '',\n   },\n\n   questions : {\n      byId   : {},\n      allIds : []\n   },\n\n   posts     : {\n      byId   : {},\n      allIds : []\n   },\n\n   question  : {\n      byId   : {},\n      allIds : [],\n   },\n\n   post      : {\n      byId   : {},\n      allIds : []\n   },\n\n   answers  : {\n      byId   : {},\n      allIds : []\n   },\n\n   comments : {\n      byId   : {},\n      allIds : []\n   },\n\n   replies : {\n      byId   : {},\n      allIds : []\n   },\n   \n}\n\n\nexport function entyties(state=InitialState, action) {\n   switch (action.type){\n      case types.GET_CURRENT_USER.SUCCESS:\n         Object.assign(state.userAuth, action.payload)\n         \n         return state;   \n                  \n\n      case types.GET_CURRENT_USER.ERROR:\n         Object.assign(state.currentUser, action.payload)\n         return state;    \n\n      case types.GET_CURRENT_USER.PENDING:\n        Object.assign(state.currentUser, action.payload)\n        return state;    \n\n\n      case types.GET_USER_PROFILE.PENDING:\n         if (!state.userProfile.byId[action.profileById]) {\n            Object.defineProperty(state.userProfile.byId, action.profileById, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_USER_PROFILE.SUCCESS:\n         Object.assign(state.userProfile.byId[action.profileById], action.payload);\n         return state;\n\n      case types.GET_USER_PROFILE.ERROR:\n         Object.assign(state.userProfile.byId[action.profileById], action.payload);\n         return state;\n              \n\n      case types.GET_USER_LIST.PENDING:\n         console.log(state, action)\n         if (!state.users.byId[action.byId]) {\n            Object.defineProperty(state.users.byId, action.byId, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_USER_LIST.SUCCESS:\n         Object.assign(state.users.byId[action.byId], action.payload);\n         return state;\n\n      case types.GET_USER_LIST.ERROR:\n         Object.assign(state.users.byId[action.byId], action.payload);\n         return state;\n\n\n      case types.GET_INDEX.PENDING:\n         console.log(types.GET_INDEX, action)\n         Object.assign(state.index, action.payload);\n         return state;       \n\n      case types.GET_INDEX.SUCCESS:\n         Object.assign(state.index, action.payload);   \n         return state;    \n\n      case types.GET_INDEX.ERROR:\n         Object.assign(state.index, action.payload);\n         return state;           \n\n\n      case types.GET_QUESTION_LIST.PENDING:\n         console.log(state, action)\n         if (!state.questions.byId[action.byId]) {\n            Object.defineProperty(state.questions.byId, action.byId, {value : action.payload});\n         }\n         return state;       \n\n      case types.GET_QUESTION_LIST.SUCCESS:\n         Object.assign(state.questions.byId[action.byId], action.payload);   \n         return state;    \n\n      case types.GET_QUESTION_LIST.ERROR:\n         Object.assign(state.questions.byId[action.byId], action.payload);\n         return state;            \n       \n\n\n\n      case types.GET_QUESTION.PENDING:\n\n         if (!state.question.byId[action.questionById]) {\n            Object.defineProperty(state.question.byId, action.questionById, {value : action.payload});\n         }\n         return state;      \n      \n      case types.GET_QUESTION.SUCCESS:\n         var questionObj = action.payload.questionObj;\n         var answerById = `answer${questionObj.id}`;\n         var answerState = {\n            answerList    : questionObj.answers,\n            newObject     : \"\",\n            isLoading     : false,\n            visited       : false,\n            error         : '',\n         }\n\n         Object.assign(state.question.byId[action.questionById], action.payload);\n         if (questionObj.answers.length) {\n             Object.defineProperty(state.answers.byId, answerById, {value : answerState});\n         }\n         return state; \n\n      case types.GET_QUESTION.ERROR:\n         if (state.question.byId[action.questionById]) {\n            Object.assign(state.question.byId[action.questionById], action.payload);\n         }\n         return state;\n\n\n      case types.GET_POST_LIST.PENDING:\n         console.log(state, action)\n         if (!state.posts.byId[action.byId]) {\n            Object.defineProperty(state.posts.byId, action.byId, {value : action.payload});\n         }\n         return state;       \n\n      case types.GET_POST_LIST.SUCCESS:\n         console.log(state, action)\n         Object.assign(state.posts.byId[action.byId], action.payload);   \n         return state;    \n\n      case types.GET_POST_LIST.ERROR:\n         Object.assign(state.posts.byId[action.byId], action.payload);\n         return state;              \n\n\n      case types.GET_POST.PENDING:\n         if (!state.post.byId[action.postById]) {\n            Object.defineProperty(state.post.byId, action.postById, {value : action.payload});\n         }\n         return state;\n\n      case types.GET_POST.SUCCESS:\n         var post = action.payload.post;\n         var commentById = `commentsPost${post.id}`;\n         console.log(state, post)\n         var commentsState = {\n            commentList      : post.comments,\n            showLink         : post.comments.length?true:false,\n            isLoading        : false,\n            error            : '',\n            linkData : {\n               comment       : post.comments[0],\n               numOfComments : post.comments.length,\n            },\n         };\n\n         Object.assign(state.post.byId[action.postById], action.payload);\n         if (post.comments.length) {\n            //Object.defineProperty(state.comments.byId, commentById, {value : commentsState});\n         }\n         return state;\n\n      case types.GET_POST.ERROR:\n         Object.assign(state.post.byId[action.postById], action.payload);\n         return state; \n\n\n      case types.GET_ANSWER_LIST.PENDING:\n         if (!state.answers.byId[action.byId]) {\n            Object.defineProperty(state.answers.byId, action.byId, {value : action.payload});\n         }\n         return state;\n\n\n      case types.GET_ANSWER_LIST.SUCCESS:\n         console.log(state.answers, action)\n         Object.assign(state.answers.byId[action.byId],action.payload);\n         return state; \n\n      case types.GET_ANSWER_LIST.ERROR:\n         Object.assign(state.answers.byId[action.byId],action.payload);\n         return state;     \n\n      case 'GET_COMMENT_LINK_DATA':\n         if (!state.comments.byId[action.byId]) {\n            Object.defineProperty(state.comments.byId, action.byId,\n                                                           { value :action.payload});\n             Object.defineProperty(state.comments.allIds, action.byId ,\n                       { value : state.comments.byId[action.byId] });   \n         } \n         return state; \n\n      case 'GET_REPLY_LINK_DATA':\n         console.log(action)\n         if (!state.replies.byId[action.byId]) {\n            Object.defineProperty(state.replies.byId, action.byId, { value :action.payload});  \n            Object.defineProperty(state.replies.allIds, action.byId,\n                         { value : state.replies.byId[action.byId] });\n         }\n\n         return state; \n\n      case 'GET_REPLY_CHILD_LINK_DATA':\n         console.log(action, state.replies)\n         if (!state.replies.byId[action.byId]) {\n           Object.defineProperty(state.replies.byId, action.byId, {value : action.payload});\n           Object.defineProperty(state.replies.allIds, action.byId,\n                                   { value : state.replies.byId[action.byId] });\n         }\n         return state;\n\n      case types.CREATE_QUESTION.PENDING:\n         Object.assign(state.question.byId[action.questionById], action.payload);\n         return state;\n\n      case types.CREATE_QUESTION.SUCCESS:\n         Object.assign(state.question.byId[action.questionById], state, action.payload);\n         return state;\n      \n      case types.CREATE_QUESTION.ERROR:\n        Object.assign(state.question.byId[action.questionById], action.payload);\n        return state;  \n\n      case 'VIEW_NEW_QUESTION':\n         Object.assign(state.question.byId[action.questionById], action.payload);\n         return state;  \n\n      case types.CREATE_ANSWER.PENDING:\n         Object.assign(state.answers.byId[action.answerById], action.payload)\n         return state;\n\n      case types.CREATE_ANSWER.SUCCESS:\n         Object.assign(state.answers.byId[action.answerById], action.payload)\n         return state;\n      \n      case types.CREATE_ANSWER.ERROR:\n        Object.assign(state.question.byId[action.answerById], action.payload)\n        return state;     \n     /* \n      case types.CREATE_COMMENT.PENDING:\n         Object.assign(state.comments.byId[action.commentById], action.payload)\n         return state;\n\n      case types.CREATE_COMMENT.SUCCESS:\n         Object.assign(state.comments.byId[action.commentById], action.payload)\n         return state;\n      \n      case types.CREATE_COMMENT.ERROR:\n        Object.assign(state.comments.byId[action.commentById], action.payload)\n        return state;  \n        */\n\n      case types.GET_COMMENT_LIST.PENDING:\n         console.log(action)\n         Object.assign(state.comments.byId[action.byId], action.payload)\n         return state;    \n\n      case types.GET_REPLY_LIST.PENDING:\n         console.log(action)\n         Object.assign(state.replies.byId[action.byId], action.payload)\n         return state;    \n\n      case  types.GET_REPLY_CHILD_LIST.PENDING:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state; \n\n      case  types.GET_REPLY_CHILD_LIST.SUCCESS:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state;\n      \n      case  types.GET_REPLY_CHILD_LIST.ERROR:\n         Object.assign(state.replies.byId[action.byId],action.payload);\n         return state;     \n         /*\n      case types.CREATE_REPLY.PENDING:\n         Object.assign(state.replies.byId[action.replyById], action.payload)\n         return state;\n\n      case types.CREATE_REPLY.SUCCESS:\n         Object.assign(state.replies.byId[action.replyById], state, action.payload)\n         return state;\n      \n      case types.CREATE_REPLY.ERROR:\n         Object.assign(state.replies.byId[action.replyById], action.payload)\n         return state;  \n      */\n      case types.UPDATE_USER_PROFILE.PENDING:\n      if (state.userProfile.byId[action.byId]) {\n            var userProfile =state.userProfile.byId[action.byId];\n            var user = userProfile.user\n            if (user.is_following) {\n               user.is_following = false\n            }else{\n               user.is_following = true\n            }\n           \n            Object.assign(state.userProfile.byId[action.byId], user);\n         }\n        return state;\n\n      case types.UPDATE_USER_PROFILE.SUCCESS:\n         Object.assign(state.userProfile.byId[action.byId], action.payload);\n        return state;  \n\n      case types.UPDATE_USER_PROFILE.ERROR:\n         var userProfile =state.userProfile.byId[action.byId];\n            var user = userProfile.user\n            if (user.is_following) {\n               user.is_following = false\n            }else{\n               user.is_following = true\n            }\n        Object.assign(state.userProfile.byId[action.byId], {user, error: action.payload});\n        return state;  \n\n\n      case types.UPDATE_USER_LIST.PENDING:\n         console.log(action, state)\n         if (state.users.byId[action.byId]) {\n            var users =state.users.byId[action.byId];\n            Object.assign(state.users.byId[action.byId], action.payload);\n         }\n        return state;\n\n      case types.UPDATE_USER_LIST.SUCCESS:\n         var userUpdate = action.payload.user;\n         var users =state.users.byId[action.byId];\n\n         users.userList.map((user, index) => {\n            \n            if (user.id === userUpdate.id) {\n               users.userList[index] = userUpdate; \n               Object.assign(state.users.byId[action.byId], users );\n               console.log(state.users, action)\n            }\n            return users;\n         })\n         \n         return state;  \n\n      case types.UPDATE_USER_LIST.ERROR:\n        var users =state.users.byId[action.byId];\n        Object.assign(state.users.byId[action.byId], {error: action.payload});\n        return state;  \n\n\n      case types.UPDATE_QUESTION.PENDING:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;\n\n      case types.UPDATE_QUESTION.SUCCESS:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;                  \n      \n\n      case types.UPDATE_QUESTION.ERROR:\n         Object.assign(state.question.byId[action.byId], action.payload);\n         return state;   \n\n\n      case types.UPDATE_ANSWER.PENDING:\n         Object.assign(state.answers.byId[action.byId], action.payload);\n         return state;\n\n      case types.UPDATE_ANSWER.SUCCESS:\n         Object.assign(state.answers.byId[action.byId], action.payload);\n         return state;                  \n      \n\n      case types.UPDATE_ANSWER.ERROR:\n         Object.assign(state.answers.byId[action.byId], action.payload);\n         return state;     \n                      \n      \n      case types.UPDATE_COMMENT.PENDING:\n         Object.assign(state.comments.byId[action.byId], action.payload );\n         return state\n\n      case types.UPDATE_COMMENT.SUCCESS:\n         let commentUpdate = action.payload.comment;\n         var comments = state.comments;\n\n         comments.map((comment, index) => {\n            if (comment.id === commentUpdate.id) {\n               comments[index] = commentUpdate; \n               Object.assign(state.comments.byId[action.byId], comments );\n            }\n            return comments;\n         })\n\n         console.log(state)\n         return state\n      \n      case types.UPDATE_COMMENT.ERROR:\n         Object.assign(state.comments.byId[action.byId], action.payload );\n         return state       \n      \n\n\n      case types.UPDATE_REPLY.PENDING:\n         Object.assign(state.replies.byId[action.byId], action.payload );\n         return state\n\n      case types.UPDATE_REPLY.SUCCESS:\n         let replyUpdate = action.payload.reply;\n                 \n         var replies = state.replies.byId[action.byId]; \n\n         if (replies && replies.replyList.length) {\n            var replyList = replies.replyList;\n\n            replyList.map((reply, index) => {\n               if (reply.id === replyUpdate.id) {\n                  replyList[index] = replyUpdate; \n                  Object.assign(state.replies.byId[action.byId], replyList );\n               }\n               return replyList;\n            })\n         }\n         console.log(state, replyUpdate)\n         return state\n    \n      case types.UPDATE_REPLY.ERROR:\n         Object.assign(state.replies.byId[action.byId], action.payload );\n         return state\n       \n\n      default:\n         return state; \n   }\n}\n\n   \n\nconst modalState = {\n   isOpen     : false,\n   modalType  : null,\n   modalProps : {},  \n};\n\n\n\nexport  function modal(state=modalState, action) {\n   switch (action.type){\n      case 'SHOW_MODAL':\n      console.log(state, action)\n          let newModal  = Object.assign({}, state, action.payload)\n         console.log(newModal, state);   \n         return newModal;  \n\n       case 'HIDE_MODAL':\n          let hideModal  = Object.assign({}, state, action.payload)\n          return hideModal;    \n         \n      default:\n         return state;\n   }\n}\n\n\n\n\n\n\n const userAuthState = {\n   isOnSignUpForm         : false,\n   isOnPasswordResetForm  : false,\n   isLoading              : false,\n   \n   auth : {\n      tokenKey    : \"\",\n      isLoggedIn  : false,\n   },\n   \n};\n\n\nexport function userAuth(state=userAuthState, action) {\n   switch (action.type){\n      case types.USER_AUTHENTICATION.PENDING :\n        let authPending = Object.assign(state, action.payload)\n         console.log(state, action)\n         return authPending; \n      case types.USER_AUTHENTICATION.SUCCESS:\n         let authSuccess  = Object.assign({}, state, action.payload)\n         localStorage.setItem('auth',JSON.stringify(authSuccess.auth));\n         return authSuccess;              \n\n      case types.USER_AUTHENTICATION.ERROR:\n        let authError = Object.assign({}, state, action.payload)\n         return authError\n          \n\n      case types.TOGGLE.SIGNUP_FORM:\n         let toggleSignUp  = Object.assign({}, state, action.payload)\n         return toggleSignUp;   \n\n      case types.TOGGLE.PASSWORD_RESET_FORM:\n         let togglePasswordReset  = Object.assign({}, state, action.payload)\n         return togglePasswordReset;      \n\n      default:\n         return state; \n   }\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}