{"ast":null,"code":"import Api from 'api';\nimport Axios from 'axios_instance';\nimport * as action from 'actions/actionCreators';\nconst axiosApi = new Axios(true);\nconst api = new Api();\nexport function getIndex(options) {\n  const instance = axiosApi.axiosInstance();\n  let apiUrl = api.getIndexApi();\n  var questionListById = options.questionListById,\n      answerListById = options.answerListById,\n      postListById = options.postListById;\n  return dispatch => {\n    dispatch(action.getIndexPending());\n    instance.get(apiUrl).then(response => dispatch(action.getIndexSuccess(options, response.data))).catch(error => {\n      if (error.response) {\n        var errors = error.response.data.errors;\n        dispatch(action.getIndexError(errors));\n      } else {\n        dispatch(action.handleError());\n      }\n    });\n  };\n}\n;\nexport function getUserList(props) {\n  const instance = axiosApi.axiosInstance();\n  var apiUrl = props.apiUrl,\n      usersById = props.usersById;\n  return dispatch => {\n    dispatch(action.getUserListPending(usersById));\n    instance.get(apiUrl).then(response => dispatch(action.getUserListSuccess(usersById, response.data))).catch(error => {\n      if (error.response) {\n        dispatch(action.getUserListError(usersById, error.response.data));\n      } else {\n        dispatch(action.handleError());\n      }\n    });\n  };\n}\n;\nexport function getQuestionList(questionListById) {\n  console.log(questionListById);\n  const instance = axiosApi.axiosInstance();\n  let apiUrl = api.getQuestionListApi();\n  return dispatch => {\n    dispatch(action.getQuestionListPending(questionListById));\n    instance.get(apiUrl).then(response => dispatch(action.getQuestionListSuccess(questionListById, response.data))).catch(error => {\n      if (error.response) {\n        var errors = error.response.data.errors;\n        dispatch(action.getQuestionListError(questionListById, errors));\n      } else {\n        dispatch(action.handleError());\n      }\n    });\n  };\n}\n;\nexport function getPostList(postListById) {\n  const instance = axiosApi.axiosInstance();\n  let apiUrl = api.getPostListApi();\n  return dispatch => {\n    dispatch(action.getPostListPending(postListById));\n    instance.get(apiUrl).then(response => dispatch(action.getPostListSuccess(postListById, response.data))).catch(error => {\n      if (error.response) {\n        dispatch(action.getPostListError(postListById, error.response.data));\n      } else {\n        dispatch(action.handleError());\n      }\n    });\n  };\n}\n;\nexport function getQuestion(id) {\n  const instance = axiosApi.axiosInstance();\n  let apiUrl = api.getQuestionApi(id);\n  return dispatch => {\n    dispatch(action.getQuestionPending(id));\n    instance.get(apiUrl).then(response => dispatch(action.getQuestionSuccess(response.data))).catch(error => {\n      console.log(error);\n      dispatch(action.getQuestionError(id, error));\n    });\n  };\n}\n;\nexport function getPost(id) {\n  const instance = axiosApi.axiosInstance();\n  let apiUrl = api.getPostApi(id);\n  return dispatch => {\n    dispatch(action.getPostPending(id));\n    instance.get(apiUrl).then(response => dispatch(action.getPostSuccess(response.data))).catch(error => dispatch(action.getPostError(id, error)));\n  };\n}\n;\nexport function getUserProfile(id) {\n  const instance = axiosApi.axiosInstance();\n  let apiUrl = api.getProfileApi(id);\n  return dispatch => {\n    dispatch(action.getUserProfilePending(id));\n    instance.get(apiUrl).then(response => {\n      console.log(response.data);\n      dispatch(action.getUserProfileSuccess(response.data));\n    }).catch(error => {\n      if (error.response) {\n        console.log(error.response.data);\n        dispatch(action.getUserProfileError(id, error.response.data));\n      } else {\n        console.log(error);\n        dispatch(action.handleError(error.request));\n      }\n    });\n  };\n}\n;\nexport function getCommentList(byId) {\n  return dispatch => {\n    dispatch(action.getCommentListPending(byId));\n  };\n}\n;\nexport function getReplyList(props) {\n  return dispatch => {\n    dispatch(action.getReplyListPending(props.actionType, props.byId));\n  };\n}\n;\nexport function getReplyChildrenList(props) {\n  let actionType = props.actionType,\n      byId = props.byId,\n      apiUrl = props.apiUrl,\n      children = props.children;\n  const instance = axiosApi.axiosInstance();\n  console.log(props);\n\n  if (children && children.length) {\n    return dispatch => {\n      dispatch(action.getReplyChildListPending(actionType, byId));\n      dispatch(action.getReplyChildListSuccess(actionType, byId, children));\n    };\n  }\n\n  return dispatch => {\n    dispatch(action.getReplyChildListPending(actionType, byId));\n    instance.get(apiUrl).then(response => dispatch(action.getReplyChildListSuccess(actionType, byId, response.data))).catch(error => dispatch(action.getReplyChildListError(actionType, byId, error)));\n  };\n}\n;\nexport function getCurrentUser(tokenKey) {\n  let instance = axiosApi.axiosInstance();\n  console.log(tokenKey);\n  return dispatch => {\n    dispatch(action.getCurrentUserPending());\n    instance.get(\"/api/current/user/\").then(response => {\n      console.log(response);\n      dispatch(action.getCurrentUserSuccess(response.data));\n    }).catch(error => {\n      if (error.response && error.response.data) {\n        dispatch(action.getCurrentUserError(error.response.data));\n      } else {\n        dispatch(action.handleError(error.request));\n      }\n    });\n  };\n}\nexport function handleSubmit(props) {\n  console.log(props);\n  let actionType = props.actionType,\n      byId = props.byId,\n      objName = props.objName,\n      formData = props.formData,\n      apiUrl = props.apiUrl;\n  byId = byId ? byId : \"newObject\";\n  const instance = axiosApi.axiosInstance();\n\n  if (props.isPut) {\n    return dispatch => {\n      dispatch(action.updateActionPending(actionType, byId));\n      instance.put(apiUrl, formData).then(response => {\n        var payLoad = prepPayLoad(objName, response.data);\n        console.log(payLoad, props);\n        dispatch(action.updateActionSuccess(actionType, byId, payLoad));\n        dispatch(action.hideModal());\n      }).catch(error => {\n        console.log(error);\n        dispatch(action.hideModal());\n\n        if (error.response && error.response.data) {\n          dispatch(action.updateActionError(actionType, byId, error.response.data));\n        } else {\n          dispatch(action.handleError(error.request));\n        }\n      });\n    };\n  } else if (props.isPost) {\n    return dispatch => {\n      dispatch(action.createActionPending(byId, props.actionType));\n      instance.post(props.apiUrl, props.formData).then(response => {\n        dispatch(action.createActionSuccess(byId, props.actionType, response.data));\n        dispatch(action.hideModal());\n      }).catch(error => {\n        if (error.response && error.response.data) {\n          dispatch(action.createActionError(byId, props.actionType, error.response.data));\n        } else {\n          dispatch(action.handleError(error.request));\n        }\n\n        dispatch(action.hideModal());\n      });\n    };\n  } else {\n    return dispatch => {\n      dispatch(action.handleError());\n    };\n  }\n}\n;\n\nconst prepPayLoad = (objName, data) => {\n  if (objName === \"question\") {\n    data = {\n      questionObj: data\n    };\n  } else if (objName === \"answer\") {\n    data = {\n      answer: data\n    };\n  } else if (objName === \"comment\") {\n    data = {\n      comment: data\n    };\n  } else if (objName === \"reply\") {\n    data = {\n      reply: data\n    };\n  } else if (objName === \"post\") {\n    data = {\n      postObj: data\n    };\n  } else if (objName === \"userProfile\") {\n    data = {\n      user: data\n    };\n  } else if (objName === \"usersList\") {\n    data = {\n      user: data\n    };\n  }\n\n  return data;\n};","map":{"version":3,"sources":["/home/silasi/Deprojectos/javascript_projects/wiplay-it-web-frontend/src/dispatch/index.js"],"names":["Api","Axios","action","axiosApi","api","getIndex","options","instance","axiosInstance","apiUrl","getIndexApi","questionListById","answerListById","postListById","dispatch","getIndexPending","get","then","response","getIndexSuccess","data","catch","error","errors","getIndexError","handleError","getUserList","props","usersById","getUserListPending","getUserListSuccess","getUserListError","getQuestionList","console","log","getQuestionListApi","getQuestionListPending","getQuestionListSuccess","getQuestionListError","getPostList","getPostListApi","getPostListPending","getPostListSuccess","getPostListError","getQuestion","id","getQuestionApi","getQuestionPending","getQuestionSuccess","getQuestionError","getPost","getPostApi","getPostPending","getPostSuccess","getPostError","getUserProfile","getProfileApi","getUserProfilePending","getUserProfileSuccess","getUserProfileError","request","getCommentList","byId","getCommentListPending","getReplyList","getReplyListPending","actionType","getReplyChildrenList","children","length","getReplyChildListPending","getReplyChildListSuccess","getReplyChildListError","getCurrentUser","tokenKey","getCurrentUserPending","getCurrentUserSuccess","getCurrentUserError","handleSubmit","objName","formData","isPut","updateActionPending","put","payLoad","prepPayLoad","updateActionSuccess","hideModal","updateActionError","isPost","createActionPending","post","createActionSuccess","createActionError","questionObj","answer","comment","reply","postObj","user"],"mappings":"AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAQ,KAAKC,MAAb,MAA0B,wBAA1B;AAGA,MAAMC,QAAQ,GAAG,IAAIF,KAAJ,CAAU,IAAV,CAAjB;AACA,MAAMG,GAAG,GAAG,IAAIJ,GAAJ,EAAZ;AAIA,OAAO,SAASK,QAAT,CAAkBC,OAAlB,EAA2B;AAC9B,QAAMC,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,EAAjB;AACA,MAAIC,MAAM,GAAOL,GAAG,CAACM,WAAJ,EAAjB;AAF8B,MAGxBC,gBAHwB,GAG0BL,OAH1B,CAGxBK,gBAHwB;AAAA,MAGNC,cAHM,GAG0BN,OAH1B,CAGNM,cAHM;AAAA,MAGUC,YAHV,GAG0BP,OAH1B,CAGUO,YAHV;AAK9B,SAAOC,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACZ,MAAM,CAACa,eAAP,EAAD,CAAR;AACAR,IAAAA,QAAQ,CAACS,GAAT,CAAaP,MAAb,EACCQ,IADD,CACMC,QAAQ,IAAIJ,QAAQ,CAACZ,MAAM,CAACiB,eAAP,CAAuBb,OAAvB,EAAgCY,QAAQ,CAACE,IAAzC,CAAD,CAD1B,EAECC,KAFD,CAEOC,KAAK,IAAI;AACX,UAAIA,KAAK,CAACJ,QAAV,EAAoB;AAAA,YACXK,MADW,GACCD,KAAK,CAACJ,QAAN,CAAeE,IADhB,CACXG,MADW;AAEjBT,QAAAA,QAAQ,CAACZ,MAAM,CAACsB,aAAP,CAAsBD,MAAtB,CAAD,CAAR;AAEF,OAJD,MAIK;AACDT,QAAAA,QAAQ,CAACZ,MAAM,CAACuB,WAAP,EAAD,CAAR;AACN;AACH,KAVA;AAWH,GAbA;AAcH;AAAA;AAID,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,QAAMpB,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,EAAjB;AADiC,MAE3BC,MAF2B,GAELkB,KAFK,CAE3BlB,MAF2B;AAAA,MAEnBmB,SAFmB,GAELD,KAFK,CAEnBC,SAFmB;AAGjC,SAAOd,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACZ,MAAM,CAAC2B,kBAAP,CAA0BD,SAA1B,CAAD,CAAR;AACFrB,IAAAA,QAAQ,CAACS,GAAT,CAAaP,MAAb,EACGQ,IADH,CACQC,QAAQ,IAAIJ,QAAQ,CAACZ,MAAM,CAAC4B,kBAAP,CAA0BF,SAA1B,EAAqCV,QAAQ,CAACE,IAA9C,CAAD,CAD5B,EAEGC,KAFH,CAESC,KAAK,IAAI;AACf,UAAIA,KAAK,CAACJ,QAAV,EAAoB;AACjBJ,QAAAA,QAAQ,CAACZ,MAAM,CAAC6B,gBAAP,CAAwBH,SAAxB,EAAmCN,KAAK,CAACJ,QAAN,CAAeE,IAAlD,CAAD,CAAR;AACA,OAFH,MAEO;AACJN,QAAAA,QAAQ,CAACZ,MAAM,CAACuB,WAAP,EAAD,CAAR;AACA;AACH,KARH;AASA,GAXF;AAYD;AAAA;AAID,OAAO,SAASO,eAAT,CAAyBrB,gBAAzB,EAA2C;AACjDsB,EAAAA,OAAO,CAACC,GAAR,CAAYvB,gBAAZ;AACE,QAAMJ,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,EAAjB;AACA,MAAIC,MAAM,GAAOL,GAAG,CAAC+B,kBAAJ,EAAjB;AACA,SAAOrB,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACZ,MAAM,CAACkC,sBAAP,CAA8BzB,gBAA9B,CAAD,CAAR;AACFJ,IAAAA,QAAQ,CAACS,GAAT,CAAaP,MAAb,EACGQ,IADH,CACQC,QAAQ,IAAIJ,QAAQ,CAACZ,MAAM,CAACmC,sBAAP,CAA8B1B,gBAA9B,EAA+CO,QAAQ,CAACE,IAAxD,CAAD,CAD5B,EAEGC,KAFH,CAESC,KAAK,IAAI;AACf,UAAIA,KAAK,CAACJ,QAAV,EAAoB;AAAA,YACbK,MADa,GACDD,KAAK,CAACJ,QAAN,CAAeE,IADd,CACbG,MADa;AAEjBT,QAAAA,QAAQ,CAACZ,MAAM,CAACoC,oBAAP,CAA4B3B,gBAA5B,EAA8CY,MAA9C,CAAD,CAAR;AACA,OAHH,MAGO;AACJT,QAAAA,QAAQ,CAACZ,MAAM,CAACuB,WAAP,EAAD,CAAR;AACA;AACH,KATH;AAUA,GAZD;AAaF;AAAA;AAKD,OAAO,SAASc,WAAT,CAAqB1B,YAArB,EAAmC;AACxC,QAAMN,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,EAAjB;AACA,MAAMC,MAAM,GAAOL,GAAG,CAACoC,cAAJ,EAAnB;AACA,SAAO1B,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACZ,MAAM,CAACuC,kBAAP,CAA0B5B,YAA1B,CAAD,CAAR;AACFN,IAAAA,QAAQ,CAACS,GAAT,CAAaP,MAAb,EACGQ,IADH,CACQC,QAAQ,IAAIJ,QAAQ,CAACZ,MAAM,CAACwC,kBAAP,CAA0B7B,YAA1B,EAAwCK,QAAQ,CAACE,IAAjD,CAAD,CAD5B,EAEGC,KAFH,CAESC,KAAK,IAAI;AACf,UAAIA,KAAK,CAACJ,QAAV,EAAoB;AACjBJ,QAAAA,QAAQ,CAACZ,MAAM,CAACyC,gBAAP,CAAwB9B,YAAxB,EAAsCS,KAAK,CAACJ,QAAN,CAAeE,IAArD,CAAD,CAAR;AACA,OAFH,MAEO;AACJN,QAAAA,QAAQ,CAACZ,MAAM,CAACuB,WAAP,EAAD,CAAR;AACA;AACH,KARH;AASA,GAXF;AAYD;AAAA;AAID,OAAO,SAASmB,WAAT,CAAqBC,EAArB,EAAyB;AAC9B,QAAMtC,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,EAAjB;AACA,MAAIC,MAAM,GAAGL,GAAG,CAAC0C,cAAJ,CAAmBD,EAAnB,CAAb;AACA,SAAO/B,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACZ,MAAM,CAAC6C,kBAAP,CAA0BF,EAA1B,CAAD,CAAR;AACFtC,IAAAA,QAAQ,CAACS,GAAT,CAAaP,MAAb,EACGQ,IADH,CACQC,QAAQ,IAAIJ,QAAQ,CAACZ,MAAM,CAAC8C,kBAAP,CAA0B9B,QAAQ,CAACE,IAAnC,CAAD,CAD5B,EAEGC,KAFH,CAESC,KAAK,IAAI;AACXW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACAR,MAAAA,QAAQ,CAACZ,MAAM,CAAC+C,gBAAP,CAAwBJ,EAAxB,EAA4BvB,KAA5B,CAAD,CAAR;AACH,KALJ;AAMA,GARF;AASD;AAAA;AAID,OAAO,SAAS4B,OAAT,CAAiBL,EAAjB,EAAqB;AAC1B,QAAMtC,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,EAAjB;AACA,MAAIC,MAAM,GAAGL,GAAG,CAAC+C,UAAJ,CAAeN,EAAf,CAAb;AACA,SAAO/B,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACZ,MAAM,CAACkD,cAAP,CAAsBP,EAAtB,CAAD,CAAR;AACFtC,IAAAA,QAAQ,CAACS,GAAT,CAAaP,MAAb,EACGQ,IADH,CACQC,QAAQ,IAAIJ,QAAQ,CAACZ,MAAM,CAACmD,cAAP,CAAsBnC,QAAQ,CAACE,IAA/B,CAAD,CAD5B,EAEGC,KAFH,CAESC,KAAK,IAAIR,QAAQ,CAACZ,MAAM,CAACoD,YAAP,CAAoBT,EAApB,EAAwBvB,KAAxB,CAAD,CAF1B;AAGA,GALF;AAMD;AAAA;AAKD,OAAO,SAASiC,cAAT,CAAwBV,EAAxB,EAA4B;AAC/B,QAAMtC,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,EAAjB;AACA,MAAIC,MAAM,GAAQL,GAAG,CAACoD,aAAJ,CAAkBX,EAAlB,CAAlB;AAEA,SAAO/B,QAAQ,IAAI;AAEfA,IAAAA,QAAQ,CAACZ,MAAM,CAACuD,qBAAP,CAA6BZ,EAA7B,CAAD,CAAR;AACHtC,IAAAA,QAAQ,CAACS,GAAT,CAAaP,MAAb,EACIQ,IADJ,CACSC,QAAQ,IAAI;AACjBe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAQ,CAACE,IAArB;AACGN,MAAAA,QAAQ,CAACZ,MAAM,CAACwD,qBAAP,CAA6BxC,QAAQ,CAACE,IAAtC,CAAD,CAAR;AACH,KAJJ,EAKIC,KALJ,CAKUC,KAAK,IAAI;AAEb,UAAIA,KAAK,CAACJ,QAAV,EAAoB;AACnBe,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACJ,QAAN,CAAeE,IAA3B;AACGN,QAAAA,QAAQ,CAACZ,MAAM,CAACyD,mBAAP,CAA2Bd,EAA3B,EAA+BvB,KAAK,CAACJ,QAAN,CAAeE,IAA9C,CAAD,CAAR;AACF,OAHF,MAGM;AACHa,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACAR,QAAAA,QAAQ,CAACZ,MAAM,CAACuB,WAAP,CAAmBH,KAAK,CAACsC,OAAzB,CAAD,CAAR;AACD;AACJ,KAdJ;AAeA,GAlBD;AAmBH;AAAA;AAGD,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAOhD,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACZ,MAAM,CAAC6D,qBAAP,CAA6BD,IAA7B,CAAD,CAAR;AACN,GAFE;AAGH;AAAA;AAID,OAAO,SAASE,YAAT,CAAsBrC,KAAtB,EAA6B;AACjC,SAAOb,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACZ,MAAM,CAAC+D,mBAAP,CAA2BtC,KAAK,CAACuC,UAAjC,EAA6CvC,KAAK,CAACmC,IAAnD,CAAD,CAAR;AACF,GAFD;AAGF;AAAA;AAID,OAAO,SAASK,oBAAT,CAA8BxC,KAA9B,EAAqC;AAAA,MACnCuC,UADmC,GACIvC,KADJ,CACnCuC,UADmC;AAAA,MACvBJ,IADuB,GACInC,KADJ,CACvBmC,IADuB;AAAA,MACjBrD,MADiB,GACIkB,KADJ,CACjBlB,MADiB;AAAA,MACT2D,QADS,GACIzC,KADJ,CACTyC,QADS;AAExC,QAAM7D,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,EAAjB;AAEAyB,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;;AAEA,MAAIyC,QAAQ,IAAIA,QAAQ,CAACC,MAAzB,EAAiC;AAC7B,WAAOvD,QAAQ,IAAI;AACfA,MAAAA,QAAQ,CAACZ,MAAM,CAACoE,wBAAP,CAAgCJ,UAAhC,EAA4CJ,IAA5C,CAAD,CAAR;AACAhD,MAAAA,QAAQ,CAACZ,MAAM,CAACqE,wBAAP,CAAgCL,UAAhC,EAA4CJ,IAA5C,EAAkDM,QAAlD,CAAD,CAAR;AACH,KAHD;AAKH;;AAED,SAAOtD,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACZ,MAAM,CAACoE,wBAAP,CAAgCJ,UAAhC,EAA4CJ,IAA5C,CAAD,CAAR;AACHvD,IAAAA,QAAQ,CAACS,GAAT,CAAaP,MAAb,EACGQ,IADH,CACQC,QAAQ,IAAIJ,QAAQ,CAACZ,MAAM,CAACqE,wBAAP,CAAgCL,UAAhC,EAA4CJ,IAA5C,EAAkD5C,QAAQ,CAACE,IAA3D,CAAD,CAD5B,EAEGC,KAFH,CAESC,KAAK,IAAIR,QAAQ,CAACZ,MAAM,CAACsE,sBAAP,CAA8BN,UAA9B,EAA0CJ,IAA1C,EAAgDxC,KAAhD,CAAD,CAF1B;AAGA,GALA;AAMH;AAAA;AAGD,OAAO,SAASmD,cAAT,CAAwBC,QAAxB,EAAkC;AACxC,MAAInE,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,EAAf;AACGyB,EAAAA,OAAO,CAACC,GAAR,CAAYwC,QAAZ;AAEH,SAAO5D,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACZ,MAAM,CAACyE,qBAAP,EAAD,CAAR;AAEFpE,IAAAA,QAAQ,CAACS,GAAT,uBACKC,IADL,CACUC,QAAQ,IAAI;AACjBe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AACAJ,MAAAA,QAAQ,CAACZ,MAAM,CAAC0E,qBAAP,CAA6B1D,QAAQ,CAACE,IAAtC,CAAD,CAAR;AAAuD,KAH5D,EAIKC,KAJL,CAIWC,KAAK,IAAG;AACd,UAAIA,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeE,IAArC,EAA2C;AAC1CN,QAAAA,QAAQ,CAACZ,MAAM,CAAC2E,mBAAP,CAA2BvD,KAAK,CAACJ,QAAN,CAAeE,IAA1C,CAAD,CAAR;AACA,OAFD,MAEK;AACJN,QAAAA,QAAQ,CAACZ,MAAM,CAACuB,WAAP,CAAmBH,KAAK,CAACsC,OAAzB,CAAD,CAAR;AACA;AACD,KAVL;AAWA,GAdD;AAeA;AAKD,OAAO,SAASkB,YAAT,CAAsBnD,KAAtB,EAA6B;AACjCM,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AADiC,MAE3BuC,UAF2B,GAEqBvC,KAFrB,CAE3BuC,UAF2B;AAAA,MAEfJ,IAFe,GAEqBnC,KAFrB,CAEfmC,IAFe;AAAA,MAETiB,OAFS,GAEqBpD,KAFrB,CAEToD,OAFS;AAAA,MAEAC,QAFA,GAEqBrD,KAFrB,CAEAqD,QAFA;AAAA,MAEUvE,MAFV,GAEqBkB,KAFrB,CAEUlB,MAFV;AAIjCqD,EAAAA,IAAI,GAAGA,IAAI,GAACA,IAAD,GAAM,WAAjB;AACA,QAAMvD,QAAQ,GAAGJ,QAAQ,CAACK,aAAT,EAAjB;;AAEA,MAAImB,KAAK,CAACsD,KAAV,EAAiB;AAChB,WAAOnE,QAAQ,IAAI;AACjBA,MAAAA,QAAQ,CAACZ,MAAM,CAACgF,mBAAP,CAA2BhB,UAA3B,EAAsCJ,IAAtC,CAAD,CAAR;AAEJvD,MAAAA,QAAQ,CAAC4E,GAAT,CAAa1E,MAAb,EAAqBuE,QAArB,EACC/D,IADD,CACMC,QAAQ,IAAI;AACjB,YAAIkE,OAAO,GAAGC,WAAW,CAACN,OAAD,EAAU7D,QAAQ,CAACE,IAAnB,CAAzB;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYkD,OAAZ,EAAqBzD,KAArB;AACAb,QAAAA,QAAQ,CAACZ,MAAM,CAACoF,mBAAP,CAA2BpB,UAA3B,EAAuCJ,IAAvC,EAA6CsB,OAA7C,CAAD,CAAR;AACAtE,QAAAA,QAAQ,CAACZ,MAAM,CAACqF,SAAP,EAAD,CAAR;AACA,OAND,EAOClE,KAPD,CAOOC,KAAK,IAAI;AACfW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACAR,QAAAA,QAAQ,CAACZ,MAAM,CAACqF,SAAP,EAAD,CAAR;;AACA,YAAIjE,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeE,IAArC,EAA2C;AACxCN,UAAAA,QAAQ,CAACZ,MAAM,CAACsF,iBAAP,CAAyBtB,UAAzB,EAAqCJ,IAArC,EAA2CxC,KAAK,CAACJ,QAAN,CAAeE,IAA1D,CAAD,CAAR;AACF,SAFD,MAEK;AACAN,UAAAA,QAAQ,CAACZ,MAAM,CAACuB,WAAP,CAAmBH,KAAK,CAACsC,OAAzB,CAAD,CAAR;AACA;AACH,OAfH;AAiBA,KApBE;AAqBA,GAtBD,MAsBM,IAAIjC,KAAK,CAAC8D,MAAV,EAAkB;AACnB,WAAO3E,QAAQ,IAAI;AACjBA,MAAAA,QAAQ,CAACZ,MAAM,CAACwF,mBAAP,CAA2B5B,IAA3B,EAAiCnC,KAAK,CAACuC,UAAvC,CAAD,CAAR;AAEJ3D,MAAAA,QAAQ,CAACoF,IAAT,CAAchE,KAAK,CAAClB,MAApB,EAA4BkB,KAAK,CAACqD,QAAlC,EACC/D,IADD,CACMC,QAAQ,IAAI;AAEjBJ,QAAAA,QAAQ,CAACZ,MAAM,CAAC0F,mBAAP,CAA2B9B,IAA3B,EAAiCnC,KAAK,CAACuC,UAAvC,EAAmDhD,QAAQ,CAACE,IAA5D,CAAD,CAAR;AACSN,QAAAA,QAAQ,CAACZ,MAAM,CAACqF,SAAP,EAAD,CAAR;AACT,OALD,EAMClE,KAND,CAMOC,KAAK,IAAI;AAEf,YAAIA,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeE,IAArC,EAA2C;AAC1CN,UAAAA,QAAQ,CAACZ,MAAM,CAAC2F,iBAAP,CAAyB/B,IAAzB,EAA+BnC,KAAK,CAACuC,UAArC,EAAiD5C,KAAK,CAACJ,QAAN,CAAeE,IAAhE,CAAD,CAAR;AAEO,SAHR,MAGY;AACHN,UAAAA,QAAQ,CAACZ,MAAM,CAACuB,WAAP,CAAmBH,KAAK,CAACsC,OAAzB,CAAD,CAAR;AACA;;AAET9C,QAAAA,QAAQ,CAACZ,MAAM,CAACqF,SAAP,EAAD,CAAR;AACG,OAhBJ;AAiBD,KApBG;AAsBJ,GAvBK,MAuBD;AAEF,WAAOzE,QAAQ,IAAG;AAClBA,MAAAA,QAAQ,CAACZ,MAAM,CAACuB,WAAP,EAAD,CAAR;AACA,KAFA;AAGH;AACF;AAAA;;AAGD,MAAM4D,WAAW,GAAG,CAACN,OAAD,EAAU3D,IAAV,KAAiB;AAEpC,MAAG2D,OAAO,KAAK,UAAf,EAA0B;AACvB3D,IAAAA,IAAI,GAAG;AAAE0E,MAAAA,WAAW,EAAG1E;AAAhB,KAAP;AACF,GAFD,MAGK,IAAG2D,OAAO,KAAK,QAAf,EAAwB;AACxB3D,IAAAA,IAAI,GAAG;AAAE2E,MAAAA,MAAM,EAAG3E;AAAX,KAAP;AACJ,GAFI,MAGA,IAAG2D,OAAO,KAAK,SAAf,EAAyB;AAC7B3D,IAAAA,IAAI,GAAG;AAAE4E,MAAAA,OAAO,EAAG5E;AAAZ,KAAP;AACA,GAFI,MAGA,IAAG2D,OAAO,KAAK,OAAf,EAAuB;AAC3B3D,IAAAA,IAAI,GAAG;AAAE6E,MAAAA,KAAK,EAAG7E;AAAV,KAAP;AACA,GAFI,MAGA,IAAG2D,OAAO,KAAK,MAAf,EAAsB;AAC1B3D,IAAAA,IAAI,GAAG;AAAE8E,MAAAA,OAAO,EAAG9E;AAAZ,KAAP;AACA,GAFI,MAIA,IAAG2D,OAAO,KAAK,aAAf,EAA6B;AACjC3D,IAAAA,IAAI,GAAG;AAAC+E,MAAAA,IAAI,EAAG/E;AAAR,KAAP;AACA,GAFI,MAIA,IAAG2D,OAAO,KAAK,WAAf,EAA2B;AAC/B3D,IAAAA,IAAI,GAAG;AAAC+E,MAAAA,IAAI,EAAG/E;AAAR,KAAP;AACA;;AAGC,SAAOA,IAAP;AACF,CA5BD","sourcesContent":["\nimport Api from 'api';\nimport Axios from 'axios_instance';\nimport  * as action  from 'actions/actionCreators';\n\n\nconst axiosApi = new Axios(true);  \nconst api = new Api();\n\n\n\nexport function getIndex(options) {\n    const instance = axiosApi.axiosInstance();  \n    let apiUrl     = api.getIndexApi();  \n    var { questionListById, answerListById, postListById} = options;\n\n    return dispatch => {\n       dispatch(action.getIndexPending())\n       instance.get(apiUrl)\n       .then(response => dispatch(action.getIndexSuccess(options ,response.data)))\n       .catch(error => {\n            if (error.response) {\n               var { errors } =  error.response.data\n               dispatch(action.getIndexError( errors ));\n\n            }else{\n                dispatch(action.handleError());\n         }\n      }); \n   };\n};\n\n\n\nexport function getUserList(props) {\n  const instance = axiosApi.axiosInstance();  \n  var { apiUrl, usersById } = props;  \n  return dispatch => {\n      dispatch(action.getUserListPending(usersById))\n\t   instance.get(apiUrl)\n      .then(response => dispatch(action.getUserListSuccess(usersById, response.data)))\n      .catch(error => {\n      \tif (error.response) {\n      \t   dispatch(action.getUserListError(usersById, error.response.data));\n         }else{\n         \tdispatch(action.handleError());\n         }\n      }); \n   };\n};\n\n\n\nexport function getQuestionList(questionListById) {\n\tconsole.log(questionListById)\n   const instance = axiosApi.axiosInstance();  \n   let apiUrl     = api.getQuestionListApi();  \n   return dispatch => {\n      dispatch(action.getQuestionListPending(questionListById))\n\t   instance.get(apiUrl)\n      .then(response => dispatch(action.getQuestionListSuccess(questionListById,response.data)))\n      .catch(error => {\n      \tif (error.response) {\n      \t\tvar { errors } =  error.response.data\n      \t   dispatch(action.getQuestionListError(questionListById, errors ));\n         }else{\n         \tdispatch(action.handleError());\n         }\n      }); \n   };\n};\n\n\n\n\nexport function getPostList(postListById) {\n  const instance = axiosApi.axiosInstance();  \n  let   apiUrl     = api.getPostListApi();  \n  return dispatch => {\n      dispatch(action.getPostListPending(postListById))\n\t   instance.get(apiUrl)\n      .then(response => dispatch(action.getPostListSuccess(postListById, response.data)))\n      .catch(error => {\n      \tif (error.response) {\n      \t   dispatch(action.getPostListError(postListById, error.response.data));\n         }else{\n         \tdispatch(action.handleError());\n         }\n      }); \n   };\n};\n\n\n\nexport function getQuestion(id) {\n  const instance = axiosApi.axiosInstance();  \n  let apiUrl = api.getQuestionApi(id);\n  return dispatch => {\n      dispatch(action.getQuestionPending(id))\n\t   instance.get(apiUrl)\n      .then(response => dispatch(action.getQuestionSuccess(response.data)))\n      .catch(error => {\n           console.log(error)\n           dispatch(action.getQuestionError(id, error));\n       })\n   }\n};\n\n\n\nexport function getPost(id) {\n  const instance = axiosApi.axiosInstance();  \n  let apiUrl = api.getPostApi(id);\n  return dispatch => {\n      dispatch(action.getPostPending(id))\n\t   instance.get(apiUrl)\n      .then(response => dispatch(action.getPostSuccess(response.data)))\n      .catch(error => dispatch(action.getPostError(id, error))) \n   }\n};\n\n\n\n\nexport function getUserProfile(id) {\n    const instance = axiosApi.axiosInstance();  \n    let apiUrl    =   api.getProfileApi(id);\n\n    return dispatch => {\n\n        dispatch(action.getUserProfilePending(id))\n\t    instance.get(apiUrl)\n        .then(response => {\n        \tconsole.log(response.data)\n            dispatch(action.getUserProfileSuccess(response.data));\n        })\n        .catch(error => {\n      \t\n      \t    if (error.response) {\n      \t\t    console.log(error.response.data)\n      \t        dispatch(action.getUserProfileError(id, error.response.data));\n            }else{\n         \t    console.log(error)\n         \t    dispatch(action.handleError(error.request));\n            }\n        });\n    }\n};\n\n\nexport function getCommentList(byId) {\n    return dispatch => {\n        dispatch(action.getCommentListPending(byId))\n\t}\n};\n\n\n\nexport function getReplyList(props) {\n   return dispatch => {\n      dispatch(action.getReplyListPending(props.actionType, props.byId ))\n   }\n};\n\n\n\nexport function getReplyChildrenList(props) {\n    let {actionType, byId, apiUrl, children } = props;\n    const instance = axiosApi.axiosInstance();\n\n    console.log(props)\n\n    if (children && children.length) {\n        return dispatch => {\n            dispatch(action.getReplyChildListPending(actionType, byId));\n            dispatch(action.getReplyChildListSuccess(actionType, byId, children));\n        }\n        \n    }\n\n    return dispatch => {\n       dispatch(action.getReplyChildListPending(actionType, byId))\n\t   instance.get(apiUrl)\n      .then(response => dispatch(action.getReplyChildListSuccess(actionType, byId, response.data)))\n      .catch(error => dispatch(action.getReplyChildListError(actionType, byId, error))) \n   }\n};\n\n\nexport function getCurrentUser(tokenKey) {\n\tlet instance = axiosApi.axiosInstance();\n    console.log(tokenKey)\n\t\n\treturn dispatch => {\n\t  \tdispatch(action.getCurrentUserPending());\n\n\t\tinstance.get(`/api/current/user/`)\n      .then(response => {\n      \tconsole.log(response)\n      \tdispatch(action.getCurrentUserSuccess(response.data)) })\n      .catch(error =>{\n      \tif (error.response && error.response.data) {\n      \t\tdispatch(action.getCurrentUserError(error.response.data))\n      \t}else{\n      \t\tdispatch(action.handleError(error.request))\n      \t}\n      });\n\t}\n}\n\n\n\n\nexport function handleSubmit(props) {\n   console.log(props)\n   let { actionType, byId, objName, formData, apiUrl } = props;\n   \n   byId = byId?byId:\"newObject\"; \n   const instance = axiosApi.axiosInstance();\n      \n   if (props.isPut) {\n   \treturn dispatch => {\n     \tdispatch(action.updateActionPending(actionType,byId))\n\n\t\tinstance.put(apiUrl, formData)\n\t\t.then(response => {\n\t\t\tvar payLoad = prepPayLoad(objName, response.data);\n\t\t\tconsole.log(payLoad, props) \n\t\t\tdispatch(action.updateActionSuccess(actionType, byId, payLoad));\n\t\t\tdispatch(action.hideModal())\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error)\n\t\t\tdispatch(action.hideModal())\n\t\t\tif (error.response && error.response.data) {\n\t\t\t   dispatch(action.updateActionError(actionType, byId, error.response.data));\n\t\t\t}else{\n      \t\tdispatch(action.handleError(error.request))\n      \t}\n\t   })\n\n\t}\n   }else if (props.isPost) {\n        return dispatch => {\n     \t    dispatch(action.createActionPending(byId, props.actionType ))\n\n\t\t    instance.post(props.apiUrl, props.formData)\n\t\t    .then(response => {\n\t\t\t\n\t\t\t    dispatch(action.createActionSuccess(byId, props.actionType, response.data));\n                dispatch(action.hideModal());\n\t\t    })\n\t\t    .catch(error => {\n\t\t\t\t\n\t\t\t    if (error.response && error.response.data) {\n\t\t\t\t    dispatch(action.createActionError(byId ,props.actionType, error.response.data));\n      \t\t\n         \t    }else{\n      \t        \tdispatch(action.handleError(error.request))\n      \t        }\n\n\t\t\t    dispatch(action.hideModal())\n\t        })\n   \t}\n\n   }else{\n\n      return dispatch =>{\n \t\t   dispatch(action.handleError())\n \t   }\n \t}\n};\n\n\nconst prepPayLoad = (objName, data)=>{\n\t\n\tif(objName === \"question\"){\n\t   data = { questionObj : data };\n\t}\n\telse if(objName === \"answer\"){\n      data = { answer : data };\n\t}\n\telse if(objName === \"comment\"){\n\t\tdata = { comment : data };\n\t}\n\telse if(objName === \"reply\"){\n\t\tdata = { reply : data };\n\t}\n\telse if(objName === \"post\"){\n\t\tdata = { postObj : data };\n\t}\n\n\telse if(objName === \"userProfile\"){\n\t\tdata = {user : data};\n\t}\n\n\telse if(objName === \"usersList\"){\n\t\tdata = {user : data};\n\t}\n\n\n   return data;\n};  \n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}